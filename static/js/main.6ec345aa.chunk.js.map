{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","func","keys_str","forEach","arr","key","replace","concat","useCases","map","arrOfUseCaseAndItsSteps","uc","steps","match","Object","defineProperty","obj_uc_steps","entry","entries","Array","isArray","window","open","document","write","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","value","getElementById","select","execCommand","returnLinkToJenkinsJob","data","jenkinsLink","getUrlToImageInFirebase","arrWithData","name","findID","ID","directoryPath","join","BreadcrumbItems","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","index","react_default","a","createElement","className","rel","onClick","href","length","React","Component","SearchResultItems","shouldBeOpen","isOpen","arrOfAllSteps","onBreadcrumbClickHandler","describeTag_arr","asyncToGenerator","regenerator_default","mark","_callee","fileName","arrWithCleanSteps","elem","arrWithSteps","reg2","newArr1","newArr2","wrap","_context","prev","next","console","log","split","querySelector","sent","classList","remove","setState","includes","getAllStepsFromFullBase","consumerBase","proBase","step","RegExp","test","push","sort","getImageFromFirebaseStorage","stop","_callee2","urlOfImageInFirebase","storage","pathReference","firebaseURL","_context2","JSON","stringify","firebase","refFromURL","getDownloadURL","then","url","catch","error","code","onItemClickedHandler","env","arguments","undefined","urlToFile","showTagIfOpen","describeTag_View","pathToFile","i","arrWithUCWithStepInDescriptor","numberOfAllUC","numberState","wantedWords","chosenKeyWords","arrWithStepsOfCurrentUseCase","allHashTags","charAt","toUpperCase","substring","hashTag","allKeyWords","keyWord","fullUseCaseName_arr","str","useCaseNameWithoutTag_arr","trim","randomNum","Math","floor","random","Row","Col","sm","md","size","offset","Breadcrumb","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","singleTag","singleKeyWord","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","reg","src","alt","InputGroup","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","JumbotronComponent","Jumbotron","fluid","ucInfoObj","detailsSwitchView","ButtonGroup","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","number","numberConsumer","numberPro","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","filePath","arrOfUseCasesKeys","keys","values","add","base","numberOfAllUseCases","toConsumableArray","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","consumer","pro","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","arrWithKeyWord","KeyWordsConnectorComponent","selected","clickHandler","getBackConnector","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onChange","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","returnNumberOfItems","itemsArr","counter","nestedArr","_this$props$state","searchButtonClicked","numberOfItems","InstructComponent","text","SearchAlgorithmTextComponent","categoriesOfEnvironment","result","kindOfHashTag","_ref2","connector","arrOfWantedWords","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","ucArr","updatedBase","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","arrOfAllKeyWords","arrOfKeyWords","oneHundredPercent","obj","callback","total","newObj","item","hasOwnProperty","Number","parseFloat","returnPercentageOfEachKeyWord","reduce","toPrecision","returnUpdatedListOfUseCases_ifOneWord","wantedValue","updatedList","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","firstKeyWord","secondKeyWord","thirdKeyWord","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","readyToProceed","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","showWholeBase","_returnUpdatedListOfU","hashTagName","has","delete","ref","once","snapshot","changeBaseToProperForm","changedBase","JumbotronComponent_JumbotronComponent","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","SearchButtonComponent_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ec345aa.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items, func) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n    let key = arr[0].replace(/%5C|%2F/g, '/');\r\n    keys_str += `<br /><form style=\"font-weight:bold\">${key}</form>`;\r\n\r\n    let useCases = '';\r\n\r\n    let newArr = arr[1].map(arrOfUseCaseAndItsSteps => {\r\n      let uc = arrOfUseCaseAndItsSteps[0];\r\n      let steps = arrOfUseCaseAndItsSteps[1];\r\n      uc = uc.replace(/;/g, '.').replace(/\\|/, '/');\r\n      uc = uc.match(/It:.+|Step.+/gmi);\r\n      return {\r\n        [uc[0]]: steps\r\n      };\r\n    });\r\n\r\n    newArr.forEach(obj_uc_steps => {\r\n      const entry = Object.entries(obj_uc_steps)[0];\r\n      useCases += `<p style=\"color:black;width:100%;${func?'font-weight:bold;':''}\">${entry[0]}</p>`;\r\n\r\n      if(Array.isArray(entry[1]) && func === 'WITH DESCRIPTIONS') {\r\n        entry[1].forEach(steps => {\r\n          useCases += `<p style=\"color:black;width:100%;font-style:italic;margin-left:40px\">${steps}</p>`\r\n        })\r\n      }\r\n\r\n    });\r\n\r\n    keys_str += useCases;\r\n\r\n  });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write(`<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>${keys_str}</div></section>`);\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst getUrlToImageInFirebase = (arrWithData, name) => {\r\n\r\n  const findID = name.match(/ID_.{2}/);\r\n  const ID = findID? findID[0].replace('ID_', ''): 'NO_ID';\r\n  const directoryPath = arrWithData.join('/');\r\n\r\n  return `gs://use-cases-search.appspot.com/${directoryPath}.js/${ID}.jpg`\r\n\r\n};\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnLinkToJenkinsJob,\r\n  prepareHTMLOfSearchResults,\r\n  getUrlToImageInFirebase\r\n}","import React from 'react';\r\nimport {returnLinkToJenkinsJob} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const arrWithData = this.props.arrWithData;\r\n    this.state = {\r\n      arrWithData: arrWithData\r\n    }\r\n  }\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.state.arrWithData ? this.state.arrWithData.map((data, index, arr) => {\r\n          return (\r\n            (index === 1) ?\r\n\r\n              <div key={data} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"jenkins-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={returnLinkToJenkinsJob(data, arr)}\r\n                >{data}\r\n                </a>\r\n              </div> : (index === this.state.arrWithData.length - 1) ?\r\n              <div key={data} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"github-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + this.state.arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </div> : (index === 0) ?\r\n                <div key={data} className=\"breadcrumb-link_mod\">ENV:<span className=\"environment_mod\">{data}</span></div> : null\r\n\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb, Button, Card, CardBody, Col, Collapse, Input, InputGroup, Row} from 'reactstrap';\r\nimport Highlighter from 'react-highlight-words';\r\nimport BreadcrumbItems from './BreadcrumbItems';\r\nimport {saveToClipboard, getUrlToImageInFirebase} from '../helpers/helperFunctions';\r\nimport firebase from '@firebase/app';\r\nimport '@firebase/storage';\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, arr, describeTag_arr) => async () => {\r\n\r\n    console.log('onBreadcrumbClickHandler');\r\n\r\n    const arrWithData = arr[0].split(/%5C|%2F/);\r\n    const fileName = arrWithData[2];\r\n    let arrWithCleanSteps = [];\r\n    // const pathToFilePreparedForFirebaseStorage = arrWithData.join('_').toLowerCase();\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove('show');\r\n      this.setState({\r\n        isOpen: false\r\n      });\r\n    }\r\n\r\n    if (this.state.isOpen === false) {\r\n\r\n      let arrWithSteps = [];\r\n\r\n      if (describeTag_arr.includes('Step')) {\r\n        arrWithSteps = this.getAllStepsFromFullBase(this.props.consumerBase, this.props.proBase, arr[0]);\r\n      }\r\n\r\n      // prepare steps to show in collapse dialog\r\n      if (0 in arrWithSteps) {\r\n        arrWithSteps.forEach(step => {\r\n\r\n          // mark step which must be highlighted\r\n          const reg = new RegExp(describeTag_arr);\r\n          if (reg.test(step)) {\r\n            step = step.concat('_XOXO');\r\n          }\r\n          arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n        });\r\n\r\n        // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n        const reg2 = new RegExp(/ [0-9]of/);\r\n        const newArr1 = [];\r\n        const newArr2 = [];\r\n\r\n        arrWithCleanSteps.forEach((step) => {\r\n          if (reg2.test(step)) {\r\n            newArr1.push(step);\r\n          } else {\r\n            newArr2.push(step);\r\n          }\r\n        });\r\n\r\n        newArr1.sort();\r\n        newArr2.sort();\r\n        arrWithCleanSteps = [...newArr1, ...newArr2];\r\n      }\r\n\r\n    }\r\n\r\n    this.getImageFromFirebaseStorage(uc, arrWithData);\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: arrWithCleanSteps,\r\n        fileName,\r\n        arrWithData\r\n      };\r\n    });\r\n\r\n  };\r\n\r\n  getImageFromFirebaseStorage = async (name, arrWithData) => {\r\n\r\n    if (!this.state.isOpen && !this.state[name]) {\r\n\r\n      console.log('GET STORAGE');\r\n\r\n      const urlOfImageInFirebase = getUrlToImageInFirebase(arrWithData, name);\r\n      console.log('typeof urlOfImageInFirebase: ', typeof urlOfImageInFirebase, JSON.stringify(urlOfImageInFirebase, null, 4));\r\n      const storage = firebase.storage();\r\n      const pathReference = storage.refFromURL(urlOfImageInFirebase);\r\n\r\n      const firebaseURL = await pathReference.getDownloadURL().then(function(url) {\r\n\r\n        return url;\r\n\r\n        // Insert url into an <img> tag to \"download\"\r\n      }).catch(function(error) {\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n\r\n        console.log('typeof error.code: ', typeof error.code, JSON.stringify(error.code, null, 4));\r\n      });\r\n\r\n      await this.setState({\r\n        [name]: firebaseURL || 'https://firebasestorage.googleapis.com/v0/b/use-cases-search.appspot.com/o/greta.jpg?alt=media&token=23552523-53c9-418c-a9dd-a7887cd46236'\r\n      });\r\n    }\r\n  };\r\n\r\n  onItemClickedHandler = (arrWithData = []) => {\r\n\r\n    let env;\r\n\r\n    switch (arrWithData[0]) {\r\n      case 'CONSUMER':\r\n        env = 'master';\r\n        break;\r\n      case 'PRO':\r\n        env = 'master-pro';\r\n        break;\r\n      case 'LIVE':\r\n        env = 'live';\r\n        break;\r\n      default:\r\n        env = 'master';\r\n    }\r\n\r\n    let urlToFile = arrWithData.join('/').concat('.js');\r\n    return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show';\r\n    }\r\n  };\r\n\r\n  showTagIfOpen = (key, describeTag_arr, describeTag_View) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return describeTag_arr;\r\n    } else {\r\n      return describeTag_View;\r\n    }\r\n  };\r\n\r\n  getAllStepsFromFullBase = (consumerBase, proBase, pathToFile) => {\r\n\r\n    let arrWithSteps = [];\r\n\r\n    if (pathToFile.includes('CONSUMER')) {\r\n      for (let i = 0; i < consumerBase.length; i++) {\r\n        if (consumerBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          consumerBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    } else if (pathToFile.includes('PRO')) {\r\n      for (let i = 0; i < proBase.length; i++) {\r\n        if (proBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          proBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arrWithSteps;\r\n  };\r\n\r\n  render() {\r\n    let numberOfAllUC = 0;\r\n\r\n    this.props.items.forEach(arr => {\r\n      numberOfAllUC += arr[1].length;\r\n    });\r\n\r\n    let numberState = numberOfAllUC;\r\n    let wantedWords = this.props.wantedWords;\r\n    let chosenKeyWords = this.props.chosenKeyWords;\r\n\r\n    return (this.props.items ? this.props.items.map(arr => {\r\n\r\n          return arr[1].map(arrOfUseCaseAndItsSteps => {\r\n\r\n            const arrWithStepsOfCurrentUseCase = typeof arrOfUseCaseAndItsSteps[1] !== 'string' ? arrOfUseCaseAndItsSteps[1] : [];\r\n            let uc = arrOfUseCaseAndItsSteps[0];\r\n\r\n            // if use case have '!validation;' key words do not show this use case.\r\n            if (!(/!validation;/.test(uc))) {\r\n\r\n              uc = uc.charAt(0).toUpperCase() + uc.substring(1) + '.';\r\n              uc = uc.replace(/;/gmi, '.').replace(/\\|/gmi, '/');\r\n\r\n              // cut into chunks: hash tags, constant keywords, full use case name (with describe Tag name) and use cases without describe tag name.\r\n              let allHashTags = uc.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm); // #hashtag1 #hashtag2\r\n\r\n              if (allHashTags) {\r\n                allHashTags = allHashTags.map(hashTag => {\r\n                  return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n                });\r\n              }\r\n\r\n              let allKeyWords = uc.match(/![a-zA-Z0-9-_]+\\./gmi); // !keyWord1, !keyWord2.\r\n\r\n              if (allKeyWords) {\r\n                allKeyWords = allKeyWords.map(keyWord => {\r\n                  return keyWord.replace(/!/, '').replace(/\\./, ',');\r\n                });\r\n              }\r\n\r\n              const fullUseCaseName_arr = /It|Step/.test(uc) ? uc.match(/It:.+|Step.+/gmi) : [uc]; // It: something. OR Step 1of5: something OR Step: something\r\n              const str = /It|Step/.test(fullUseCaseName_arr[0]) ? fullUseCaseName_arr[0].replace(/Step [0-9]+of[0-9]+:/, '').replace(/It:/, '').replace(/Step:/, '') : fullUseCaseName_arr[0];\r\n              const describeTag_arr = /It: |Step /.test(uc) ? uc.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n              const describeTag_View = ['UseCase:'];\r\n\r\n              const useCaseNameWithoutTag_arr = [];\r\n              useCaseNameWithoutTag_arr.push(str.trim());\r\n              const randomNum = () => Math.floor(Math.random() * 1000);\r\n\r\n              return (<Row key={uc + randomNum()}>\r\n                <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n                  <Breadcrumb className=\"list-item_mod\">\r\n\r\n                    <div className=\"breadcrumb-header\" onClick={this.onBreadcrumbClickHandler(uc, arr, describeTag_arr[0])}>\r\n\r\n                    <div className=\"breadcrumb-item-mod\">\r\n                      <span className=\"item-number_mod\">{(numberOfAllUC++) - (numberState - 1)}.</span>\r\n                    </div>\r\n                    <div className=\"use_case-text_mod\">\r\n                      <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? 'list-text_mod2' : 'list-text_mod1'}\r\n                          highlightClassName=\"highlight-describeTag\"\r\n                          searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n                          autoEscape={true}\r\n                          textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n                      />\r\n                      <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? 'list-text_mod2 font-roboto' : 'list-text_mod1 font-roboto'}\r\n                          highlightClassName=\"highlight-text\"\r\n                          searchWords={wantedWords}\r\n                          autoEscape={true}\r\n                          textToHighlight={useCaseNameWithoutTag_arr[0]}\r\n                      />\r\n                    </div>\r\n                    <div className=\"item-footer-mod\">\r\n                      <div className=\"hashtags-title-mod\">HASHTAGS:\r\n                        {allHashTags ? allHashTags.map(singleTag => {\r\n                          return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>;\r\n                        }) : null}\r\n                      </div>\r\n\r\n                      <div className=\"keywords-title-mod\">KEY WORDS:\r\n                        {allKeyWords ? allKeyWords.map(singleKeyWord => {\r\n                          return <Highlighter\r\n                              key={singleKeyWord + randomNum()}\r\n                              className=\"keyword-item-mod\"\r\n                              highlightClassName=\"highlight-text\"\r\n                              searchWords={chosenKeyWords ? chosenKeyWords : []}\r\n                              autoEscape={true}\r\n                              textToHighlight={singleKeyWord}\r\n                          />;\r\n                        }) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse-card-mod\">\r\n                      <Collapse className={this.shouldBeOpen(uc)}>\r\n                        <Card>\r\n                          <CardBody>\r\n                            <BreadcrumbItems arrWithData={this.state.arrWithData}/>\r\n\r\n                            <div className=\"uc-description_and_image-section\">\r\n\r\n                              <div className=\"steps-section\">\r\n                                {arrWithStepsOfCurrentUseCase.length ? <div className=\"collapse-steps collapse-descriptors test-description margin-bottom\">\r\n                                  {<div className=\"test-description-title\">DESCRIPTION OF THIS TEST (step by step):</div>}\r\n                                  {arrWithStepsOfCurrentUseCase.map(step => {\r\n                                    return (<div key={step} className=\"collapse-step_mod2\">{step}</div>);\r\n                                  })}\r\n                                </div> : null}\r\n\r\n                                {this.state.arrOfAllSteps.length ? <div className=\"collapse-steps collapse-descriptors test-description\">\r\n                                  <div className=\"test-description-title\">OTHER USE CASES (tests which are called \"Steps\") IN FILE {this.state.fileName}.js:</div>\r\n                                  {this.state.arrOfAllSteps.map(step => {\r\n                                    const reg = new RegExp(/_XOXO/);\r\n                                    return <div key={step} className={reg.test(step) ? 'collapse-step_mod1' : 'collapse-step_mod2'}>{step.replace(/_XOXO/, '')}</div>;\r\n                                  })}\r\n                                </div> : null}\r\n\r\n                              </div>\r\n\r\n                              <div className=\"use-case-image\">\r\n                                {<img src={this.state[uc]} alt={uc}/>}\r\n                              </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"collapse-inputGroup_mod\">\r\n                              <InputGroup size=\"sm\">\r\n                                {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n                                <Button color=\"success\"\r\n                                        size=\"sm\"\r\n                                        outline\r\n                                        className=\"collapse-button_mod\"\r\n                                        value={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                        onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n                                <Input placeholder=\"\"\r\n                                       type=\"text\"\r\n                                       spellCheck=\"false\"\r\n                                       value={useCaseNameWithoutTag_arr[0]}\r\n                                       readOnly\r\n                                       className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                                       id={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                              </InputGroup>\r\n\r\n                              <InputGroup size=\"sm\">\r\n                                <Button color=\"success\"\r\n                                        size=\"sm\"\r\n                                        outline\r\n                                        className=\"collapse-button_mod\"\r\n                                        value={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                        onClick={saveToClipboard()}>Copy run command</Button>\r\n                                <Input placeholder=\"\"\r\n                                       type=\"text\"\r\n                                       spellCheck=\"false\"\r\n                                       value={this.onItemClickedHandler(this.state.arrWithData, uc)}\r\n                                       readOnly\r\n                                       className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                                       id={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                              </InputGroup>\r\n                            </div>\r\n\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Collapse>\r\n                    </div>\r\n\r\n                  </Breadcrumb>\r\n\r\n                </Col>\r\n              </Row>);\r\n            }\r\n            return '';\r\n          });\r\n        }) : null\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {ButtonGroup, Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className={(this.props.ucInfoObj && this.props.detailsSwitchView) || (this.props.name && this.props.detailsSwitchView) ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE CASES SEARCH</h1>\r\n        {[0] in this.props.items? <ButtonGroup className=\"print_view-button_mod\">\r\n\r\n                                      <Button color=\"primary\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.items)}>Print View of this list\r\n                                      </Button>\r\n\r\n                                      <Button color=\"warning\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.items, 'WITH DESCRIPTIONS')}>WITH DESCRIPTIONS\r\n                                      </Button>\r\n                                  </ButtonGroup>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let number = 0, numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    const filePath = arr[0]; // string: path to file: \"CONSUMER%2FGROUPS%2FGENERAL_GROUPS%2Fgroup_uc05\"\r\n    const arrOfUseCasesKeys = Object.keys(arr[1]); // array: files paths: [\"HSH_Settings; !guest; !members; Step 2of7: Members settings; Temporary deactivation of Guest account\", (...)]\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const arrOfUseCasesValues = Object.values(arr[1]); // array: values: [ \"BEFORE: (...)\", \"STEP 1: (...)\", \"STEP 2: (...)\", \"ASSERT: (...)\", \"END: (...)\" ]\r\n\r\n    arr[1] = Object.entries(arr[1]);\r\n\r\n    number += arrOfUseCasesKeys.length;\r\n\r\n    if (/CONSUMER|LIVE/mi.test(filePath)) {\r\n\r\n      consumerList.push(arr);\r\n\r\n      numberConsumer += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(filePath)) {\r\n\r\n      proList.push(arr);\r\n\r\n      numberPro += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    numberOfAllUseCases: number,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  const chosenHashtag = state.hashtag;\r\n  const uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n  const uniqHashTagsForPro = state.uniqHashTagsForPro;\r\n\r\n  const consumer_chkbox = state.consumer_chkbox;\r\n  const pro_chkbox = state.pro_chkbox;\r\n\r\n  const consumer_hashTags_exist = uniqHashTagsForConsumer && uniqHashTagsForConsumer.length;\r\n  const consumer =  consumer_hashTags_exist && consumer_chkbox && pro_chkbox === false;\r\n\r\n  const pro_hashTags_exist = uniqHashTagsForPro && uniqHashTagsForPro.length;\r\n  const pro =  pro_hashTags_exist && consumer_chkbox === false && pro_chkbox;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          consumer ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n\r\n              )\r\n            })\r\n          ) : pro ? (\r\n            uniqHashTagsForPro.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })\r\n          ): null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const arr = Object.entries(keyWords);\r\n\r\n  arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          arr.map(arrWithKeyWord => {\r\n\r\n            if (0 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 5) {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (5 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 10) {\r\n              return (\r\n                <div className=\"badge-mod h4x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (10 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 15) {\r\n              return (\r\n                <div className=\"badge-mod h3x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (15 <= arrWithKeyWord[1]) {\r\n              return (\r\n                <div className=\"badge-mod h2x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            return {};\r\n          })\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  state = {\r\n    selected: 'WITH'\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const innerText = e.target.innerText;\r\n    this.setState(\r\n      {\r\n        selected: innerText\r\n      }\r\n    );\r\n    return this.props.getBackConnector(innerText);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      this.props.chosenHashTag ? (\r\n\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">KEY WORD CONNECTOR\r\n            </div>\r\n            <ButtonGroup onClick={this.clickHandler}>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons or-mod\"\r\n                      active={this.state.selected === 'OR'}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITH'}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITHOUT'}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n            <div className=\"blue-color font-weight-bolder margin-top\"> </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class SearchButtonComponent extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      !this.props.visibility ? (\r\n        <Button color={this.props.color} className=\"form-button_mod\"\r\n                onClick={this.props.executeFunc}>{this.props.name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  returnNumberOfItems = (itemsArr) => {\r\n    let counter = 0;\r\n    itemsArr.forEach(nestedArr => {\r\n      nestedArr[1].forEach(uc => {\r\n          if(!(/!validation;/.test(uc))) counter += 1;\r\n        })\r\n    });\r\n    return counter;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { name, hashtag, searchButtonClicked, items} = this.props.state;\r\n    const numberOfItems = this.returnNumberOfItems(items);\r\n\r\n    return (\r\n\r\n        numberOfItems ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfItems}</div>:\r\n          (hashtag && searchButtonClicked) || (name && searchButtonClicked)? <div className=\"noResult-numberOfItems_mod\">NO RESULTS</div>:\r\n            null\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  categoriesOfEnvironment = ({consumer_chkbox, pro_chkbox}) => {\r\n    let result;\r\n    if (consumer_chkbox && pro_chkbox === false) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">CONSUMER</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox === false) result = <span>First choose <span className=\"algorithm-env_mod\">ENV</span>, you are interested in.</span>;\r\n    if (consumer_chkbox && pro_chkbox) result = <span>Find all Use Cases for both environments: <span className=\"algorithm-env_mod\">CONSUMER</span> and <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    return result;\r\n  };\r\n\r\n  kindOfHashTag = ({hashtag}) => {\r\n    let result;\r\n    if (hashtag) result = <span>Show <span className=\"algorithm-only_mod\">ONLY</span> UCs with <span\r\n      className=\"algorithm-only_mod\">hashtag: </span><span className=\"algorithm-hashtag_mod\">{hashtag}</span></span>;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `!${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const arrOfAllKeyWords = [];\r\n\r\n  const countWords = inputWords => inputWords.reduce((obj, word) => {\r\n    obj[word] = (obj[word] || 0) + 1;\r\n    return obj;\r\n  }, {});\r\n\r\n  const countPercent = (value, total) => ((value / total) * 100).toPrecision(2);\r\n\r\n  function returnPercentageOfEachKeyWord(obj, callback, total) {\r\n    const newObj = {};\r\n    for (let item in obj) {\r\n      if (obj.hasOwnProperty(item)) {\r\n        newObj[item] = Number.parseFloat(callback(obj[item], total));\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n        const arrOfKeyWords = useCase[0].match(/![a-zA-Z0-9-_]+;/gmi);\r\n        if (arrOfKeyWords) {\r\n          arrOfKeyWords.forEach((keyWord) => {\r\n            keyWord = keyWord.replace(/!/, '').replace(/;/, '');\r\n            arrOfAllKeyWords.push(keyWord);\r\n          })\r\n        }\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue;\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(uc => {\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (uc) {\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(uc);\r\n          }\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(uc);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(uc);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport { prepareHTMLOfSearchResults } from '../helpers/helperFunctions'\r\nimport {\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null,\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          items: [],\r\n          name: '',\r\n          hashtag: '',\r\n          searchButtonClicked: false,\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: []\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false,\r\n            base,\r\n            searchButtonClicked: true\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      this.setState({\r\n        // name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: wantedWords\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n      this.setState(() => {\r\n        return {\r\n          items: base\r\n        }\r\n      })\r\n    }\r\n\r\n    // clear search result view if input is clearing by user\r\n    if (searchValue && searchValue.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    // this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    this.setState({\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      pro_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    this.setState({\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      consumer_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  createPrintView = (items, func) => () => {\r\n    prepareHTMLOfSearchResults(items, func);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n     {\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            items={this.state.items}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                { this.state.consumer_chkbox || this.state.pro_chkbox?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div>: null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent keyWords={this.state.keyWords}\r\n                                            chosenHashTag={this.state.hashtag}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.multipleFuncOnChangeHandler}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"proceed with these settings!\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ start from the beginning\"\r\n                                       visibility={this.state.readyToProceed}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent state={this.state}/>\r\n\r\n              <SearchResultItems items={this.state.items}\r\n                                 consumerBase={this.state.consumerList}\r\n                                 proBase={this.state.proList}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}