{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/ResultItemFooter.js","Components/ResultItemHeader.js","Components/ResultItemStepsSection.js","Components/ResultItemImageSection.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","func","keys_str","forEach","arr","key","replace","concat","useCases","map","arrOfUseCaseAndItsSteps","uc","steps","match","Object","defineProperty","obj_uc_steps","entry","entries","Array","isArray","window","open","document","write","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","value","getElementById","select","execCommand","returnLinkToJenkinsJob","data","jenkinsLink","getUrlToImageInFirebase","arrWithData","name","findID","ID","directoryPath","join","randomNum","Math","floor","random","returnUseCaseNameBody_arr","rawUC","test","returnUseCaseTagName_arr","getRidOfTagName","useCaseBody_arr","trim","returnKeyWords_arr","rawKeyWords_arr","keyWord","returnHashTags_arr","rawHashTags_arr","hashTag","BreadcrumbItems","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","index","react_default","a","createElement","className","rel","onClick","href","length","React","Component","ResultItemFooter","onItemClickedHandler","useCaseNameWithoutTag_str","InputGroup","size","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","ResultItemHeader","defaultDescribeTagName_arr","ordinalNumber","number","wantedWords","chosenKeyWords","onBreadcrumbClickHandler","allHashTags","describeTag_arr","allKeyWords","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","singleTag","singleKeyWord","arrWithStepsOfCurrentUseCase","classesForSteps","step","String","src","alt","SearchResultItems","shouldBeOpen","isOpen","arrOfAllSteps","asyncToGenerator","regenerator_default","mark","_callee","fileName","arrWithCleanSteps","elem","arrWithSteps","reg2","newArr1","newArr2","wrap","_context","prev","next","console","log","split","querySelector","sent","classList","remove","setState","includes","getAllStepsFromFullBase","consumerBase","proBase","RegExp","push","sort","getImageFromFirebaseStorage","stop","_callee2","urlOfImageInFirebase","storage","pathReference","firebaseURL","_context2","JSON","stringify","firebase","refFromURL","getDownloadURL","then","url","catch","error","code","env","arguments","undefined","urlToFile","pathToFile","i","arrWithUCWithStepInDescriptor","classStr","firstLetterToUpperCase","str","charAt","toUpperCase","substring","changeAllSemicolonsToDots","changeAllVerticalLinesToSlash","transformUseCaseStringToProperForm","countAllUseCases","numberOfAllUC","numberState","Row","Col","sm","md","offset","Breadcrumb","ResultItemHeader_ResultItemHeader","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","ResultItemStepsSection_ResultItemHeader","ResultItemImageSection_ResultItemHeader","ResultItemFooter_ResultItemFooter","JumbotronComponent","Jumbotron","fluid","ucInfoObj","detailsSwitchView","ButtonGroup","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","numberConsumer","numberPro","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","filePath","arrOfUseCasesKeys","keys","values","add","base","numberOfAllUseCases","toConsumableArray","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","consumer","pro","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","arrWithKeyWord","KeyWordsConnectorComponent","selected","clickHandler","getBackConnector","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onChange","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","returnNumberOfItems","itemsArr","counter","nestedArr","_this$props$state","searchButtonClicked","numberOfItems","InstructComponent","text","SearchAlgorithmTextComponent","connector","arrOfWantedWords","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","ucArr","updatedBase","reg","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","arrOfAllKeyWords","arrOfKeyWords","oneHundredPercent","obj","callback","total","newObj","item","hasOwnProperty","Number","parseFloat","returnPercentageOfEachKeyWord","reduce","toPrecision","returnUpdatedListOfUseCases_ifOneWord","updatedList","wantedValue","arrWithUC","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","firstKeyWord","secondKeyWord","thirdKeyWord","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","readyToProceed","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","showWholeBase","_returnUpdatedListOfU","hashTagName","has","delete","ref","once","snapshot","changeBaseToProperForm","changedBase","JumbotronComponent_JumbotronComponent","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","SearchButtonComponent_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.079b629d.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items, func) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n    let key = arr[0].replace(/%5C|%2F/g, '/');\r\n    keys_str += `<br /><form style=\"font-weight:bold\">${key}</form>`;\r\n\r\n    let useCases = '';\r\n\r\n    let newArr = arr[1].map(arrOfUseCaseAndItsSteps => {\r\n      let uc = arrOfUseCaseAndItsSteps[0];\r\n      let steps = arrOfUseCaseAndItsSteps[1];\r\n      uc = uc.replace(/;/g, '.').replace(/\\|/, '/');\r\n      uc = uc.match(/It:.+|Step.+/gmi);\r\n      return {\r\n        [uc[0]]: steps\r\n      };\r\n    });\r\n\r\n    newArr.forEach(obj_uc_steps => {\r\n      const entry = Object.entries(obj_uc_steps)[0];\r\n      useCases += `<p style=\"color:black;width:100%;${func ? 'font-weight:bold;' : ''}\">${entry[0]}</p>`;\r\n\r\n      if (Array.isArray(entry[1]) && func === 'WITH DESCRIPTIONS') {\r\n        entry[1].forEach(steps => {\r\n          useCases += `<p style=\"color:black;width:100%;font-style:italic;margin-left:40px\">${steps}</p>`\r\n        })\r\n      }\r\n\r\n    });\r\n\r\n    keys_str += useCases;\r\n\r\n  });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write(`<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>${keys_str}</div></section>`);\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst getUrlToImageInFirebase = (arrWithData, name) => {\r\n\r\n  const findID = name.match(/ID_.{2}/);\r\n  const ID = findID ? findID[0].replace('ID_', '') : 'NO_ID';\r\n  const directoryPath = arrWithData.join('/');\r\n\r\n  return `gs://use-cases-search.appspot.com/${directoryPath}.js/${ID}.jpg`\r\n\r\n};\r\n\r\nconst randomNum = () => Math.floor(Math.random() * 1000);\r\n\r\nconst returnUseCaseNameBody_arr = (rawUC) => {\r\n  // Get rid of everything before It or Step tag: It: something. OR Step 1of5: something OR Step: something\r\n  return /It|Step/.test(rawUC) ? rawUC.match(/It:.+|Step.+/gmi) : [rawUC];\r\n}\r\n\r\nconst returnUseCaseTagName_arr = (rawUC) => {\r\n  // Get rid of everything before and after It or Step tag and return clean tag name.\r\n  return /It: |Step /.test(rawUC) ? rawUC.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n}\r\n\r\nconst getRidOfTagName = (useCaseBody_arr) => {\r\n  // Get rid of tag name from uc body: It:, Step 1of5 etc.\r\n  if (/It|Step/.test(useCaseBody_arr[0])) {\r\n    return useCaseBody_arr[0]\r\n      .replace(/Step [0-9]+of[0-9]+:/, '')\r\n      .replace(/It:/, '')\r\n      .replace(/Step:/, '')\r\n      .trim();\r\n  } else {\r\n    return useCaseBody_arr[0].trim();\r\n  }\r\n}\r\n\r\nconst returnKeyWords_arr = (rawUC) => {\r\n  // Return array with all raw keywords from full use case: !keyWord1., !!!keyWord2.\r\n  const rawKeyWords_arr = rawUC.match(/![a-zA-Z0-9-_]+\\./gmi); // !keyWord1, !keyWord2.\r\n\r\n  // Return array with all keywords without exclamation marks and change dots into comma at the end: !keyWord1., !!!keyWord2.\r\n  if (rawKeyWords_arr && rawKeyWords_arr[0]) {\r\n    return rawKeyWords_arr.map(keyWord => {\r\n      return keyWord.replace(/!/, '').replace(/\\./, ',');\r\n    });\r\n  }\r\n}\r\n\r\nconst returnHashTags_arr = (rawUC) => {\r\n  // Return array with all raw hashtags from full use case: HSH_hashtag1. HSH_hashtag2.\r\n  const rawHashTags_arr = rawUC.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm);\r\n\r\n  // Return array with all hashtags and change HSH part into hash:# then remove dots at the end: #hashtag1 #hashtag2\r\n  if (rawHashTags_arr && rawHashTags_arr[0]) {\r\n    return rawHashTags_arr.map(hashTag => {\r\n      return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnLinkToJenkinsJob,\r\n  prepareHTMLOfSearchResults,\r\n  getUrlToImageInFirebase,\r\n  randomNum,\r\n  returnUseCaseNameBody_arr,\r\n  returnUseCaseTagName_arr,\r\n  getRidOfTagName,\r\n  returnKeyWords_arr,\r\n  returnHashTags_arr\r\n}","import React from 'react';\r\nimport {returnLinkToJenkinsJob} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const arrWithData = this.props.arrWithData;\r\n    this.state = {\r\n      arrWithData: arrWithData\r\n    }\r\n  }\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.state.arrWithData ? this.state.arrWithData.map((data, index, arr) => {\r\n          return (\r\n            (index === 1) ?\r\n\r\n              <div key={data} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"jenkins-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={returnLinkToJenkinsJob(data, arr)}\r\n                >{data}\r\n                </a>\r\n              </div> : (index === this.state.arrWithData.length - 1) ?\r\n              <div key={data} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"github-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + this.state.arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </div> : (index === 0) ?\r\n                <div key={data} className=\"breadcrumb-link_mod\">ENV:<span className=\"environment_mod\">{data}</span></div> : null\r\n\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, InputGroup} from 'reactstrap';\r\nimport {saveToClipboard, returnUseCaseNameBody_arr, getRidOfTagName} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemFooter extends React.Component {\r\n\r\n  rawUC = this.props.uc;\r\n  arrWithData = this.props.arrWithData;\r\n  onItemClickedHandler = this.props.onItemClickedHandler;\r\n  useCaseBody_arr = returnUseCaseNameBody_arr(this.rawUC);\r\n  useCaseNameWithoutTag_str = getRidOfTagName(this.useCaseBody_arr);\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"collapse-inputGroup_mod\">\r\n        <InputGroup size=\"sm\">\r\n          {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`useCaseInput_${this.useCaseNameWithoutTag_str}`}\r\n                  onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.useCaseNameWithoutTag_str}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                 id={`useCaseInput_${this.useCaseNameWithoutTag_str}`}/>\r\n\r\n        </InputGroup>\r\n\r\n        <InputGroup size=\"sm\">\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`runThisUCInput_${this.useCaseNameWithoutTag_str}`}\r\n                  onClick={saveToClipboard()}>Copy run command</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.onItemClickedHandler(this.arrWithData, this.rawUC)}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                 id={`runThisUCInput_${this.useCaseNameWithoutTag_str}`}/>\r\n\r\n        </InputGroup>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {randomNum, returnUseCaseNameBody_arr, returnUseCaseTagName_arr, getRidOfTagName, returnKeyWords_arr, returnHashTags_arr} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  defaultDescribeTagName_arr = ['UseCase:'];\r\n  rawUC = this.props.uc;\r\n  arr = this.props.arr;\r\n  ordinalNumber = this.props.number;\r\n  wantedWords = this.props.wantedWords;\r\n  chosenKeyWords = this.props.chosenKeyWords;\r\n  onBreadcrumbClickHandler = this.props.onBreadcrumbClickHandler;\r\n  allHashTags = returnHashTags_arr(this.rawUC);\r\n  describeTag_arr = returnUseCaseTagName_arr(this.rawUC);\r\n  useCaseBody_arr = returnUseCaseNameBody_arr(this.rawUC);\r\n  useCaseNameWithoutTag_str = getRidOfTagName(this.useCaseBody_arr);\r\n  allKeyWords = returnKeyWords_arr(this.rawUC);\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"breadcrumb-header\" onClick={this.onBreadcrumbClickHandler(this.rawUC, this.arr, this.describeTag_arr[0])}>\r\n\r\n        <div className=\"breadcrumb-item-mod\">\r\n          <span className=\"item-number_mod\">{this.ordinalNumber}.</span>\r\n        </div>\r\n        <div className=\"use_case-text_mod\">\r\n          <Highlighter\r\n            className={this.useCaseNameWithoutTag_str.length > 140 ? 'list-text_mod2' : 'list-text_mod1'}\r\n            highlightClassName=\"highlight-describeTag\"\r\n            // searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n            searchWords={this.defaultDescribeTagName_arr}\r\n            autoEscape={true}\r\n            // textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n            textToHighlight={this.defaultDescribeTagName_arr[0]}\r\n          />\r\n          <Highlighter\r\n            className={this.useCaseNameWithoutTag_str.length > 140 ? 'list-text_mod2 font-roboto' : 'list-text_mod1 font-roboto'}\r\n            highlightClassName=\"highlight-text\"\r\n            searchWords={this.wantedWords}\r\n            autoEscape={true}\r\n            textToHighlight={this.useCaseNameWithoutTag_str}\r\n          />\r\n        </div>\r\n        <div className=\"item-footer-mod\">\r\n          <div className=\"hashtags-title-mod\">HASHTAGS:\r\n            {this.allHashTags ? this.allHashTags.map(singleTag => {\r\n              return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>;\r\n            }) : null}\r\n          </div>\r\n\r\n          <div className=\"keywords-title-mod\">KEY WORDS:\r\n            {this.allKeyWords ? this.allKeyWords.map(singleKeyWord => {\r\n              return <Highlighter\r\n                key={singleKeyWord + randomNum()}\r\n                className=\"keyword-item-mod\"\r\n                highlightClassName=\"highlight-text\"\r\n                searchWords={this.chosenKeyWords ? this.chosenKeyWords : []}\r\n                autoEscape={true}\r\n                textToHighlight={singleKeyWord}\r\n              />;\r\n            }) : null}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {randomNum} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  arrOfUseCaseAndItsSteps = this.props.arrOfUseCaseAndItsSteps;\r\n  arrWithStepsOfCurrentUseCase = typeof this.arrOfUseCaseAndItsSteps[1] !== 'string' ? this.arrOfUseCaseAndItsSteps[1] : [];\r\n  classesForSteps = this.props.classesForSteps;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"steps-section\">\r\n        {this.arrWithStepsOfCurrentUseCase.length ?\r\n          <div className=\"collapse-steps collapse-descriptors test-description margin-bottom\">\r\n            {<div className=\"test-description-title\">TEST DESCRIPTION</div>}\r\n            {this.arrWithStepsOfCurrentUseCase.map(step => {\r\n              return (<div key={step + String(randomNum())}\r\n                           className={this.classesForSteps(step)}>{step}</div>);\r\n            })}\r\n          </div> : null}\r\n\r\n        {/*{this.state.arrOfAllSteps.length ? <div className=\"collapse-steps collapse-descriptors test-description\">*/}\r\n        {/*  <div className=\"test-description-title\">OTHER USE CASES (tests which are called \"Steps\") IN FILE {this.state.fileName}.js:</div>*/}\r\n        {/*  {this.state.arrOfAllSteps.map(step => {*/}\r\n        {/*    const reg = new RegExp(/_XOXO/);*/}\r\n        {/*    return <div key={step} className={reg.test(step) ? 'collapse-step_mod1' : 'collapse-step_mod2'}>{step.replace(/_XOXO/, '')}</div>;*/}\r\n        {/*  })}*/}\r\n        {/*</div> : null}*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  uc = this.props.uc;\r\n  src = this.props.src;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"use-case-image\">\r\n        {<img src={this.src} alt={this.uc}/>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {Breadcrumb, Card, CardBody, Col, Collapse, Row} from 'reactstrap';\r\nimport BreadcrumbItems from './BreadcrumbItems';\r\nimport ResultItemFooter from './ResultItemFooter';\r\nimport ResultItemHeader from './ResultItemHeader';\r\nimport ResultItemStepsSection from './ResultItemStepsSection';\r\nimport ResultItemImageSection from './ResultItemImageSection';\r\nimport {getUrlToImageInFirebase, randomNum} from '../helpers/helperFunctions';\r\nimport firebase from '@firebase/app';\r\nimport '@firebase/storage';\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, arr, describeTag_arr) => async () => {\r\n\r\n    console.log('onBreadcrumbClickHandler');\r\n\r\n    const arrWithData = arr[0].split(/%5C|%2F/);\r\n    const fileName = arrWithData[2];\r\n    let arrWithCleanSteps = [];\r\n    // const pathToFilePreparedForFirebaseStorage = arrWithData.join('_').toLowerCase();\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove('show');\r\n      this.setState({\r\n        isOpen: false\r\n      });\r\n    }\r\n\r\n    if (this.state.isOpen === false) {\r\n\r\n      let arrWithSteps = [];\r\n\r\n      if (describeTag_arr.includes('Step')) {\r\n        arrWithSteps = this.getAllStepsFromFullBase(this.props.consumerBase, this.props.proBase, arr[0]);\r\n      }\r\n\r\n      // prepare steps to show in collapse dialog\r\n      if (0 in arrWithSteps) {\r\n        arrWithSteps.forEach(step => {\r\n\r\n          // mark step which must be highlighted\r\n          const reg = new RegExp(describeTag_arr);\r\n          if (reg.test(step)) {\r\n            step = step.concat('_XOXO');\r\n          }\r\n          arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n        });\r\n\r\n        // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n        const reg2 = new RegExp(/ [0-9]of/);\r\n        const newArr1 = [];\r\n        const newArr2 = [];\r\n\r\n        arrWithCleanSteps.forEach((step) => {\r\n          if (reg2.test(step)) {\r\n            newArr1.push(step);\r\n          } else {\r\n            newArr2.push(step);\r\n          }\r\n        });\r\n\r\n        newArr1.sort();\r\n        newArr2.sort();\r\n        arrWithCleanSteps = [...newArr1, ...newArr2];\r\n      }\r\n\r\n    }\r\n\r\n    this.getImageFromFirebaseStorage(uc, arrWithData);\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: arrWithCleanSteps,\r\n        fileName,\r\n        arrWithData\r\n      };\r\n    });\r\n\r\n  };\r\n\r\n  getImageFromFirebaseStorage = async (name, arrWithData) => {\r\n\r\n    if (!this.state.isOpen && !this.state[name]) {\r\n\r\n      console.log('GET STORAGE');\r\n\r\n      const urlOfImageInFirebase = getUrlToImageInFirebase(arrWithData, name);\r\n      console.log('typeof urlOfImageInFirebase: ', typeof urlOfImageInFirebase, JSON.stringify(urlOfImageInFirebase, null, 4));\r\n      const storage = firebase.storage();\r\n      const pathReference = storage.refFromURL(urlOfImageInFirebase);\r\n\r\n      const firebaseURL = await pathReference.getDownloadURL().then(function (url) {\r\n\r\n        return url;\r\n\r\n        // Insert url into an <img> tag to \"download\"\r\n      }).catch(function (error) {\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n\r\n        console.log('typeof error.code: ', typeof error.code, JSON.stringify(error.code, null, 4));\r\n      });\r\n\r\n      await this.setState({\r\n        [name]: firebaseURL || 'https://firebasestorage.googleapis.com/v0/b/use-cases-search.appspot.com/o/greta.jpg?alt=media&token=23552523-53c9-418c-a9dd-a7887cd46236'\r\n      });\r\n    }\r\n  };\r\n\r\n  onItemClickedHandler = (arrWithData = []) => {\r\n\r\n    let env;\r\n\r\n    switch (arrWithData[0]) {\r\n      case 'CONSUMER':\r\n        env = 'master';\r\n        break;\r\n      case 'PRO':\r\n        env = 'master-pro';\r\n        break;\r\n      case 'LIVE':\r\n        env = 'live';\r\n        break;\r\n      default:\r\n        env = 'master';\r\n    }\r\n\r\n    let urlToFile = arrWithData.join('/').concat('.js');\r\n    return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show';\r\n    }\r\n  };\r\n\r\n  // showTagIfOpen = (key, describeTag_arr, describeTag_View) => {\r\n  //   if (key === this.state.shouldBeOpen) {\r\n  //     return describeTag_arr;\r\n  //   } else {\r\n  //     return describeTag_View;\r\n  //   }\r\n  // };\r\n\r\n  getAllStepsFromFullBase = (consumerBase, proBase, pathToFile) => {\r\n\r\n    let arrWithSteps = [];\r\n\r\n    if (pathToFile.includes('CONSUMER')) {\r\n      for (let i = 0; i < consumerBase.length; i++) {\r\n        if (consumerBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          consumerBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    } else if (pathToFile.includes('PRO')) {\r\n      for (let i = 0; i < proBase.length; i++) {\r\n        if (proBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          proBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arrWithSteps;\r\n  };\r\n\r\n  classesForSteps = (step) => {\r\n\r\n    let classStr = '';\r\n\r\n    if (step.includes('BEFORE:')) classStr = 'before-class';\r\n    if (step.includes('STEP ')) classStr = 'step-class';\r\n    if (step.includes('END:')) classStr = 'end-class';\r\n    if (step.includes('ASSERT:')) classStr = 'assert-class';\r\n\r\n    return `collapse-step_mod2 ${classStr}`;\r\n\r\n  };\r\n\r\n  firstLetterToUpperCase = (str) => str.charAt(0).toUpperCase() + str.substring(1);\r\n\r\n  changeAllSemicolonsToDots = (str) => str.replace(/;/gmi, '.');\r\n\r\n  changeAllVerticalLinesToSlash = (str) => str.replace(/\\|/gmi, '/');\r\n\r\n  transformUseCaseStringToProperForm = (uc) => {\r\n\r\n    uc = this.firstLetterToUpperCase(uc) + '.';\r\n    uc = this.changeAllSemicolonsToDots(uc);\r\n    uc = this.changeAllVerticalLinesToSlash(uc);\r\n\r\n    return uc;\r\n  };\r\n\r\n  countAllUseCases = () => {\r\n    let numberOfAllUC = 0;\r\n    this.props.items.forEach(arr => numberOfAllUC += arr[1].length);\r\n    return numberOfAllUC;\r\n  };\r\n\r\n  numberOfAllUC = this.countAllUseCases();\r\n\r\n  render() {\r\n\r\n    const numberState = this.numberOfAllUC;\r\n\r\n    return (this.props.items && this.props.items.map(arr => {\r\n\r\n        return arr[1].map(arrOfUseCaseAndItsSteps => {\r\n\r\n          const uc = this.transformUseCaseStringToProperForm(arrOfUseCaseAndItsSteps[0]);\r\n\r\n          // if use case have '!validation;' key words do not show this use case.\r\n          if (!(/!validation;/.test(uc))) {\r\n\r\n            return (\r\n\r\n              <Row key={uc + randomNum()}>\r\n                <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n                  <Breadcrumb className=\"list-item_mod\">\r\n\r\n                    <ResultItemHeader\r\n                      uc={uc}\r\n                      arr={arr}\r\n                      items={this.props.items}\r\n                      wantedWords={this.props.wantedWords}\r\n                      chosenKeyWords={this.props.chosenKeyWords}\r\n                      number={(this.numberOfAllUC++) - (numberState - 1)}\r\n                      onBreadcrumbClickHandler={this.onBreadcrumbClickHandler}/>\r\n\r\n                    <div className=\"collapse-card-mod\">\r\n                      <Collapse className={this.shouldBeOpen(uc)}>\r\n                        <Card>\r\n                          <CardBody>\r\n                            <BreadcrumbItems arrWithData={this.state.arrWithData}/>\r\n\r\n                            <div className=\"uc-description_and_image-section\">\r\n                              <ResultItemStepsSection arrOfUseCaseAndItsSteps={arrOfUseCaseAndItsSteps}\r\n                                                      classesForSteps={this.classesForSteps}/>\r\n                              <ResultItemImageSection uc={uc}\r\n                                                      src={this.state[uc]}/>\r\n                            </div>\r\n\r\n                            <ResultItemFooter\r\n                              arrWithData={this.state.arrWithData}\r\n                              uc={uc}\r\n                              onItemClickedHandler={this.onItemClickedHandler}/>\r\n\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Collapse>\r\n                    </div>\r\n\r\n                  </Breadcrumb>\r\n\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n          return '';\r\n        });\r\n\r\n      })\r\n    );\r\n\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport {ButtonGroup, Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className={(this.props.ucInfoObj && this.props.detailsSwitchView) || (this.props.name && this.props.detailsSwitchView) ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE CASES SEARCH</h1>\r\n        {[0] in this.props.items? <ButtonGroup className=\"print_view-button_mod\">\r\n\r\n                                      <Button color=\"primary\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.items)}>Print View of this list\r\n                                      </Button>\r\n\r\n                                      <Button color=\"warning\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.items, 'WITH DESCRIPTIONS')}>WITH DESCRIPTIONS\r\n                                      </Button>\r\n                                  </ButtonGroup>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let number = 0, numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    const filePath = arr[0]; // string: path to file: \"CONSUMER%2FGROUPS%2FGENERAL_GROUPS%2Fgroup_uc05\"\r\n    const arrOfUseCasesKeys = Object.keys(arr[1]); // array: files paths: [\"HSH_Settings; !guest; !members; Step 2of7: Members settings; Temporary deactivation of Guest account\", (...)]\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const arrOfUseCasesValues = Object.values(arr[1]); // array: values: [ \"BEFORE: (...)\", \"STEP 1: (...)\", \"STEP 2: (...)\", \"ASSERT: (...)\", \"END: (...)\" ]\r\n\r\n    arr[1] = Object.entries(arr[1]);\r\n\r\n    number += arrOfUseCasesKeys.length;\r\n\r\n    if (/CONSUMER|LIVE/mi.test(filePath)) {\r\n\r\n      consumerList.push(arr);\r\n\r\n      numberConsumer += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(filePath)) {\r\n\r\n      proList.push(arr);\r\n\r\n      numberPro += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    numberOfAllUseCases: number,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  const chosenHashtag = state.hashtag;\r\n  const uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n  const uniqHashTagsForPro = state.uniqHashTagsForPro;\r\n\r\n  const consumer_chkbox = state.consumer_chkbox;\r\n  const pro_chkbox = state.pro_chkbox;\r\n\r\n  const consumer_hashTags_exist = uniqHashTagsForConsumer && uniqHashTagsForConsumer.length;\r\n  const consumer =  consumer_hashTags_exist && consumer_chkbox && pro_chkbox === false;\r\n\r\n  const pro_hashTags_exist = uniqHashTagsForPro && uniqHashTagsForPro.length;\r\n  const pro =  pro_hashTags_exist && consumer_chkbox === false && pro_chkbox;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          consumer ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n\r\n              )\r\n            })\r\n          ) : pro ? (\r\n            uniqHashTagsForPro.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })\r\n          ): null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const arr = Object.entries(keyWords);\r\n\r\n  arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          arr.map(arrWithKeyWord => {\r\n\r\n            if (0 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 5) {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (5 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 10) {\r\n              return (\r\n                <div className=\"badge-mod h4x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (10 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 15) {\r\n              return (\r\n                <div className=\"badge-mod h3x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (15 <= arrWithKeyWord[1]) {\r\n              return (\r\n                <div className=\"badge-mod h2x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            return {};\r\n          })\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  state = {\r\n    selected: 'WITH'\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const innerText = e.target.innerText;\r\n    this.setState(\r\n      {\r\n        selected: innerText\r\n      }\r\n    );\r\n    return this.props.getBackConnector(innerText);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      this.props.chosenHashTag ? (\r\n\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">KEY WORD CONNECTOR\r\n            </div>\r\n            <ButtonGroup onClick={this.clickHandler}>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons or-mod\"\r\n                      active={this.state.selected === 'OR'}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITH'}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITHOUT'}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n            <div className=\"blue-color font-weight-bolder margin-top\"> </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class SearchButtonComponent extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      !this.props.visibility ? (\r\n        <Button color={this.props.color} className=\"form-button_mod\"\r\n                onClick={this.props.executeFunc}>{this.props.name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  returnNumberOfItems = (itemsArr) => {\r\n    let counter = 0;\r\n    itemsArr.forEach(nestedArr => {\r\n      nestedArr[1].forEach(uc => {\r\n          if(!(/!validation;/.test(uc))) counter += 1;\r\n        })\r\n    });\r\n    return counter;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { name, hashtag, searchButtonClicked, items} = this.props.state;\r\n    const numberOfItems = this.returnNumberOfItems(items);\r\n\r\n    return (\r\n\r\n        numberOfItems ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfItems}</div>:\r\n          (hashtag && searchButtonClicked) || (name && searchButtonClicked)? <div className=\"noResult-numberOfItems_mod\">NO RESULTS</div>:\r\n            null\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `!${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const arrOfAllKeyWords = [];\r\n\r\n  const countWords = inputWords => inputWords.reduce((obj, word) => {\r\n    obj[word] = (obj[word] || 0) + 1;\r\n    return obj;\r\n  }, {});\r\n\r\n  const countPercent = (value, total) => ((value / total) * 100).toPrecision(2);\r\n\r\n  function returnPercentageOfEachKeyWord(obj, callback, total) {\r\n    const newObj = {};\r\n    for (let item in obj) {\r\n      if (obj.hasOwnProperty(item)) {\r\n        newObj[item] = Number.parseFloat(callback(obj[item], total));\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n        const arrOfKeyWords = useCase[0].match(/![a-zA-Z0-9-_]+;/gmi);\r\n        if (arrOfKeyWords) {\r\n          arrOfKeyWords.forEach((keyWord) => {\r\n            keyWord = keyWord.replace(/!/, '').replace(/;/, '');\r\n            arrOfAllKeyWords.push(keyWord);\r\n          })\r\n        }\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue = '';\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(arrWithUC => {\r\n\r\n      const uc = arrWithUC[0];\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(arrWithUC);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (arrWithUC) {\r\n\r\n        const uc = arrWithUC[0];\r\n\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(arrWithUC);\r\n          }\r\n\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(arrWithUC);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(arrWithUC);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport { prepareHTMLOfSearchResults } from '../helpers/helperFunctions'\r\nimport {\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null,\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          items: [],\r\n          name: '',\r\n          hashtag: '',\r\n          searchButtonClicked: false,\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: []\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false,\r\n            base,\r\n            searchButtonClicked: true\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      this.setState({\r\n        // name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: wantedWords\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n      this.setState(() => {\r\n        return {\r\n          items: base\r\n        }\r\n      })\r\n    }\r\n\r\n    // clear search result view if input is clearing by user\r\n    if (searchValue && searchValue.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    // this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    this.setState({\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      pro_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    this.setState({\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      consumer_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  createPrintView = (items, func) => () => {\r\n    prepareHTMLOfSearchResults(items, func);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n     {\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            items={this.state.items}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                { this.state.consumer_chkbox || this.state.pro_chkbox?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div>: null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent keyWords={this.state.keyWords}\r\n                                            chosenHashTag={this.state.hashtag}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.multipleFuncOnChangeHandler}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"proceed with these settings!\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ start from the beginning\"\r\n                                       visibility={this.state.readyToProceed}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent state={this.state}/>\r\n\r\n              <SearchResultItems items={this.state.items}\r\n                                 consumerBase={this.state.consumerList}\r\n                                 proBase={this.state.proList}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}