{"version":3,"sources":["SearchResultItems.js","FormComponent.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["SearchResultItems","_this","this","number","props","items","forEach","arr","length","numberState","wantedWords","map","arrWithData","split","uc","charAt","toUpperCase","substring","ucInfoObj","react_default","a","createElement","Breadcrumb","key","Math","floor","random","className","onClick","itemClicked","bind","BreadcrumbItem","active","main_default","highlightClassName","searchWords","showWholeBase","autoEscape","textToHighlight","React","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","state","initialState","base","name","numberOfAllUseCases","showAllUseCases","setState","hideAllUseCases","filterList","event","wantedValue","updatedList","ucArr","Set","removeSpacesFunc","word","replace","getLowerCaseFunc","character","toLowerCase","arrOfKeyWords","target","value","filter","el","test","firstKeyWord","secondKeyWord","thirdKeyWord","push","arrOfUC","search","add","size","Object","toConsumableArray","preventActionHandler","charCode","preventDefault","onItemClicked","saveToClipboard","id","document","getElementById","select","execCommand","val","entries","keys","_this2","ref","once","then","snapshot","changeBaseToProperForm","runUCCommand","env","urlToFile","join","concat","Container","fluid","Row","Col","sm","md","offset","Jumbotron","InputGroup","Label","Input","placeholder","type","spellCheck","Button","color","outline","Form","FormGroup","bsSize","onChange","onKeyPress","block","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.370dce11.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  render() {\r\n    let number = 0;\r\n    this.props.items.forEach(arr => {\r\n      number += arr[1].length\r\n    });\r\n    let numberState = number;\r\n    let wantedWords = this.props.wantedWords;\r\n\r\n    return (\r\n      this.props.items ? this.props.items.map(arr => {\r\n        let arrWithData = arr[0].split('%5C');\r\n        return arr[1].map(uc => {\r\n          uc = uc.charAt(0).toUpperCase() + uc.substring(1);\r\n          let ucInfoObj = {arr: arrWithData, uc};\r\n            return (\r\n              <Breadcrumb key={uc + Math.floor(Math.random()*1000)} className=\"list-item_mod\" onClick={this.props.itemClicked.bind(null, ucInfoObj)}>\r\n                <span className=\"item-number_mod\">{(number++) - (numberState - 1)}.</span>\r\n                <BreadcrumbItem>{arrWithData[0]}</BreadcrumbItem>\r\n                <BreadcrumbItem>{arrWithData[1]}</BreadcrumbItem>\r\n                <BreadcrumbItem active>{arrWithData[2] + '.js'}</BreadcrumbItem>\r\n                <Highlighter\r\n                  className=\"list-text_mod \"\r\n                  highlightClassName=\"highlight-text\"\r\n                  searchWords={this.props.showWholeBase? []: wantedWords}\r\n                  autoEscape={true}\r\n                  textToHighlight={uc}\r\n                />\r\n              </Breadcrumb>\r\n            )\r\n          }\r\n        )\r\n      }) : null\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, Col, Row, Container, Form, FormGroup, Input, Jumbotron, InputGroup, Label} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    showWholeBase: false,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null\r\n  };\r\n\r\n  changeBaseToProperForm(val) {\r\n    let number = 0;\r\n    let entries = Object.entries(val);\r\n    entries.forEach(function (arr) {\r\n      arr[1] = Object.keys(arr[1]);\r\n      number += arr[1].length\r\n    });\r\n    this.setState({\r\n      base: entries,\r\n      showWholeBase: false,\r\n      numberOfAllUseCases: number\r\n    })\r\n  }\r\n\r\n  showAllUseCases = () => {\r\n    this.setState({\r\n      items: this.state.base,\r\n      showWholeBase: !this.state.showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  hideAllUseCases = () => {\r\n    this.setState({\r\n      items: [],\r\n      showWholeBase: !this.state.showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  filterList = (event) => {\r\n\r\n    let updatedList = [];\r\n    let base = this.state.base;\r\n    let ucArr = new Set();\r\n    let wantedValue;\r\n\r\n    let removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n    let getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\n    let arrOfKeyWords = event.target.value.split(' ');\r\n    arrOfKeyWords = arrOfKeyWords.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n\r\n    if (!this.state.items.length || arrOfKeyWords.length === 1) {\r\n\r\n      this.setState({\r\n        name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (event.target.value.length >= 3) {\r\n\r\n        updatedList = [];\r\n\r\n        base.forEach(arrOfUC => {\r\n\r\n          arrOfUC[1].forEach(uc => {\r\n\r\n            wantedValue = getLowerCaseFunc(event.target.value);\r\n            wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n            if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n          });\r\n\r\n          if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n\r\n          ucArr = new Set();\r\n\r\n        });\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    } else if (/\\s+/.test(event.target.value)) {\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let base = this.state.base;\r\n        let updatedList = [];\r\n        let ucArr = new Set();\r\n\r\n        base.forEach(arrOfUC => {\r\n\r\n          arrOfUC[1].forEach(\r\n            function (uc) {\r\n              if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n                if (!arrOfKeyWords[1]) {\r\n                  ucArr.add(uc);\r\n                }\r\n                if (arrOfKeyWords[1]) {\r\n                  if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n                    if (!arrOfKeyWords[2]) {\r\n                      ucArr.add(uc);\r\n                    } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                      if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                        ucArr.add(uc);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n          if (ucArr.size) {\r\n            updatedList.push([arrOfUC[0], [...ucArr]]);\r\n            ucArr = new Set();\r\n            this.setState({\r\n              items: updatedList,\r\n              wantedWords: wantedWords\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (event.target.value.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  preventActionHandler = (event) => {\r\n    let charCode = event.charCode;\r\n    if (charCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  onItemClicked = (ucInfoObj) => {\r\n    this.setState({\r\n      ucInfoObj: ucInfoObj\r\n    })\r\n  };\r\n\r\n  saveToClipboard = (id) => {\r\n    return () => {\r\n      let copyText = document.getElementById(id);\r\n      copyText.select();\r\n      document.execCommand(\"copy\");\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let runUCCommand, env;\r\n    if(this.state.ucInfoObj) {\r\n      let ucInfoObj = this.state.ucInfoObj;\r\n      ucInfoObj.arr[0] === 'CONSUMER'? env = 'master': env = 'master-pro';\r\n      let urlToFile = ucInfoObj.arr.join('/').concat('.js');\r\n      runUCCommand = `node launcher.js -p 1 -r 1 -e ${env} -d ${urlToFile}`;\r\n    }\r\n    return (\r\n      <div className=\"main-label\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n              <Jumbotron fluid className=\"jumbotron_mod\">\r\n                <h1 className=\"display-7 form-mainLabel_mod\">USE CASES SEARCH</h1>\r\n                { this.state.ucInfoObj? (\r\n                  <Row>\r\n                    <Col sm=\"12\" md={{size: 10, offset: 1}}>\r\n                      <InputGroup size=\"sm\">\r\n                        <Label className=\"jumbotron-label_mod\">USE CASE:</Label>\r\n                        <Input placeholder=\"\" type=\"text\" spellCheck=\"false\"\r\n                               value={this.state.ucInfoObj.uc}\r\n                               className=\"jumbotron-input_mod jumbotron-input-one_mod shadow-none\" id=\"useCaseInput\"/>\r\n                        <Button color=\"success\" size=\"sm\" className=\"jumbotron-button_mod\" outline\r\n                                onClick={this.saveToClipboard(\"useCaseInput\")}>Clipboard!</Button>\r\n                      </InputGroup>\r\n                      <InputGroup size=\"sm\">\r\n                        <Label className=\"jumbotron-label_mod\">COMMAND TO RUN THIS UC:</Label>\r\n                        <Input placeholder=\"\" type=\"text\" spellCheck=\"false\"\r\n                               value={runUCCommand}\r\n                               className=\"jumbotron-input_mod jumbotron-input-two_mod shadow-none\" id=\"runThisUCInput\"/>\r\n                        <Button color=\"success\" size=\"sm\" className=\"jumbotron-button_mod\" outline\r\n                                onClick={this.saveToClipboard(\"runThisUCInput\")}>Clipboard!</Button>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Row>\r\n                ): <span className=\"jumbotron-lead \">EASILY FIND ANY USE CASE IN OUR AUTOMATED TESTS DATABASE</span>\r\n                }\r\n              </Jumbotron>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col sm=\"12\" md={{size: 12}} className=\"form-input_mod\">\r\n                  <Input type=\"search\" spellCheck=\"false\" value={this.state.name} name=\"search\" id=\"useCasesSearch\" bsSize=\"lg\"\r\n                         placeholder=\"Type what are you looking for... for example: post or chat\"\r\n                         onChange={this.filterList}\r\n                         onKeyPress={this.preventActionHandler}/>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {!this.state.showWholeBase ?\r\n                  (<Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <Button block color=\"warning\" className=\"form-button_mod\" onClick={this.showAllUseCases}>Show All\r\n                      ({this.state.numberOfAllUseCases})\r\n                      Use Cases</Button>\r\n                  </Col>) :\r\n\r\n                  (<Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <Button block color=\"danger\" className=\"form-button_mod\" onClick={this.hideAllUseCases}>Hide All Use Cases</Button>\r\n                  </Col>)\r\n                }\r\n              </Row>\r\n              <Row>\r\n                <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n                  <SearchResultItems items={this.state.items}\r\n                                     wantedWords={this.state.wantedWords}\r\n                                     itemClicked={this.onItemClicked}\r\n                                     showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent></FormComponent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}