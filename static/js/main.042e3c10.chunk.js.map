{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","keys_str","forEach","arr","key","replace","useCases","newArr","map","arrOfUseCaseAndItsSteps","uc","match","reg2","RegExp","newArr1","newArr2","step","test","push","sort","concat","window","open","document","write","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","value","getElementById","select","execCommand","returnRunCommand","ucInfoObj","env","urlToFile","join","returnLinkToJenkinsJob","data","jenkinsLink","BreadcrumbItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","arrWithData","state","_this2","index","react_default","a","createElement","className","rel","onClick","href","length","React","Component","SearchResultItems","shouldBeOpen","isOpen","arrOfAllSteps","onItemClickedHandler","onBreadcrumbClickHandler","pathToFile","describeTag_arr","asyncToGenerator","regenerator_default","mark","_callee","arrWithSteps","elem","arrWithCleanSteps","wrap","_context","prev","next","includes","getAllStepsFromFullBase","consumerBase","proBase","querySelector","sent","classList","remove","setState","stop","showTagIfOpen","describeTag_View","i","arrWithUCWithStepInDescriptor","numberOfAllUC","numberState","wantedWords","chosenKeyWords","split","fileName","arrWithStepsOfCurrentUseCase","allHashTags","charAt","toUpperCase","substring","hashTag","allKeyWords","keyWord","fullUseCaseName_arr","str","useCaseNameWithoutTag_arr","trim","randomNum","Math","floor","random","Row","Col","sm","md","size","offset","Breadcrumb","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","singleTag","singleKeyWord","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","reg","InputGroup","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","JumbotronComponent","Jumbotron","fluid","detailsSwitchView","name","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","number","numberConsumer","numberPro","entries","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","filePath","arrOfUseCasesKeys","keys","values","add","base","numberOfAllUseCases","toConsumableArray","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","consumer","pro","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","arrWithKeyWord","KeyWordsConnectorComponent","selected","clickHandler","getBackConnector","ButtonGroup","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onChange","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","returnNumberOfItems","itemsArr","counter","nestedArr","_this$props$state","searchButtonClicked","numberOfItems","InstructComponent","text","SearchAlgorithmTextComponent","categoriesOfEnvironment","result","kindOfHashTag","_ref2","connector","arrOfWantedWords","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","console","log","ucArr","updatedBase","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","arrOfAllKeyWords","arrOfKeyWords","oneHundredPercent","obj","callback","total","newObj","item","hasOwnProperty","Number","parseFloat","returnPercentageOfEachKeyWord","reduce","toPrecision","returnUpdatedListOfUseCases_ifOneWord","wantedValue","updatedList","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","firstKeyWord","secondKeyWord","thirdKeyWord","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","readyToProceed","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","arguments","undefined","showWholeBase","_returnUpdatedListOfU","hashTagName","has","delete","ref","once","then","snapshot","changeBaseToProperForm","changedBase","JumbotronComponent_JumbotronComponent","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","SearchButtonComponent_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.042e3c10.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n    let key = arr[0].replace(/%5C|%2F/g, '/');\r\n    keys_str += '<br /><form>' + key + '</form>';\r\n\r\n    let useCases = '';\r\n\r\n    let newArr = arr[1].map(arrOfUseCaseAndItsSteps => {\r\n      let uc = arrOfUseCaseAndItsSteps[0];\r\n      uc = uc.replace(/;/g, '.').replace(/\\|/, '/');\r\n      uc = uc.match(/It:.+|Step.+/gmi);\r\n      return uc[0];\r\n    });\r\n\r\n    // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n    const reg2 = new RegExp(/ [0-9]of/);\r\n    const newArr1 = [];\r\n    const newArr2 = [];\r\n\r\n    newArr.forEach((step) => {\r\n      if (reg2.test(step)) {\r\n        newArr1.push(step);\r\n      } else {\r\n        newArr2.push(step);\r\n      }\r\n    });\r\n\r\n    newArr1.sort();\r\n    newArr2.sort();\r\n    newArr = [...newArr1, ...newArr2];\r\n    // ----------------------------------------------------------------------------------------------\r\n\r\n    newArr.forEach(uc => {\r\n      useCases += '<p style=\"color:black;width:100%;\"> ' + uc + '</p>'\r\n    });\r\n\r\n    keys_str += useCases\r\n\r\n  });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write('<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>' + keys_str + '</div></section>');\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnRunCommand = (ucInfoObj) => {\r\n  let env;\r\n  if (ucInfoObj) {\r\n\r\n    switch (ucInfoObj.arr[0]) {\r\n      case 'CONSUMER':\r\n        env = 'master';\r\n        break;\r\n      case 'PRO':\r\n        env = 'master-pro';\r\n        break;\r\n      case 'LIVE':\r\n        env = 'live';\r\n        break;\r\n      default:\r\n        env = 'master';\r\n    }\r\n\r\n    let urlToFile = ucInfoObj.arr.join('/').concat('.js');\r\n    return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n  }\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst calculateNumberOfUCForConsumer = (items) => {\r\n  let numberOfUCForConsumer = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForConsumer += /CONSUMER|LIVE/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForConsumer;\r\n};\r\n\r\nconst calculateNumberOfUCForPro = (items) => {\r\n  let numberOfUCForPro = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForPro += /PRO/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForPro;\r\n};\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnRunCommand,\r\n  returnLinkToJenkinsJob,\r\n  calculateNumberOfUCForConsumer,\r\n  calculateNumberOfUCForPro,\r\n  prepareHTMLOfSearchResults\r\n}","import React from 'react';\r\nimport {returnLinkToJenkinsJob} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const arrWithData = this.props.arrWithData;\r\n    this.state = {\r\n      arrWithData: arrWithData\r\n    }\r\n  }\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.state.arrWithData ? this.state.arrWithData.map((data, index, arr) => {\r\n          return (\r\n            (index === 1) ?\r\n\r\n              <div key={data} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"jenkins-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={returnLinkToJenkinsJob(data, arr)}\r\n                >{data}\r\n                </a>\r\n              </div> : (index === this.state.arrWithData.length - 1) ?\r\n              <div key={data} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"github-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + this.state.arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </div> : (index === 0) ?\r\n                <div key={data} className=\"breadcrumb-link_mod\">ENV:<span className=\"environment_mod\">{data}</span></div> : null\r\n\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb, Button, Card, CardBody, Col, Collapse, Input, InputGroup, Row} from 'reactstrap';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport BreadcrumbItems from \"./BreadcrumbItems\";\r\nimport {returnRunCommand, saveToClipboard} from \"../helpers/helperFunctions\";\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onItemClickedHandler = (arrWithData, uc) => {\r\n    return {\r\n      arr: arrWithData,\r\n      uc\r\n    }\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, pathToFile, describeTag_arr) => async () => {\r\n\r\n    let arrWithSteps = [];\r\n\r\n    if(describeTag_arr.includes('Step')){\r\n      arrWithSteps = this.getAllStepsFromFullBase(this.props.consumerBase, this.props.proBase, pathToFile);\r\n    }\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove(\"show\");\r\n    }\r\n\r\n    // prepare steps to show in collapse dialog\r\n    let arrWithCleanSteps = [];\r\n    if (0 in arrWithSteps) {\r\n      arrWithSteps.forEach(step => {\r\n\r\n        // mark step which must be highlighted\r\n        const reg = new RegExp(describeTag_arr);\r\n        if (reg.test(step)) {\r\n          step = step.concat('_XOXO');\r\n        }\r\n        arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n      });\r\n\r\n      // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n      const reg2 = new RegExp(/ [0-9]of/);\r\n      const newArr1 = [];\r\n      const newArr2 = [];\r\n\r\n      arrWithCleanSteps.forEach((step) => {\r\n        if (reg2.test(step)) {\r\n          newArr1.push(step);\r\n        } else {\r\n          newArr2.push(step);\r\n        }\r\n      });\r\n\r\n      newArr1.sort();\r\n      newArr2.sort();\r\n      arrWithCleanSteps = [...newArr1, ...newArr2];\r\n    }\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: arrWithCleanSteps\r\n      }\r\n    });\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show'\r\n    }\r\n  };\r\n\r\n  showTagIfOpen = (key, describeTag_arr, describeTag_View) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return describeTag_arr;\r\n    } else {\r\n      return describeTag_View;\r\n    }\r\n  };\r\n\r\n  getAllStepsFromFullBase = (consumerBase, proBase, pathToFile) => {\r\n\r\n    let arrWithSteps = [];\r\n\r\n    if(pathToFile.includes('CONSUMER')) {\r\n      for (let i = 0; i < consumerBase.length; i++) {\r\n        if (consumerBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          consumerBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    } else if (pathToFile.includes('PRO')) {\r\n      for (let i = 0; i < proBase.length; i++) {\r\n        if (proBase[i][0] === pathToFile) {\r\n          // eslint-disable-next-line no-loop-func\r\n          proBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n            arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arrWithSteps;\r\n  };\r\n\r\n  render() {\r\n    let numberOfAllUC = 0;\r\n\r\n    this.props.items.forEach(arr => {\r\n      numberOfAllUC += arr[1].length;\r\n    });\r\n\r\n    let numberState = numberOfAllUC;\r\n    let wantedWords = this.props.wantedWords;\r\n    let chosenKeyWords = this.props.chosenKeyWords;\r\n\r\n    return (\r\n      this.props.items ? this.props.items.map(arr => {\r\n        const arrWithData = arr[0].split(/%5C|%2F/);\r\n        return arr[1].map(arrOfUseCaseAndItsSteps => {\r\n\r\n          const fileName = arrWithData[2];\r\n          const arrWithStepsOfCurrentUseCase = typeof arrOfUseCaseAndItsSteps[1] !== 'string'? arrOfUseCaseAndItsSteps[1]: [];\r\n          let uc = arrOfUseCaseAndItsSteps[0];\r\n\r\n            // if use case have '!validation;' key words do not show this use case.\r\n            if (!(/!validation;/.test(uc))) {\r\n\r\n              uc = uc.charAt(0).toUpperCase() + uc.substring(1) + '.';\r\n              uc = uc.replace(/;/gmi, '.').replace(/\\|/gmi, '/');\r\n\r\n              // cut into chunks: hash tags, constant keywords, full use case name (with describe Tag name) and use cases without describe tag name.\r\n              let allHashTags = uc.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm); // #hashtag1 #hashtag2\r\n\r\n              if (allHashTags) {\r\n                allHashTags = allHashTags.map(hashTag => {\r\n                  return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n                });\r\n              }\r\n\r\n              let allKeyWords = uc.match(/![a-zA-Z0-9-_]+\\./gmi); // !keyWord1, !keyWord2.\r\n\r\n              if (allKeyWords) {\r\n                allKeyWords = allKeyWords.map(keyWord => {\r\n                  return keyWord.replace(/!/, '').replace(/\\./, ',');\r\n                });\r\n              }\r\n\r\n              const fullUseCaseName_arr = /It|Step/.test(uc) ? uc.match(/It:.+|Step.+/gmi) : [uc]; // It: something. OR Step 1of5: something OR Step: something\r\n              const str = /It|Step/.test(fullUseCaseName_arr[0]) ? fullUseCaseName_arr[0].replace(/Step [0-9]+of[0-9]+:/, '').replace(/It:/, '').replace(/Step:/, '') : fullUseCaseName_arr[0];\r\n              const describeTag_arr = /It: |Step /.test(uc) ? uc.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n              const describeTag_View = ['UseCase:'];\r\n\r\n              const useCaseNameWithoutTag_arr = [];\r\n              useCaseNameWithoutTag_arr.push(str.trim());\r\n              const randomNum = () => Math.floor(Math.random() * 1000);\r\n\r\n              return (\r\n                <Row key={uc + randomNum()}>\r\n                  <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n                    <Breadcrumb className=\"list-item_mod\"\r\n                      // onClick={itemClicked.bind(null, this.onItemClickedHandler(arrWithData, uc))}\r\n                                onClick={this.onBreadcrumbClickHandler(uc, arr[0], describeTag_arr[0])}\r\n                    >\r\n\r\n                      <div className=\"breadcrumb-item-mod\">\r\n                        <span className=\"item-number_mod\">{(numberOfAllUC++) - (numberState - 1)}.</span>\r\n                      </div>\r\n\r\n                      <div className=\"use_case-text_mod\">\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2\" : \"list-text_mod1\"}\r\n                          highlightClassName=\"highlight-describeTag\"\r\n                          searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n                          autoEscape={true}\r\n                          textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n                        />\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2 font-roboto\" : \"list-text_mod1 font-roboto\"}\r\n                          highlightClassName=\"highlight-text\"\r\n                          searchWords={wantedWords}\r\n                          autoEscape={true}\r\n                          textToHighlight={useCaseNameWithoutTag_arr[0]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"item-footer-mod\">\r\n                        <div className=\"hashtags-title-mod\">HASHTAGS:\r\n                          {allHashTags ? allHashTags.map(singleTag => {\r\n                            return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>\r\n                          }) : null}\r\n                        </div>\r\n\r\n                        <div className=\"keywords-title-mod\">KEY WORDS:\r\n                          {allKeyWords ? allKeyWords.map(singleKeyWord => {\r\n                            return <Highlighter\r\n                              key={singleKeyWord + randomNum()}\r\n                              className=\"keyword-item-mod\"\r\n                              highlightClassName=\"highlight-text\"\r\n                              searchWords={chosenKeyWords ? chosenKeyWords : []}\r\n                              autoEscape={true}\r\n                              textToHighlight={singleKeyWord}\r\n                            />\r\n                          }) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"collapse-card-mod\">\r\n                        <Collapse className={this.shouldBeOpen(uc)}>\r\n                          <Card>\r\n                            <CardBody>\r\n                              <BreadcrumbItems arrWithData={arrWithData}/>\r\n\r\n                              {arrWithStepsOfCurrentUseCase.length? <div className=\"collapse-steps collapse-descriptors test-description\">\r\n                                {<div className=\"test-description-title\">DESCRIPTION OF THIS TEST (step by step):</div>}\r\n                                {\r\n                                  arrWithStepsOfCurrentUseCase.map(step => {\r\n                                    return (\r\n                                      <div key={step} className=\"collapse-step_mod2\">{step}</div>\r\n                                    )\r\n                                  })\r\n                                }\r\n                              </div>: null}\r\n\r\n                              {\r\n                                this.state.arrOfAllSteps.length? <div className=\"collapse-steps collapse-descriptors test-description\">\r\n                                <div className=\"test-description-title\">OTHER USE CASES (tests which are called \"Steps\") IN FILE {fileName}.js: </div>\r\n                                {\r\n                                  this.state.arrOfAllSteps.map(step => {\r\n                                    const reg = new RegExp(/_XOXO/);\r\n                                    return <div\r\n                                      key={step}\r\n                                      className={reg.test(step) ? \"collapse-step_mod1\" : \"collapse-step_mod2\"}\r\n                                    >{step.replace(/_XOXO/, '')}\r\n                                    </div>\r\n                                  })}</div>:null\r\n                              }\r\n\r\n                              <div className=\"collapse-inputGroup_mod\">\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={useCaseNameWithoutTag_arr[0]}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                                         id={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">COMMAND TO RUN THIS UC:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy run command</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={returnRunCommand(this.onItemClickedHandler(arrWithData, uc))}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                                         id={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n                              </div>\r\n\r\n                            </CardBody>\r\n                          </Card>\r\n                        </Collapse>\r\n                      </div>\r\n\r\n                    </Breadcrumb>\r\n\r\n                  </Col>\r\n                </Row>\r\n              )\r\n            }\r\n            return '';\r\n          }\r\n        )\r\n      }) : null\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className={(this.props.ucInfoObj && this.props.detailsSwitchView) || (this.props.name && this.props.detailsSwitchView) ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE CASES SEARCH</h1>\r\n        {[0] in this.props.items? <Button color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          className=\"print_view-button_mod\"\r\n                                          onClick={this.props.createPrintView(this.props.items)}>Print View of this list</Button>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let number = 0, numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    const filePath = arr[0]; // string: path to file: \"CONSUMER%2FGROUPS%2FGENERAL_GROUPS%2Fgroup_uc05\"\r\n    const arrOfUseCasesKeys = Object.keys(arr[1]); // array: files paths: [\"HSH_Settings; !guest; !members; Step 2of7: Members settings; Temporary deactivation of Guest account\", (...)]\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const arrOfUseCasesValues = Object.values(arr[1]); // array: values: [ \"BEFORE: (...)\", \"STEP 1: (...)\", \"STEP 2: (...)\", \"ASSERT: (...)\", \"END: (...)\" ]\r\n\r\n    arr[1] = Object.entries(arr[1]);\r\n\r\n    number += arrOfUseCasesKeys.length;\r\n\r\n    if (/CONSUMER|LIVE/mi.test(filePath)) {\r\n\r\n      consumerList.push(arr);\r\n\r\n      numberConsumer += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(filePath)) {\r\n\r\n      proList.push(arr);\r\n\r\n      numberPro += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    numberOfAllUseCases: number,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  const chosenHashtag = state.hashtag;\r\n  const uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n  const uniqHashTagsForPro = state.uniqHashTagsForPro;\r\n\r\n  const consumer_chkbox = state.consumer_chkbox;\r\n  const pro_chkbox = state.pro_chkbox;\r\n\r\n  const consumer_hashTags_exist = uniqHashTagsForConsumer && uniqHashTagsForConsumer.length;\r\n  const consumer =  consumer_hashTags_exist && consumer_chkbox && pro_chkbox === false;\r\n\r\n  const pro_hashTags_exist = uniqHashTagsForPro && uniqHashTagsForPro.length;\r\n  const pro =  pro_hashTags_exist && consumer_chkbox === false && pro_chkbox;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          consumer ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n\r\n              )\r\n            })\r\n          ) : pro ? (\r\n            uniqHashTagsForPro.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })\r\n          ): null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const arr = Object.entries(keyWords);\r\n\r\n  arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          arr.map(arrWithKeyWord => {\r\n\r\n            if (0 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 5) {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (5 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 10) {\r\n              return (\r\n                <div className=\"badge-mod h4x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (10 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 15) {\r\n              return (\r\n                <div className=\"badge-mod h3x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (15 <= arrWithKeyWord[1]) {\r\n              return (\r\n                <div className=\"badge-mod h2x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            return {};\r\n          })\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  state = {\r\n    selected: 'WITH'\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const innerText = e.target.innerText;\r\n    this.setState(\r\n      {\r\n        selected: innerText\r\n      }\r\n    );\r\n    return this.props.getBackConnector(innerText);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      this.props.chosenHashTag ? (\r\n\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">KEY WORD CONNECTOR\r\n            </div>\r\n            <ButtonGroup onClick={this.clickHandler}>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons or-mod\"\r\n                      active={this.state.selected === 'OR'}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITH'}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITHOUT'}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n            <div className=\"blue-color font-weight-bolder margin-top\"> </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class SearchButtonComponent extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      !this.props.visibility ? (\r\n        <Button color={this.props.color} className=\"form-button_mod\"\r\n                onClick={this.props.executeFunc}>{this.props.name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  returnNumberOfItems = (itemsArr) => {\r\n    let counter = 0;\r\n    itemsArr.forEach(nestedArr => {\r\n      nestedArr[1].forEach(uc => {\r\n          if(!(/!validation;/.test(uc))) counter += 1;\r\n        })\r\n    });\r\n    return counter;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { name, hashtag, searchButtonClicked, items} = this.props.state;\r\n    const numberOfItems = this.returnNumberOfItems(items);\r\n\r\n    return (\r\n\r\n        numberOfItems ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfItems}</div>:\r\n          (hashtag && searchButtonClicked) || (name && searchButtonClicked)? <div className=\"noResult-numberOfItems_mod\">NO RESULTS</div>:\r\n            null\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  categoriesOfEnvironment = ({consumer_chkbox, pro_chkbox}) => {\r\n    let result;\r\n    if (consumer_chkbox && pro_chkbox === false) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">CONSUMER</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox === false) result = <span>First choose <span className=\"algorithm-env_mod\">ENV</span>, you are interested in.</span>;\r\n    if (consumer_chkbox && pro_chkbox) result = <span>Find all Use Cases for both environments: <span className=\"algorithm-env_mod\">CONSUMER</span> and <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    return result;\r\n  };\r\n\r\n  kindOfHashTag = ({hashtag}) => {\r\n    let result;\r\n    if (hashtag) result = <span>Show <span className=\"algorithm-only_mod\">ONLY</span> UCs with <span\r\n      className=\"algorithm-only_mod\">hashtag: </span><span className=\"algorithm-hashtag_mod\">{hashtag}</span></span>;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `!${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const arrOfAllKeyWords = [];\r\n\r\n  const countWords = inputWords => inputWords.reduce((obj, word) => {\r\n    obj[word] = (obj[word] || 0) + 1;\r\n    return obj;\r\n  }, {});\r\n\r\n  const countPercent = (value, total) => ((value / total) * 100).toPrecision(2);\r\n\r\n  function returnPercentageOfEachKeyWord(obj, callback, total) {\r\n    const newObj = {};\r\n    for (let item in obj) {\r\n      if (obj.hasOwnProperty(item)) {\r\n        newObj[item] = Number.parseFloat(callback(obj[item], total));\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n        const arrOfKeyWords = useCase[0].match(/![a-zA-Z0-9-_]+;/gmi);\r\n        if (arrOfKeyWords) {\r\n          arrOfKeyWords.forEach((keyWord) => {\r\n            keyWord = keyWord.replace(/!/, '').replace(/;/, '');\r\n            arrOfAllKeyWords.push(keyWord);\r\n          })\r\n        }\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue;\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(uc => {\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (uc) {\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(uc);\r\n          }\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(uc);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(uc);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport { prepareHTMLOfSearchResults } from '../helpers/helperFunctions'\r\nimport {\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null,\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          items: [],\r\n          name: '',\r\n          hashtag: '',\r\n          searchButtonClicked: false,\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: []\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false,\r\n            base,\r\n            searchButtonClicked: true\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      this.setState({\r\n        // name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: wantedWords\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n      this.setState(() => {\r\n        return {\r\n          items: base\r\n        }\r\n      })\r\n    }\r\n\r\n    // clear search result view if input is clearing by user\r\n    if (searchValue && searchValue.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  // onItemClicked = (ucInfoObj) => {\r\n  //   this.setState({\r\n  //     ucInfoObj: ucInfoObj,\r\n  //     detailsSwitchView: true\r\n  //   })\r\n  // };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    // this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    this.setState({\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      pro_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    this.setState({\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      consumer_chkbox: false,\r\n      items: [],\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  createPrintView = (items) => () => {\r\n    prepareHTMLOfSearchResults(items);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n     {\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            items={this.state.items}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                { this.state.consumer_chkbox || this.state.pro_chkbox?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div>: null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent keyWords={this.state.keyWords}\r\n                                            chosenHashTag={this.state.hashtag}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.multipleFuncOnChangeHandler}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"proceed with these settings!\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ start from the beginning\"\r\n                                       visibility={this.state.readyToProceed}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent state={this.state}/>\r\n\r\n              <SearchResultItems items={this.state.items}\r\n                                 consumerBase={this.state.consumerList}\r\n                                 proBase={this.state.proList}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}