{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","keys_str","forEach","arr","key","replace","useCases","newArr","map","uc","match","reg2","RegExp","newArr1","newArr2","step","test","push","sort","concat","window","open","document","write","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","value","getElementById","select","execCommand","returnRunCommand","ucInfoObj","env","urlToFile","join","returnLinkToJenkinsJob","data","jenkinsLink","calculateNumberOfUCForConsumer","numberOfUCForConsumer","length","calculateNumberOfUCForPro","numberOfUCForPro","BreadcrumbItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","arrWithData","state","_this2","index","react_default","a","createElement","className","rel","onClick","href","React","Component","SearchResultItems","shouldBeOpen","isOpen","arrOfAllSteps","onItemClickedHandler","onBreadcrumbClickHandler","arrWithAllSteps","describeTag_arr","asyncToGenerator","regenerator_default","mark","_callee","elem","arrWithCleanSteps","wrap","_context","prev","next","querySelector","sent","classList","remove","setState","stop","showTagIfOpen","describeTag_View","numberOfAllUC","numberState","wantedWords","chosenKeyWords","showWholeBase","split","allHashTags","charAt","toUpperCase","substring","hashTag","allKeyWords","keyWord","fullUseCaseName_arr","str","useCaseNameWithoutTag_arr","trim","randomNum","Math","floor","random","Row","Col","sm","md","size","offset","Breadcrumb","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","singleTag","singleKeyWord","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","reg","InputGroup","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","JumbotronComponent","Jumbotron","fluid","detailsSwitchView","name","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","number","numberConsumer","numberPro","entries","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","keys","add","base","numberOfAllUseCases","toConsumableArray","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","arrWithKeyWord","includes","KeyWordsConnectorComponent","selected","clickHandler","getBackConnector","ButtonGroup","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onChange","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","returnNumberOfItems","itemsArr","counter","nestedArr","_this$props$state","searchButtonClicked","numberOfItems","InstructComponent","text","SearchAlgorithmTextComponent","categoriesOfEnvironment","result","kindOfHashTag","_ref2","connector","arrOfWantedWords","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","console","log","ucArr","updatedBase","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","arrOfAllKeyWords","arrOfKeyWords","oneHundredPercent","obj","callback","total","newObj","item","hasOwnProperty","Number","parseFloat","returnPercentageOfEachKeyWord","reduce","toPrecision","returnUpdatedListOfUseCases_ifOneWord","wantedValue","updatedList","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","firstKeyWord","secondKeyWord","thirdKeyWord","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","readyToProceed","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","arguments","undefined","_returnUpdatedListOfU","onItemClicked","hideThisViewBtn","calculateNumbersOfUC","hashTagName","has","delete","ref","once","then","snapshot","changeBaseToProperForm","changedBase","JumbotronComponent_JumbotronComponent","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","SearchButtonComponent_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","itemClicked","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a6630c8.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n    let key = arr[0].replace(/%5C|%2F/g, '/');\r\n    keys_str += '<br /><form>' + key + '</form>';\r\n\r\n    let useCases = '';\r\n\r\n    let newArr = arr[1].map(uc => {\r\n      uc = uc.replace(/;/g, '.').replace(/\\|/, '/');\r\n      uc = uc.match(/It:.+|Step.+/gmi);\r\n      return uc[0];\r\n    });\r\n\r\n    // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n    const reg2 = new RegExp(/ [0-9]of/);\r\n    const newArr1 = [];\r\n    const newArr2 = [];\r\n\r\n    newArr.forEach((step) => {\r\n      if (reg2.test(step)) {\r\n        newArr1.push(step);\r\n      } else {\r\n        newArr2.push(step);\r\n      }\r\n    });\r\n\r\n    newArr1.sort();\r\n    newArr2.sort();\r\n    newArr = [...newArr1, ...newArr2];\r\n    // ----------------------------------------------------------------------------------------------\r\n\r\n    newArr.forEach(uc => {\r\n      useCases += '<p style=\"color:black;width:100%;\"> ' + uc + '</p>'\r\n    });\r\n\r\n    keys_str += useCases\r\n\r\n  });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write('<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>' + keys_str + '</div></section>');\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnRunCommand = (ucInfoObj) => {\r\n  let env;\r\n  if (ucInfoObj) {\r\n\r\n    switch (ucInfoObj.arr[0]) {\r\n      case 'CONSUMER':\r\n        env = 'master';\r\n        break;\r\n      case 'PRO':\r\n        env = 'master-pro';\r\n        break;\r\n      case 'LIVE':\r\n        env = 'live';\r\n        break;\r\n      default:\r\n        env = 'master';\r\n    }\r\n\r\n    let urlToFile = ucInfoObj.arr.join('/').concat('.js');\r\n    return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n  }\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst calculateNumberOfUCForConsumer = (items) => {\r\n  let numberOfUCForConsumer = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForConsumer += /CONSUMER|LIVE/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForConsumer;\r\n};\r\n\r\nconst calculateNumberOfUCForPro = (items) => {\r\n  let numberOfUCForPro = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForPro += /PRO/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForPro;\r\n};\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnRunCommand,\r\n  returnLinkToJenkinsJob,\r\n  calculateNumberOfUCForConsumer,\r\n  calculateNumberOfUCForPro,\r\n  prepareHTMLOfSearchResults\r\n}","import React from 'react';\r\nimport {returnLinkToJenkinsJob} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const arrWithData = this.props.arrWithData;\r\n    this.state = {\r\n      arrWithData: arrWithData\r\n    }\r\n  }\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.state.arrWithData ? this.state.arrWithData.map((data, index, arr) => {\r\n          return (\r\n            (index === 1) ?\r\n\r\n              <div key={data} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"jenkins-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={returnLinkToJenkinsJob(data, arr)}\r\n                >{data}\r\n                </a>\r\n              </div> : (index === this.state.arrWithData.length - 1) ?\r\n              <div key={data} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"github-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + this.state.arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </div> : (index === 0) ?\r\n                <div key={data} className=\"breadcrumb-link_mod\">ENV:<span className=\"environment_mod\">{data}</span></div> : null\r\n\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb, Button, Card, CardBody, Col, Collapse, Input, InputGroup, Row} from 'reactstrap';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport BreadcrumbItems from \"./BreadcrumbItems\";\r\nimport {returnRunCommand, saveToClipboard} from \"../helpers/helperFunctions\";\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onItemClickedHandler = (arrWithData, uc) => {\r\n    return {\r\n      arr: arrWithData,\r\n      uc\r\n    }\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, arrWithAllSteps, describeTag_arr) => async () => {\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove(\"show\");\r\n    }\r\n\r\n    // prepare steps to show in collapse dialog\r\n    let arrWithCleanSteps = [];\r\n    if (0 in arrWithAllSteps) {\r\n      arrWithAllSteps.forEach(step => {\r\n\r\n        // mark step which must be highlighted\r\n        const reg = new RegExp(describeTag_arr);\r\n        if (reg.test(step)) {\r\n          step = step.concat('_XOXO');\r\n        }\r\n        arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n      });\r\n\r\n      // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n      const reg2 = new RegExp(/ [0-9]of/);\r\n      const newArr1 = [];\r\n      const newArr2 = [];\r\n\r\n      arrWithCleanSteps.forEach((step) => {\r\n        if (reg2.test(step)) {\r\n          newArr1.push(step);\r\n        } else {\r\n          newArr2.push(step);\r\n        }\r\n      });\r\n\r\n      newArr1.sort();\r\n      newArr2.sort();\r\n      arrWithCleanSteps = [...newArr1, ...newArr2];\r\n    }\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: arrWithCleanSteps\r\n      }\r\n    });\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show'\r\n    }\r\n  };\r\n\r\n  showTagIfOpen = (key, describeTag_arr, describeTag_View) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return describeTag_arr;\r\n    } else {\r\n      return describeTag_View;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let numberOfAllUC = 0;\r\n\r\n    this.props.items.forEach(arr => {\r\n      numberOfAllUC += arr[1].length;\r\n    });\r\n\r\n    let numberState = numberOfAllUC;\r\n    let wantedWords = this.props.wantedWords;\r\n    let chosenKeyWords = this.props.chosenKeyWords;\r\n    let showWholeBase = this.props.showWholeBase;\r\n\r\n    return (\r\n      this.props.items ? this.props.items.map(arr => {\r\n        let arrWithData = arr[0].split(/%5C|%2F/);\r\n        return arr[1].map(uc => {\r\n\r\n            // if use case have '!validation;' key words do not show this use case.\r\n            if (!(/!validation;/.test(uc))) {\r\n\r\n              uc = uc.charAt(0).toUpperCase() + uc.substring(1) + '.';\r\n              uc = uc.replace(/;/gmi, '.').replace(/\\|/gmi, '/');\r\n\r\n              // cut into chunks: hash tags, constant keywords, full use case name (with describe Tag name) and use cases without describe tag name.\r\n              let allHashTags = uc.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm); // #hashtag1 #hashtag2\r\n\r\n              if (allHashTags) {\r\n                allHashTags = allHashTags.map(hashTag => {\r\n                  return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n                });\r\n              }\r\n\r\n              let allKeyWords = uc.match(/![a-zA-Z0-9-_]+\\./gmi); // !keyWord1, !keyWord2.\r\n\r\n              if (allKeyWords) {\r\n                allKeyWords = allKeyWords.map(keyWord => {\r\n                  return keyWord.replace(/!/, '').replace(/\\./, ',');\r\n                });\r\n              }\r\n\r\n              const fullUseCaseName_arr = /It|Step/.test(uc) ? uc.match(/It:.+|Step.+/gmi) : [uc]; // It: something. OR Step 1of5: something OR Step: something\r\n              const str = /It|Step/.test(fullUseCaseName_arr[0]) ? fullUseCaseName_arr[0].replace(/Step [0-9]+of[0-9]+:/, '').replace(/It:/, '').replace(/Step:/, '') : fullUseCaseName_arr[0];\r\n              const describeTag_arr = /It: |Step /.test(uc) ? uc.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n              const describeTag_View = ['UseCase:'];\r\n\r\n              const useCaseNameWithoutTag_arr = [];\r\n              useCaseNameWithoutTag_arr.push(str.trim());\r\n              const arrWithAllSteps = /Step /.test(uc) ? arr[1] : [];\r\n              const randomNum = () => Math.floor(Math.random() * 1000);\r\n\r\n              return (\r\n                <Row key={uc + randomNum()}>\r\n                  <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n                    <Breadcrumb className=\"list-item_mod\"\r\n                      // onClick={itemClicked.bind(null, this.onItemClickedHandler(arrWithData, uc))}\r\n                                onClick={this.onBreadcrumbClickHandler(uc, arrWithAllSteps, describeTag_arr[0])}\r\n                    >\r\n\r\n                      <div className=\"breadcrumb-item-mod\">\r\n                        <span className=\"item-number_mod\">{(numberOfAllUC++) - (numberState - 1)}.</span>\r\n                      </div>\r\n\r\n                      <div className=\"use_case-text_mod\">\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2\" : \"list-text_mod1\"}\r\n                          highlightClassName=\"highlight-describeTag\"\r\n                          searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n                          autoEscape={true}\r\n                          textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n                        />\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2 font-roboto\" : \"list-text_mod1 font-roboto\"}\r\n                          highlightClassName=\"highlight-text\"\r\n                          searchWords={showWholeBase ? [] : wantedWords}\r\n                          autoEscape={true}\r\n                          textToHighlight={useCaseNameWithoutTag_arr[0]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"item-footer-mod\">\r\n                        <div className=\"hashtags-title-mod\">HASHTAGS:\r\n                          {allHashTags ? allHashTags.map(singleTag => {\r\n                            return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>\r\n                          }) : null}\r\n                        </div>\r\n\r\n                        <div className=\"keywords-title-mod\">KEY WORDS:\r\n                          {allKeyWords ? allKeyWords.map(singleKeyWord => {\r\n                            return <Highlighter\r\n                              key={singleKeyWord + randomNum()}\r\n                              className=\"keyword-item-mod\"\r\n                              highlightClassName=\"highlight-text\"\r\n                              searchWords={chosenKeyWords ? chosenKeyWords : []}\r\n                              autoEscape={true}\r\n                              textToHighlight={singleKeyWord}\r\n                            />\r\n                          }) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"collapse-card-mod\">\r\n                        <Collapse className={this.shouldBeOpen(uc)}>\r\n                          <Card>\r\n                            <CardBody>\r\n                              <BreadcrumbItems arrWithData={arrWithData}/>\r\n                              <div className=\"collapse-steps\">\r\n                                <span\r\n                                  className={`collapse-descriptors ${!this.state.arrOfAllSteps.length ? 'descriptor_mod' : ''}`}>\r\n                                  {this.state.arrOfAllSteps.length ? 'REST STEPS OF WHOLE TEST:' : ''}</span>\r\n                                {\r\n                                  this.state.arrOfAllSteps ? this.state.arrOfAllSteps.map(step => {\r\n                                    const reg = new RegExp(/_XOXO/);\r\n                                    return <div\r\n                                      key={step}\r\n                                      className={reg.test(step) ? \"collapse-step_mod1\" : \"collapse-step_mod2\"}\r\n                                    >{step.replace(/_XOXO/, '')}\r\n                                    </div>\r\n                                  }) : null\r\n                                }\r\n                              </div>\r\n\r\n                              <div className=\"collapse-inputGroup_mod\">\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={useCaseNameWithoutTag_arr[0]}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                                         id={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">COMMAND TO RUN THIS UC:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy run command</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={returnRunCommand(this.onItemClickedHandler(arrWithData, uc))}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                                         id={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n                              </div>\r\n\r\n                            </CardBody>\r\n                          </Card>\r\n                        </Collapse>\r\n                      </div>\r\n\r\n                    </Breadcrumb>\r\n\r\n                  </Col>\r\n                </Row>\r\n              )\r\n            }\r\n            return '';\r\n          }\r\n        )\r\n      }) : null\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className={(this.props.ucInfoObj && this.props.detailsSwitchView) || (this.props.name && this.props.detailsSwitchView) ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE CASES SEARCH</h1>\r\n        {[0] in this.props.items? <Button color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          className=\"print_view-button_mod\"\r\n                                          onClick={this.props.createPrintView(this.props.items)}>Print View of this list</Button>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let number = 0, numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    arr[1] = Object.keys(arr[1]);\r\n    number += arr[1].length;\r\n\r\n    if (/CONSUMER|LIVE/mi.test(arr[0])) {\r\n\r\n      consumerList.push(arr);\r\n      numberConsumer += arr[1].length;\r\n      let allHashTags = returnAllHashTags(arr[1][0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(arr[0])) {\r\n\r\n      proList.push(arr);\r\n      numberPro += arr[1].length;\r\n      let allHashTags = returnAllHashTags(arr[1][0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    numberOfAllUseCases: number,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  let chosenHashtag = state.hashtag;\r\n  let uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          (uniqHashTagsForConsumer && uniqHashTagsForConsumer.length) ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })) : null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const arr = Object.entries(keyWords);\r\n\r\n  arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          arr.map(arrWithKeyWord => {\r\n\r\n            if (0 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 5) {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (5 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 10) {\r\n              return (\r\n                <div className=\"badge-mod h4x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (10 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 15) {\r\n              return (\r\n                <div className=\"badge-mod h3x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (15 <= arrWithKeyWord[1]) {\r\n              return (\r\n                <div className=\"badge-mod h2x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            return {};\r\n          })\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  state = {\r\n    selected: 'WITH'\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const innerText = e.target.innerText;\r\n    this.setState(\r\n      {\r\n        selected: innerText\r\n      }\r\n    );\r\n    return this.props.getBackConnector(innerText);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      this.props.keyWords && this.props.chosenKeyWords.length ? (\r\n\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">Apply your \"SEARCH CONNECTOR\" for Key\r\n              Words.\r\n            </div>\r\n            <ButtonGroup onClick={this.clickHandler}>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons or-mod\"\r\n                      active={this.state.selected === 'OR'}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITH'}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITHOUT'}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 12}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class SearchButtonComponent extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      !this.props.visibility ? (\r\n        <Button color={this.props.color} className=\"form-button_mod\"\r\n                onClick={this.props.executeFunc}>{this.props.name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  returnNumberOfItems = (itemsArr) => {\r\n    let counter = 0;\r\n    itemsArr.forEach(nestedArr => {\r\n      nestedArr[1].forEach(uc => {\r\n          if(!(/!validation;/.test(uc))) counter += 1;\r\n        })\r\n    });\r\n    return counter;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { name, hashtag, searchButtonClicked, items} = this.props.state;\r\n    const numberOfItems = this.returnNumberOfItems(items);\r\n\r\n    return (\r\n\r\n        numberOfItems ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfItems}</div>:\r\n          (hashtag && searchButtonClicked) || (name && searchButtonClicked)? <div className=\"noResult-numberOfItems_mod\">NO RESULTS</div>:\r\n            null\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  categoriesOfEnvironment = ({consumer_chkbox, pro_chkbox}) => {\r\n    let result;\r\n    if (consumer_chkbox && pro_chkbox === false) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">CONSUMER</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox === false) result = <span>First choose <span className=\"algorithm-env_mod\">ENV</span>, you are interested in.</span>;\r\n    if (consumer_chkbox && pro_chkbox) result = <span>Find all Use Cases for both environments: <span className=\"algorithm-env_mod\">CONSUMER</span> and <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    return result;\r\n  };\r\n\r\n  kindOfHashTag = ({hashtag}) => {\r\n    let result;\r\n    if (hashtag) result = <span>Show <span className=\"algorithm-only_mod\">ONLY</span> UCs with <span\r\n      className=\"algorithm-only_mod\">hashtag: </span><span className=\"algorithm-hashtag_mod\">{hashtag}</span></span>;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `!${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const arrOfAllKeyWords = [];\r\n\r\n  const countWords = inputWords => inputWords.reduce((obj, word) => {\r\n    obj[word] = (obj[word] || 0) + 1;\r\n    return obj;\r\n  }, {});\r\n\r\n  const countPercent = (value, total) => ((value / total) * 100).toPrecision(2);\r\n\r\n  function returnPercentageOfEachKeyWord(obj, callback, total) {\r\n    const newObj = {};\r\n    for (let item in obj) {\r\n      if (obj.hasOwnProperty(item)) {\r\n        newObj[item] = Number.parseFloat(callback(obj[item], total));\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n        const arrOfKeyWords = useCase.match(/![a-zA-Z0-9-_]+;/gmi);\r\n        if (arrOfKeyWords) {\r\n          arrOfKeyWords.forEach((keyWord) => {\r\n            keyWord = keyWord.replace(/!/, '').replace(/;/, '');\r\n            arrOfAllKeyWords.push(keyWord);\r\n          })\r\n        }\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue;\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(uc => {\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (uc) {\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(uc);\r\n          }\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(uc);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(uc);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport {\r\n  calculateNumberOfUCForConsumer,\r\n  calculateNumberOfUCForPro,\r\n  prepareHTMLOfSearchResults\r\n} from '../helpers/helperFunctions'\r\nimport {\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    showWholeBase: false,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null,\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          items: [],\r\n          name: '',\r\n          hashtag: '',\r\n          searchButtonClicked: false,\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: []\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false,\r\n            base,\r\n            searchButtonClicked: true\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      this.setState({\r\n        // name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: wantedWords\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n      this.setState(() => {\r\n        return {\r\n          items: base\r\n        }\r\n      })\r\n    }\r\n\r\n    // clear search result view if input is clearing by user\r\n    if (searchValue && searchValue.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  onItemClicked = (ucInfoObj) => {\r\n    this.setState({\r\n      ucInfoObj: ucInfoObj,\r\n      detailsSwitchView: true\r\n    })\r\n  };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    // this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = (e) => {\r\n    let showWholeBase = false;\r\n    let checkedConsumerValue = 'CONSUMER';\r\n    e.target.innerText = !this.state.consumer_chkbox ? `✓ ${checkedConsumerValue}` : checkedConsumerValue;\r\n\r\n    this.setState({\r\n      showWholeBase: showWholeBase,\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = (e) => {\r\n    let checkedProValue = 'PRO';\r\n    e.target.innerText = this.state.pro_chkbox ? checkedProValue : `✓ ${checkedProValue}`;\r\n\r\n    this.setState({\r\n      showWholeBase: false,\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  hideThisViewBtn = () => {\r\n    this.setState({\r\n      detailsSwitchView: false\r\n    })\r\n  };\r\n\r\n  createPrintView = (items) => () => {\r\n    prepareHTMLOfSearchResults(items);\r\n  };\r\n\r\n  calculateNumbersOfUC = (items = this.state.items) => {\r\n    return calculateNumberOfUCForConsumer(items) + calculateNumberOfUCForPro(items);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n     {\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            items={this.state.items}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                { this.state.consumer_chkbox || this.state.pro_chkbox?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div>: null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent keyWords={this.state.keyWords}\r\n                                            chosenKeyWords={this.state.chosenKeyWords}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.multipleFuncOnChangeHandler}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"proceed with these settings!\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ start from the beginning\"\r\n                                       visibility={this.state.readyToProceed}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent state={this.state}/>\r\n\r\n              <SearchResultItems items={this.state.items}\r\n                                 base={this.state.base}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 itemClicked={this.onItemClicked}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}