{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","Components/AllCasesButtonComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareMapOfSearchResults","items","myMap","Map","forEach","arr","key","replace","value","set","console","log","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","document","getElementById","select","execCommand","returnRunCommand","ucInfoObj","env","urlToFile","join","concat","returnLinkToJenkinsJob","data","jenkinsLink","calculateNumberOfUCForConsumer","numberOfUCForConsumer","test","length","calculateNumberOfUCForPro","numberOfUCForPro","BreadcrumbItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","arrWithData","state","_this2","map","index","react_default","a","createElement","className","rel","onClick","href","React","Component","SearchResultItems","shouldBeOpen","isOpen","arrOfAllSteps","onItemClickedHandler","uc","onBreadcrumbClickHandler","arrWithAllSteps","describeTag_arr","asyncToGenerator","regenerator_default","mark","_callee","elem","arrWithCleanSteps","reg2","newArr1","newArr2","wrap","_context","prev","next","querySelector","sent","classList","remove","step","RegExp","push","match","sort","setState","stop","showTagIfOpen","describeTag_View","numberOfAllUC","numberState","wantedWords","chosenKeyWords","showWholeBase","split","allHashTags","charAt","toUpperCase","substring","hashTag","allKeyWords","keyWord","fullUseCaseName_arr","str","useCaseNameWithoutTag_arr","trim","randomNum","Math","floor","random","Row","Col","sm","md","size","offset","Breadcrumb","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","singleTag","singleKeyWord","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","reg","InputGroup","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","JumbotronComponent","Jumbotron","fluid","detailsSwitchView","name","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","AllCasesButtonComponent","hideAllUseCases","showAllUseCases","changeBaseEngine","val","number","numberConsumer","numberPro","entries","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","keys","add","base","numberOfAllUseCases","toConsumableArray","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","arrWithKeyWord","includes","KeyWordsConnectorComponent","selected","clickHandler","getBackConnector","ButtonGroup","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onChange","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","returnNumberOfItems","itemsArr","counter","nestedArr","_this$props$state","searchButtonClicked","numberOfItems","InstructComponent","text","SearchAlgorithmTextComponent","categoriesOfEnvironment","result","kindOfHashTag","_ref2","connector","arrOfWantedWords","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","ucArr","updatedBase","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","arrOfAllKeyWords","arrOfKeyWords","oneHundredPercent","obj","callback","total","newObj","item","hasOwnProperty","Number","parseFloat","returnPercentageOfEachKeyWord","reduce","toPrecision","returnUpdatedListOfUseCases_ifOneWord","wantedValue","updatedList","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","firstKeyWord","secondKeyWord","thirdKeyWord","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","readyToProceed","itemsToView","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","arguments","undefined","_returnUpdatedListOfU","onItemClicked","hideThisViewBtn","calculateNumbersOfUC","hashTagName","has","delete","ref","once","then","snapshot","changeBaseToProperForm","changedBase","JumbotronComponent_JumbotronComponent","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","SearchButtonComponent_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","AllCasesButtonComponent_AllCasesButtonComponent","SearchResultItems_SearchResultItems","itemClicked","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ceeea504.chunk.js","sourcesContent":["const prepareMapOfSearchResults = (items) => {\r\n\r\n  let myMap = new Map();\r\n  items.forEach((arr) => {\r\n    let key = arr[0].replace(/%5C|%2F/g, '/');\r\n    let value = arr[1][0].replace(/;/g, '.');\r\n    myMap.set(key, value);\r\n  });\r\n\r\n  console.log('typeof map: ', typeof myMap, ' value: ', myMap);\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n return (e) => {\r\n   e.stopPropagation();\r\n    const id = e.target.value;\r\n      let copyText = document.getElementById(id);\r\n      copyText.select();\r\n      document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnRunCommand = (ucInfoObj) => {\r\n  let env;\r\n  if (ucInfoObj) {\r\n\r\n    switch(ucInfoObj.arr[0]){\r\n      case 'CONSUMER':\r\n        env = 'master';\r\n        break;\r\n      case 'PRO':\r\n        env = 'master-pro';\r\n        break;\r\n      case 'LIVE':\r\n        env = 'live';\r\n        break;\r\n      default:  env = 'master';\r\n    }\r\n\r\n    let urlToFile = ucInfoObj.arr.join('/').concat('.js');\r\n    return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n  }\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst calculateNumberOfUCForConsumer = (items) => {\r\n  let numberOfUCForConsumer = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForConsumer += /CONSUMER|LIVE/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForConsumer;\r\n};\r\n\r\nconst calculateNumberOfUCForPro = (items) => {\r\n  let numberOfUCForPro = 0;\r\n  items.forEach(arr => {\r\n    numberOfUCForPro += /PRO/.test(arr[0]) ? arr[1].length : 0;\r\n  });\r\n  return numberOfUCForPro;\r\n};\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnRunCommand,\r\n  returnLinkToJenkinsJob,\r\n  calculateNumberOfUCForConsumer,\r\n  calculateNumberOfUCForPro,\r\n  prepareMapOfSearchResults\r\n}","import React from 'react';\r\nimport {returnLinkToJenkinsJob} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const arrWithData = this.props.arrWithData;\r\n    this.state = {\r\n      arrWithData: arrWithData\r\n    }\r\n  }\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.state.arrWithData ? this.state.arrWithData.map((data, index, arr) => {\r\n          return (\r\n            (index === 1) ?\r\n\r\n              <div key={data} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"jenkins-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={returnLinkToJenkinsJob(data, arr)}\r\n                >{data}\r\n                </a>\r\n              </div> : (index === this.state.arrWithData.length - 1) ?\r\n              <div key={data} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n                <a target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   className=\"github-link_mod\"\r\n                   onClick={this.stopPropagation}\r\n                   href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + this.state.arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </div> : (index === 0) ?\r\n                <div key={data} className=\"breadcrumb-link_mod\">ENV:<span className=\"environment_mod\">{data}</span></div> : null\r\n\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb, Button, Card, CardBody, Col, Collapse, Input, InputGroup, Row} from 'reactstrap';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport BreadcrumbItems from \"./BreadcrumbItems\";\r\nimport {returnRunCommand, saveToClipboard} from \"../helpers/helperFunctions\";\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onItemClickedHandler = (arrWithData, uc) => {\r\n    return {\r\n      arr: arrWithData,\r\n      uc\r\n    }\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, arrWithAllSteps, describeTag_arr) => async () => {\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove(\"show\");\r\n    }\r\n\r\n    // prepare steps to show in collapse dialog\r\n    let arrWithCleanSteps = [];\r\n    if (0 in arrWithAllSteps) {\r\n      arrWithAllSteps.forEach(step => {\r\n\r\n        // mark step which must be highlighted\r\n        const reg = new RegExp(describeTag_arr);\r\n        if (reg.test(step)) {\r\n          step = step.concat('_XOXO');\r\n        }\r\n        arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n      });\r\n\r\n      // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n      const reg2 = new RegExp(/ [0-9]of/);\r\n      const newArr1 = [];\r\n      const newArr2 = [];\r\n\r\n      arrWithCleanSteps.forEach((step) => {\r\n        if (reg2.test(step)) {\r\n          newArr1.push(step);\r\n        } else {\r\n          newArr2.push(step);\r\n        }\r\n      });\r\n\r\n      newArr1.sort();\r\n      newArr2.sort();\r\n      arrWithCleanSteps = [...newArr1, ...newArr2];\r\n    }\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: arrWithCleanSteps\r\n      }\r\n    });\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show'\r\n    }\r\n  };\r\n\r\n  showTagIfOpen = (key, describeTag_arr, describeTag_View) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return describeTag_arr;\r\n    } else {\r\n      return describeTag_View;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let numberOfAllUC = 0;\r\n\r\n    this.props.items.forEach(arr => {\r\n      numberOfAllUC += arr[1].length;\r\n    });\r\n\r\n    let numberState = numberOfAllUC;\r\n    let wantedWords = this.props.wantedWords;\r\n    let chosenKeyWords = this.props.chosenKeyWords;\r\n    let showWholeBase = this.props.showWholeBase;\r\n\r\n    return (\r\n      this.props.items ? this.props.items.map(arr => {\r\n        let arrWithData = arr[0].split(/%5C|%2F/);\r\n        return arr[1].map(uc => {\r\n\r\n            // if use case have '!validation;' key words do not show this use case.\r\n            if (!(/!validation;/.test(uc))) {\r\n\r\n              uc = uc.charAt(0).toUpperCase() + uc.substring(1) + '.';\r\n              uc = uc.replace(/;/gmi, '.').replace(/\\|/gmi, '/');\r\n\r\n              // cut into chunks: hash tags, constant keywords, full use case name (with describe Tag name) and use cases without describe tag name.\r\n              let allHashTags = uc.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm); // #hashtag1 #hashtag2\r\n\r\n              if (allHashTags) {\r\n                allHashTags = allHashTags.map(hashTag => {\r\n                  return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n                });\r\n              }\r\n\r\n              let allKeyWords = uc.match(/![a-zA-Z0-9-_]+\\./gmi); // !keyWord1, !keyWord2.\r\n\r\n              if (allKeyWords) {\r\n                allKeyWords = allKeyWords.map(keyWord => {\r\n                  return keyWord.replace(/!/, '').replace(/\\./, ',');\r\n                });\r\n              }\r\n\r\n              const fullUseCaseName_arr = /It|Step/.test(uc) ? uc.match(/It:.+|Step.+/gmi) : [uc]; // It: something. OR Step 1of5: something OR Step: something\r\n              const str = /It|Step/.test(fullUseCaseName_arr[0]) ? fullUseCaseName_arr[0].replace(/Step [0-9]+of[0-9]+:/, '').replace(/It:/, '').replace(/Step:/, '') : fullUseCaseName_arr[0];\r\n              const describeTag_arr = /It: |Step /.test(uc) ? uc.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n              const describeTag_View = ['UseCase:'];\r\n\r\n              const useCaseNameWithoutTag_arr = [];\r\n              useCaseNameWithoutTag_arr.push(str.trim());\r\n              const arrWithAllSteps = /Step /.test(uc) ? arr[1] : [];\r\n              const randomNum = () => Math.floor(Math.random() * 1000);\r\n\r\n              return (\r\n                <Row key={uc + randomNum()}>\r\n                  <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n                    <Breadcrumb className=\"list-item_mod\"\r\n                      // onClick={itemClicked.bind(null, this.onItemClickedHandler(arrWithData, uc))}\r\n                                onClick={this.onBreadcrumbClickHandler(uc, arrWithAllSteps, describeTag_arr[0])}\r\n                    >\r\n\r\n                      <div className=\"breadcrumb-item-mod\">\r\n                        <span className=\"item-number_mod\">{(numberOfAllUC++) - (numberState - 1)}.</span>\r\n                      </div>\r\n\r\n                      <div className=\"use_case-text_mod\">\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2\" : \"list-text_mod1\"}\r\n                          highlightClassName=\"highlight-describeTag\"\r\n                          searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n                          autoEscape={true}\r\n                          textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n                        />\r\n                        <Highlighter\r\n                          className={useCaseNameWithoutTag_arr[0].length > 140 ? \"list-text_mod2 font-roboto\" : \"list-text_mod1 font-roboto\"}\r\n                          highlightClassName=\"highlight-text\"\r\n                          searchWords={showWholeBase ? [] : wantedWords}\r\n                          autoEscape={true}\r\n                          textToHighlight={useCaseNameWithoutTag_arr[0]}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"item-footer-mod\">\r\n                        <div className=\"hashtags-title-mod\">HASHTAGS:\r\n                          {allHashTags ? allHashTags.map(singleTag => {\r\n                            return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>\r\n                          }) : null}\r\n                        </div>\r\n\r\n                        <div className=\"keywords-title-mod\">KEY WORDS:\r\n                          {allKeyWords ? allKeyWords.map(singleKeyWord => {\r\n                            return <Highlighter\r\n                              key={singleKeyWord + randomNum()}\r\n                              className=\"keyword-item-mod\"\r\n                              highlightClassName=\"highlight-text\"\r\n                              searchWords={chosenKeyWords ? chosenKeyWords : []}\r\n                              autoEscape={true}\r\n                              textToHighlight={singleKeyWord}\r\n                            />\r\n                          }) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"collapse-card-mod\">\r\n                        <Collapse className={this.shouldBeOpen(uc)}>\r\n                          <Card>\r\n                            <CardBody>\r\n                              <BreadcrumbItems arrWithData={arrWithData}/>\r\n                              <div className=\"collapse-steps\">\r\n                                <span\r\n                                  className={`collapse-descriptors ${!this.state.arrOfAllSteps.length ? 'descriptor_mod' : ''}`}>\r\n                                  {this.state.arrOfAllSteps.length ? 'REST STEPS OF WHOLE TEST:' : ''}</span>\r\n                                {\r\n                                  this.state.arrOfAllSteps ? this.state.arrOfAllSteps.map(step => {\r\n                                    const reg = new RegExp(/_XOXO/);\r\n                                    return <div\r\n                                      key={step}\r\n                                      className={reg.test(step) ? \"collapse-step_mod1\" : \"collapse-step_mod2\"}\r\n                                    >{step.replace(/_XOXO/, '')}\r\n                                    </div>\r\n                                  }) : null\r\n                                }\r\n                              </div>\r\n\r\n                              <div className=\"collapse-inputGroup_mod\">\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={useCaseNameWithoutTag_arr[0]}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                                         id={`useCaseInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n\r\n                                <InputGroup size=\"sm\">\r\n                                  {/*<Label className=\"jumbotron-label_mod\">COMMAND TO RUN THIS UC:</Label>*/}\r\n                                  <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          outline\r\n                                          className=\"collapse-button_mod\"\r\n                                          value={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}\r\n                                          onClick={saveToClipboard()}>Copy run command</Button>\r\n                                  <Input placeholder=\"\"\r\n                                         type=\"text\"\r\n                                         spellCheck=\"false\"\r\n                                         value={returnRunCommand(this.onItemClickedHandler(arrWithData, uc))}\r\n                                         readOnly\r\n                                         className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                                         id={`runThisUCInput_${useCaseNameWithoutTag_arr[0]}`}/>\r\n\r\n                                </InputGroup>\r\n                              </div>\r\n\r\n                            </CardBody>\r\n                          </Card>\r\n                        </Collapse>\r\n                      </div>\r\n\r\n                    </Breadcrumb>\r\n\r\n                  </Col>\r\n                </Row>\r\n              )\r\n            }\r\n            return '';\r\n          }\r\n        )\r\n      }) : null\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className={(this.props.ucInfoObj && this.props.detailsSwitchView) || (this.props.name && this.props.detailsSwitchView) ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE CASES SEARCH</h1>\r\n        {[0] in this.props.items? <Button color=\"success\"\r\n                                          size=\"sm\"\r\n                                          className=\"print_view-button_mod\"\r\n                                          onClick={this.props.createPrintView(this.props.items)}>Print View of this list</Button>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class AllCasesButtonComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      !this.props.showWholeBase ?\r\n        (\r\n          <Button color=\"warning\" className=\"form-button_mod all-cases-button_mod\" onClick={this.props.showAllUseCases}>\r\n            Show All Use Cases\r\n          </Button>\r\n        ) :\r\n\r\n        (\r\n          <Button color=\"danger\" className=\"form-button_mod all-cases-button_mod\" onClick={this.props.hideAllUseCases}>\r\n            ✕ Hide All Use Cases\r\n          </Button>\r\n        )\r\n    )\r\n  }\r\n\r\n\r\n}","export default function (val) {\r\n  let number = 0, numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    arr[1] = Object.keys(arr[1]);\r\n    number += arr[1].length;\r\n\r\n    if (/CONSUMER|LIVE/mi.test(arr[0])) {\r\n\r\n      consumerList.push(arr);\r\n      numberConsumer += arr[1].length;\r\n      let allHashTags = returnAllHashTags(arr[1][0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(arr[0])) {\r\n\r\n      proList.push(arr);\r\n      numberPro += arr[1].length;\r\n      let allHashTags = returnAllHashTags(arr[1][0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    numberOfAllUseCases: number,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  let chosenHashtag = state.hashtag;\r\n  let uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          (uniqHashTagsForConsumer && uniqHashTagsForConsumer.length) ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })) : null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const arr = Object.entries(keyWords);\r\n\r\n  arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          arr.map(arrWithKeyWord => {\r\n\r\n            if (0 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 5) {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (5 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 10) {\r\n              return (\r\n                <div className=\"badge-mod h4x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (10 <= arrWithKeyWord[1] && arrWithKeyWord[1] < 15) {\r\n              return (\r\n                <div className=\"badge-mod h3x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            if (15 <= arrWithKeyWord[1]) {\r\n              return (\r\n                <div className=\"badge-mod h2x\" key={arrWithKeyWord[0]}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(arrWithKeyWord[0]) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{arrWithKeyWord[0]}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n            return {};\r\n          })\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  state = {\r\n    selected: 'OR'\r\n  };\r\n\r\n  clickHandler = (e) => {\r\n    e.preventDefault();\r\n    const innerText = e.target.innerText;\r\n    this.setState(\r\n      {\r\n        selected: innerText\r\n      }\r\n    );\r\n    return this.props.getBackConnector(innerText);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      this.props.keyWords && this.props.chosenKeyWords.length ? (\r\n\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">Apply your \"SEARCH CONNECTOR\" for Key\r\n              Words.\r\n            </div>\r\n            <ButtonGroup onClick={this.clickHandler}>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITH'}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'OR'}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.state.selected === 'WITHOUT'}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 12}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class SearchButtonComponent extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      !this.props.visibility ? (\r\n        <Button color={this.props.color} className=\"form-button_mod\"\r\n                onClick={this.props.executeFunc}>{this.props.name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  returnNumberOfItems = (itemsArr) => {\r\n    let counter = 0;\r\n    itemsArr.forEach(nestedArr => {\r\n      nestedArr[1].forEach(uc => {\r\n          if(!(/!validation;/.test(uc))) counter += 1;\r\n        })\r\n    });\r\n    return counter;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { name, hashtag, searchButtonClicked, items} = this.props.state;\r\n    const numberOfItems = this.returnNumberOfItems(items);\r\n\r\n    return (\r\n\r\n        numberOfItems ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfItems}</div>:\r\n          (hashtag && searchButtonClicked) || (name && searchButtonClicked)? <div className=\"noResult-numberOfItems_mod\">NO RESULTS</div>:\r\n            null\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  categoriesOfEnvironment = ({consumer_chkbox, pro_chkbox}) => {\r\n    let result;\r\n    if (consumer_chkbox && pro_chkbox === false) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">CONSUMER</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox) result = <span>Find all Use Cases <span className=\"algorithm-only_mod\">ONLY</span> for <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    if (consumer_chkbox === false && pro_chkbox === false) result = <span>First choose <span className=\"algorithm-env_mod\">ENV</span>, you are interested in.</span>;\r\n    if (consumer_chkbox && pro_chkbox) result = <span>Find all Use Cases for both environments: <span className=\"algorithm-env_mod\">CONSUMER</span> and <span className=\"algorithm-env_mod\">PRO</span></span>;\r\n    return result;\r\n  };\r\n\r\n  kindOfHashTag = ({hashtag}) => {\r\n    let result;\r\n    if (hashtag) result = <span>Show <span className=\"algorithm-only_mod\">ONLY</span> UCs with <span\r\n      className=\"algorithm-only_mod\">hashtag: </span><span className=\"algorithm-hashtag_mod\">{hashtag}</span></span>;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`!${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `!${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const arrOfAllKeyWords = [];\r\n\r\n  const countWords = inputWords => inputWords.reduce((obj, word) => {\r\n    obj[word] = (obj[word] || 0) + 1;\r\n    return obj;\r\n  }, {});\r\n\r\n  const countPercent = (value, total) => ((value / total) * 100).toPrecision(2);\r\n\r\n  function returnPercentageOfEachKeyWord(obj, callback, total) {\r\n    const newObj = {};\r\n    for (let item in obj) {\r\n      if (obj.hasOwnProperty(item)) {\r\n        newObj[item] = Number.parseFloat(callback(obj[item], total));\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n        const arrOfKeyWords = useCase.match(/![a-zA-Z0-9-_]+;/gmi);\r\n        if (arrOfKeyWords) {\r\n          arrOfKeyWords.forEach((keyWord) => {\r\n            keyWord = keyWord.replace(/!/, '').replace(/;/, '');\r\n            arrOfAllKeyWords.push(keyWord);\r\n          })\r\n        }\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue;\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(uc => {\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (uc) {\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(uc);\r\n          }\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(uc);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(uc);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport AllCasesButtonComponent from \"./AllCasesButtonComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport {\r\n  calculateNumberOfUCForConsumer,\r\n  calculateNumberOfUCForPro,\r\n  prepareMapOfSearchResults\r\n} from '../helpers/helperFunctions'\r\nimport {\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    showWholeBase: false,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'OR'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showAllUseCases = () => {\r\n\r\n    let consumer_chkbox = this.state.consumer_chkbox;\r\n    let pro_chkbox = this.state.pro_chkbox;\r\n    let itemsToView = null;\r\n    let showWholeBase = !this.state.showWholeBase;\r\n\r\n    if (consumer_chkbox && pro_chkbox) {\r\n      itemsToView = this.state.base;\r\n    }\r\n    if (consumer_chkbox && !pro_chkbox) {\r\n      itemsToView = this.state.consumerList;\r\n    }\r\n    if (!consumer_chkbox && pro_chkbox) {\r\n      itemsToView = this.state.proList;\r\n    }\r\n    if (!consumer_chkbox && !pro_chkbox) {\r\n      itemsToView = [];\r\n      showWholeBase = false;\r\n    }\r\n\r\n    this.setState({\r\n      items: itemsToView,\r\n      showWholeBase: showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  hideAllUseCases = () => {\r\n    this.setState({\r\n      items: [],\r\n      showWholeBase: !this.state.showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null,\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          items: [],\r\n          name: '',\r\n          hashtag: '',\r\n          searchButtonClicked: false,\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: []\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false,\r\n            base,\r\n            searchButtonClicked: true\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      this.setState({\r\n        // name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: wantedWords\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n      this.setState(() => {\r\n        return {\r\n          items: base\r\n        }\r\n      })\r\n    }\r\n\r\n    // clear search result view if input is clearing by user\r\n    if (searchValue && searchValue.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  onItemClicked = (ucInfoObj) => {\r\n    this.setState({\r\n      ucInfoObj: ucInfoObj,\r\n      detailsSwitchView: true\r\n    })\r\n  };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    // this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = (e) => {\r\n    let showWholeBase = false;\r\n    let checkedConsumerValue = 'CONSUMER';\r\n    e.target.innerText = !this.state.consumer_chkbox ? `✓ ${checkedConsumerValue}` : checkedConsumerValue;\r\n\r\n    this.setState({\r\n      showWholeBase: showWholeBase,\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = (e) => {\r\n    let checkedProValue = 'PRO';\r\n    e.target.innerText = this.state.pro_chkbox ? checkedProValue : `✓ ${checkedProValue}`;\r\n\r\n    this.setState({\r\n      showWholeBase: false,\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  hideThisViewBtn = () => {\r\n    this.setState({\r\n      detailsSwitchView: false\r\n    })\r\n  };\r\n\r\n  createPrintView = (items) => () => {\r\n    prepareMapOfSearchResults(items);\r\n  };\r\n\r\n  calculateNumbersOfUC = (items = this.state.items) => {\r\n    return calculateNumberOfUCForConsumer(items) + calculateNumberOfUCForPro(items);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n     {\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            items={this.state.items}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                { this.state.consumer_chkbox || this.state.pro_chkbox?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div>: null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent keyWords={this.state.keyWords}\r\n                                            chosenKeyWords={this.state.chosenKeyWords}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.multipleFuncOnChangeHandler}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"proceed with these settings!\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ start from the beginning\"\r\n                                       visibility={this.state.readyToProceed}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent state={this.state}/>\r\n\r\n              <AllCasesButtonComponent showWholeBase={this.state.showWholeBase}\r\n                                       showAllUseCases={this.showAllUseCases}\r\n                                       hideAllUseCases={this.hideAllUseCases}\r\n\r\n              />\r\n\r\n              <SearchResultItems items={this.state.items}\r\n                                 base={this.state.base}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 itemClicked={this.onItemClicked}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport MainComponent from './MainComponent.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <MainComponent></MainComponent>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}