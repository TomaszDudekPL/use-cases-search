{"version":3,"sources":["BreadcrumbItems.js","SearchResultItems.js","FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["BreadcrumbItems","arrWithData","this","props","map","data","index","length","react_default","a","createElement","BreadcrumbItem","active","key","className","target","rel","href","join","React","Component","SearchResultItems","onItemClickedHandler","uc","arr","_this2","numberOfAllUC","items","forEach","numberState","wantedWords","itemClicked","showWholeBase","split","charAt","toUpperCase","substring","replace","Breadcrumb","Math","floor","random","onClick","bind","BreadcrumbItems_BreadcrumbItems","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","state","initialState","base","consumerList","proList","name","numberOfAllUseCases","ucInfoObj","consumer_chkbox","pro_chkbox","showAllUseCases","_this","itemsToView","setState","hideAllUseCases","showSearchValue","event","value","clearPreviousView","filterList","wantedValue","updatedList","ucArr","Set","removeSpacesFunc","word","getLowerCaseFunc","character","toLowerCase","arrOfKeyWords","filter","el","test","firstKeyWord","secondKeyWord","thirdKeyWord","push","arrOfUC","search","add","size","Object","toConsumableArray","preventActionHandler","charCode","preventDefault","onItemClicked","saveToClipboard","id","document","getElementById","select","execCommand","multipleFuncOnChangeHandler","handleChangeConsumerChk","checkedConsumerValue","checked","handleChangeProChk","checkedProValue","ref","once","then","snapshot","changeBaseToProperForm","val","number","numberConsumer","numberPro","entries","keys","numberOfAllUCforConsumer","numberOfAllUCforPro","runUCCommand","env","numberOfUCforConsumer","numberOfUCforPro","urlToFile","concat","Jumbotron","fluid","Row","Col","sm","md","offset","InputGroup","Label","Input","placeholder","type","spellCheck","Button","color","outline","Container","Form","FormGroup","bsSize","onChange","onKeyPress","check","defaultChecked","block","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.269e780c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {BreadcrumbItem} from 'reactstrap';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  arrWithData;\r\n\r\n  render() {\r\n    let arrWithData = this.props.arrWithData;\r\n    return (\r\n      arrWithData ? arrWithData.map((data, index) => {\r\n          return (\r\n            (index === arrWithData.length - 1) ?\r\n\r\n              <BreadcrumbItem active key={data} className=\"breadcrumb-link_mod\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\"  href={\"https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/\" + arrWithData.join('/') + '.js'}>{data + '.js'}</a>\r\n              </BreadcrumbItem>: <BreadcrumbItem key={data} className=\"breadcrumb_mod\">{data}</BreadcrumbItem>\r\n          )\r\n        }\r\n      ) : null)\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb} from 'reactstrap';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport BreadcrumbItems from \"./BreadcrumbItems\";\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n  onItemClickedHandler = (arrWithData, uc) => {\r\n    return {\r\n      arr: arrWithData,\r\n      uc\r\n    }\r\n  };\r\n\r\n  itemClicked;\r\n\r\n  render() {\r\n    let numberOfAllUC = 0;\r\n\r\n    this.props.items.forEach(arr => {\r\n      numberOfAllUC += arr[1].length;\r\n    });\r\n\r\n    let numberState = numberOfAllUC;\r\n    let wantedWords = this.props.wantedWords;\r\n    let itemClicked = this.props.itemClicked;\r\n    let showWholeBase = this.props.showWholeBase;\r\n\r\n    return (\r\n      this.props.items ? this.props.items.map(arr => {\r\n        let arrWithData = arr[0].split(/%5C|%2F/);\r\n        return arr[1].map(uc => {\r\n            uc = uc.charAt(0).toUpperCase() + uc.substring(1) + '.';\r\n            uc = uc.replace(/;/gmi, '.').replace(/\\|/gmi, '/');\r\n            return (\r\n              <Breadcrumb key={uc + Math.floor(Math.random() * 1000)} className=\"list-item_mod\"\r\n                          onClick={itemClicked.bind(null, this.onItemClickedHandler(arrWithData, uc))}>\r\n                <span className=\"item-number_mod\">{(numberOfAllUC++) - (numberState - 1)}.</span>\r\n                <BreadcrumbItems arrWithData={arrWithData}/>\r\n                <Highlighter\r\n                  className=\"list-text_mod \"\r\n                  highlightClassName=\"highlight-text\"\r\n                  searchWords={showWholeBase ? [] : wantedWords}\r\n                  autoEscape={true}\r\n                  textToHighlight={uc}\r\n                />\r\n              </Breadcrumb>\r\n            )\r\n          }\r\n        )\r\n      }) : null\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, InputGroup, Jumbotron, Label, Row} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from './firebaseConfig.js'\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    showWholeBase: false,\r\n    name: '',\r\n    numberOfAllUseCases: 0,\r\n    wantedWords: [],\r\n    ucInfoObj: null,\r\n    consumer_chkbox: true,\r\n    pro_chkbox: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n\r\n    let number = 0, numberConsumer = 0, numberPro = 0;\r\n    let entries = Object.entries(val);\r\n    let consumerList = [];\r\n    let proList = [];\r\n\r\n    entries.forEach(function (arr) {\r\n      arr[1] = Object.keys(arr[1]);\r\n      number += arr[1].length;\r\n      if(/CONSUMER|LIVE/mi.test(arr[0])){\r\n        consumerList.push(arr);\r\n        numberConsumer += arr[1].length;\r\n      } else if (/PRO/mi.test(arr[0])){\r\n        proList.push(arr);\r\n        numberPro += arr[1].length;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      base: entries,\r\n      consumerList: consumerList,\r\n      proList: proList,\r\n      showWholeBase: false,\r\n      numberOfAllUCforConsumer: numberConsumer,\r\n      numberOfAllUCforPro: numberPro,\r\n      numberOfAllUseCases: number\r\n    })\r\n  }\r\n\r\n  showAllUseCases = () => {\r\n\r\n    let consumer_chkbox = this.state.consumer_chkbox;\r\n    let pro_chkbox = this.state.pro_chkbox;\r\n    let itemsToView = null;\r\n    let showWholeBase = !this.state.showWholeBase;\r\n\r\n    if(consumer_chkbox && pro_chkbox) {itemsToView = this.state.base;}\r\n    if(consumer_chkbox && !pro_chkbox) {itemsToView = this.state.consumerList;}\r\n    if(!consumer_chkbox && pro_chkbox) {itemsToView = this.state.proList;}\r\n    if(!consumer_chkbox && !pro_chkbox) {itemsToView = []; showWholeBase = false;}\r\n\r\n    this.setState({\r\n      items: itemsToView,\r\n      showWholeBase: showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  hideAllUseCases = () => {\r\n    this.setState({\r\n      items: [],\r\n      showWholeBase: !this.state.showWholeBase,\r\n      name: ''\r\n    })\r\n  };\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      ucInfoObj: null\r\n    })\r\n  };\r\n\r\n  filterList = (event) => {\r\n\r\n    this.clearPreviousView();\r\n\r\n    let base;\r\n    let updatedList = [];\r\n    let ucArr = new Set();\r\n    let wantedValue;\r\n\r\n    // database filtering-  divide into consumer, pro, whole, none.\r\n    if (this.state.consumer_chkbox && this.state.pro_chkbox === false) base = this.state.consumerList;\r\n    if (this.state.consumer_chkbox === false && this.state.pro_chkbox) base = this.state.proList;\r\n    if (this.state.consumer_chkbox === false && this.state.pro_chkbox === false) base = [];\r\n    if (this.state.consumer_chkbox && this.state.pro_chkbox) base = this.state.base;\r\n\r\n    let removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n    let getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = event.target.value.split(' ');\r\n    arrOfKeyWords = arrOfKeyWords.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n\r\n    // searching by one word\r\n    if (!this.state.items.length || arrOfKeyWords.length === 1) {\r\n\r\n      this.setState({\r\n        name: event.value,\r\n        showWholeBase: false\r\n      });\r\n\r\n      if (event.target.value.length >= 3) {\r\n\r\n        updatedList = [];\r\n\r\n        base.forEach(arrOfUC => {\r\n\r\n          arrOfUC[1].forEach(uc => {\r\n\r\n            wantedValue = getLowerCaseFunc(event.target.value);\r\n            wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n            if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(uc);\r\n\r\n          });\r\n\r\n          if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n\r\n          ucArr = new Set();\r\n\r\n        });\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          items: updatedList,\r\n          wantedWords: [wantedValue]\r\n        });\r\n\r\n      }\r\n\r\n    } else if (/\\s+/.test(event.target.value)) {\r\n\r\n      // searching by two and three words\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = [];\r\n        let ucArr = new Set();\r\n\r\n        base.forEach(arrOfUC => {\r\n\r\n          arrOfUC[1].forEach(\r\n            function (uc) {\r\n              if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n                if (!arrOfKeyWords[1]) {\r\n                  ucArr.add(uc);\r\n                }\r\n                if (arrOfKeyWords[1]) {\r\n                  if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n                    if (!arrOfKeyWords[2]) {\r\n                      ucArr.add(uc);\r\n                    } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n                      if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                        ucArr.add(uc);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n          if (ucArr.size) {\r\n            updatedList.push([arrOfUC[0], [...ucArr]]);\r\n            ucArr = new Set();\r\n            this.setState({\r\n              items: updatedList,\r\n              wantedWords: wantedWords\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (event.target.value.length < 4) {\r\n      this.setState({\r\n        items: []\r\n      })\r\n    }\r\n  };\r\n\r\n  preventActionHandler = (event) => {\r\n    let charCode = event.charCode;\r\n    if (charCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  onItemClicked = (ucInfoObj) => {\r\n    this.setState({\r\n      ucInfoObj: ucInfoObj\r\n    })\r\n  };\r\n\r\n  saveToClipboard = (id) => {\r\n    return () => {\r\n      let copyText = document.getElementById(id);\r\n      copyText.select();\r\n      document.execCommand(\"copy\");\r\n    }\r\n  };\r\n\r\n  multipleFuncOnChangeHandler = (event) => {\r\n    this.filterList(event);\r\n    this.showSearchValue(event);\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    let showWholeBase = false;\r\n    let checkedConsumerValue = document.getElementById('consumer-chkbox').checked;\r\n    this.setState({\r\n      showWholeBase: showWholeBase,\r\n      consumer_chkbox: checkedConsumerValue,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    let checkedProValue = document.getElementById('pro-chkbox').checked;\r\n    this.setState({\r\n      showWholeBase: false,\r\n      pro_chkbox: checkedProValue,\r\n      items: [],\r\n      name: ''\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    let runUCCommand, env;\r\n    let ucInfoObj = this.state.ucInfoObj;\r\n    let numberOfUCforConsumer = 0, numberOfUCforPro = 0;\r\n\r\n    if (ucInfoObj) {\r\n\r\n      switch(ucInfoObj.arr[0]){\r\n        case 'CONSUMER':\r\n          env = 'master';\r\n          break;\r\n        case 'PRO':\r\n          env = 'master-pro';\r\n          break;\r\n        case 'LIVE':\r\n          env = 'live';\r\n          break;\r\n       default:  env = 'master';\r\n      }\r\n\r\n      let urlToFile = ucInfoObj.arr.join('/').concat('.js');\r\n      runUCCommand = `node launcher.js -p 1 -r 1 -e ${env} -d ${urlToFile}`;\r\n    }\r\n\r\n    this.state.items.forEach(arr => {\r\n      numberOfUCforConsumer += /CONSUMER|LIVE/.test(arr[0]) ? arr[1].length : 0;\r\n      numberOfUCforPro += /PRO/.test(arr[0]) ? arr[1].length : 0;\r\n    });\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <Jumbotron fluid className=\"jumbotron_mod\">\r\n          <h1\r\n            className={this.state.ucInfoObj || this.state.name ? \"display-7 form-mainLabel_mod1\" : \"display-7 form-mainLabel_mod2\"}>USE\r\n            CASES SEARCH</h1>\r\n          {this.state.name && !this.state.ucInfoObj ? (\r\n\r\n            <Row className=\"jumbotron-result_mod\">\r\n              <Col sm=\"12\" md={{size: 10, offset: 1}}>\r\n                <span className=\"jumbotron-label-text\">FOR </span>\r\n                <span className=\"jumbotron-label-number\">{this.state.name.toUpperCase()}</span>\r\n                <span className=\"jumbotron-label-text\"> SEARCH TERM: </span>\r\n                <span className=\"jumbotron-label-number\">{numberOfUCforConsumer + numberOfUCforPro}</span>\r\n                <span\r\n                  className=\"jumbotron-label-text\"> USE CASE{numberOfUCforConsumer + numberOfUCforPro > 1 ? 'S' : ''} FOUND. </span>\r\n                <br/>\r\n                <span className=\"jumbotron-label-text\"> CONSUMER: </span>\r\n                <span className=\"jumbotron-label-number\">{numberOfUCforConsumer}</span>\r\n                <span className=\"jumbotron-label-text\"> PRO: </span>\r\n                <span className=\"jumbotron-label-number\">{numberOfUCforPro}</span>\r\n              </Col>\r\n            </Row>\r\n\r\n          ) : this.state.ucInfoObj ? (\r\n            <Row>\r\n              <Col sm=\"12\" md={{size: 10, offset: 1}}>\r\n                <InputGroup size=\"sm\">\r\n                  <Label className=\"jumbotron-label_mod\">USE CASE:</Label>\r\n                  <Input placeholder=\"\" type=\"text\" spellCheck=\"false\"\r\n                         value={this.state.ucInfoObj ? this.state.ucInfoObj.uc : null}\r\n                         className=\"jumbotron-input_mod jumbotron-input-one_mod shadow-none\" id=\"useCaseInput\"/>\r\n                  <Button color=\"success\" size=\"sm\" className=\"jumbotron-button_mod\" outline\r\n                          onClick={this.saveToClipboard(\"useCaseInput\")}>Clipboard!</Button>\r\n                </InputGroup>\r\n                <InputGroup size=\"sm\">\r\n                  <Label className=\"jumbotron-label_mod\">COMMAND TO RUN THIS UC:</Label>\r\n                  <Input placeholder=\"\" type=\"text\" spellCheck=\"false\"\r\n                         value={runUCCommand}\r\n                         className=\"jumbotron-input_mod jumbotron-input-two_mod shadow-none\" id=\"runThisUCInput\"/>\r\n                  <Button color=\"success\" size=\"sm\" className=\"jumbotron-button_mod\" outline\r\n                          onClick={this.saveToClipboard(\"runThisUCInput\")}>Clipboard!</Button>\r\n                </InputGroup>\r\n\r\n                <Row>\r\n                  <Col sm=\"12\" md={{size: 10, offset: 1}}>\r\n                    {!this.state.showWholeBase && numberOfUCforConsumer + numberOfUCforPro > 1 ? (\r\n                      <span>\r\n                        <span className=\"jumbotron-label-text\">FOR </span>\r\n                        <span className=\"jumbotron-label-number\">{this.state.name.toUpperCase()}</span>\r\n                        <span className=\"jumbotron-label-text\"> SEARCH TERM: </span>\r\n                      </span>\r\n                    ) : ''\r\n                    }\r\n                    <span className=\"jumbotron-label-number\">{numberOfUCforConsumer + numberOfUCforPro}</span>\r\n                    <span\r\n                      className=\"jumbotron-label-text\"> USE CASE{numberOfUCforConsumer + numberOfUCforPro > 1 ? 'S' : ''} FOUND. </span>\r\n                    <span className=\"jumbotron-label-text\"> CONSUMER: </span>\r\n                    <span className=\"jumbotron-label-number\">{numberOfUCforConsumer}</span>\r\n                    <span className=\"jumbotron-label-text\"> PRO: </span>\r\n                    <span className=\"jumbotron-label-number\">{numberOfUCforPro}</span>\r\n                  </Col>\r\n                </Row>\r\n\r\n              </Col>\r\n            </Row>\r\n          ) : null\r\n          }\r\n        </Jumbotron>\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n              <Row>\r\n                <Col sm=\"12\" md={{size: 12}} className=\"form-input_mod\">\r\n                  <Input type=\"search\" spellCheck=\"false\" value={this.state.name} name=\"search\" id=\"useCasesSearch\"\r\n                         bsSize=\"lg\"\r\n                         placeholder=\"Type what are you looking for... for example: post video\"\r\n                         onChange={this.multipleFuncOnChangeHandler}\r\n                         onKeyPress={this.preventActionHandler}/>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup check>\r\n                    <div className=\"double-consumer\">\r\n                      <Label check className=\"input-label_mod\">\r\n                        <Input type=\"checkbox\" id=\"consumer-chkbox\" className=\"input-checkbox_mod\"\r\n                               defaultChecked={this.state.consumer_chkbox}\r\n                               onChange={this.handleChangeConsumerChk}/>{' '}\r\n                        CONSUMER <span className=\"checkbox-counter\">{this.state.numberOfAllUCforConsumer}</span>\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"double-pro\">\r\n                      <Label check className=\"input-label_mod\">\r\n                        <Input type=\"checkbox\" id=\"pro-chkbox\" className=\"input-checkbox_mod\"\r\n                               defaultChecked={this.state.pro_chkbox} onChange={this.handleChangeProChk}/>{' '}\r\n                        PRO  <span className=\"checkbox-counter\">{this.state.numberOfAllUCforPro}</span>\r\n                      </Label>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                {!this.state.showWholeBase ?\r\n                  (<Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                    <Button block color=\"warning\" className=\"form-button_mod\" onClick={this.showAllUseCases}>Show All Use Cases</Button>\r\n                  </Col>) :\r\n\r\n                  (<Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                    <Button block color=\"danger\" className=\"form-button_mod\" onClick={this.hideAllUseCases}>Hide All Use\r\n                      Cases</Button>\r\n                  </Col>)\r\n                }\r\n              </Row>\r\n              <Row>\r\n                <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n                  <SearchResultItems items={this.state.items}\r\n                                     wantedWords={this.state.wantedWords}\r\n                                     itemClicked={this.onItemClicked}\r\n                                     showWholeBase={this.state.showWholeBase}>.</SearchResultItems>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MainComponent from './MainComponent.js';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return <div className=\"App\">\r\n      <MainComponent></MainComponent>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}