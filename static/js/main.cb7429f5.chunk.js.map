{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/ResultItemFooter.js","Components/ResultItemHeader.js","Components/ResultItemStepsSection.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsConnectorComponent.js","Components/KeyWordsComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","func","keys_str","forEach","arr","obj","directoryPath","replace","useCaseName","useCaseBody","steps_arr","steps","describeTag","useCaseID","concat","Array","isArray","window","open","document","write","preventActionHandler","event","charCode","preventDefault","getElementById","click","saveToClipboard","e","stopPropagation","id","target","value","select","execCommand","randomNum","Math","floor","random","returnUC_StepsFromFile","describeTag_arr","consumerBase","proBase","arrWithSteps","arrWithCleanSteps","includes","pathToFile","i","length","arrWithUCWithStepInDescriptor","push","getAllStepsFromFullBase","step","RegExp","test","match","reg2","newArr1","newArr2","sort","getItemFromLocalStorage","key","JSON","parse","localStorage","getItem","setItemInLocalStorage","setItem","stringify","checkThisUseCase","checkOrFocus","that","itemsState_obj","forceUpdate","BreadcrumbItems","mainDirectory","_this","props","fileName","env","react_default","a","createElement","this","className","rel","onClick","href","React","Component","ResultItemFooter","uc","runCommand","InputGroup","size","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","ResultItemHeader","defaultDescribeTagName_arr","chosenKeyWords","onBreadcrumbClickHandler","allHashTags","hashTags","image_url","useCaseBody_str","keyWords","checked","mergeArraysWithKeyWords","Object","toConsumableArray","keyWords1","keyWords2","keyWords3","_this2","ordinalNumber","onChange","defaultChecked","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","wantedWords","map","singleTag","singleKeyWord","classesForSteps","String","SearchResultItems","state","shouldBeOpen","isOpen","arrOfAllSteps","asyncToGenerator","regenerator_default","mark","_callee","elem","wrap","_context","prev","next","querySelector","sent","classList","remove","setState","getImageFromFirebaseStorage","stop","_callee2","name","storage","pathReference","firebaseURL","_context2","console","log","firebase","refFromURL","getDownloadURL","then","url","catch","error","code","defineProperty","classStr","searchResult_arr","Row","Col","sm","md","offset","Breadcrumb","ResultItemHeader_ResultItemHeader","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","ResultItemStepsSection_ResultItemHeader","src","alt","ResultItemFooter_ResultItemFooter","JumbotronComponent","Jumbotron","fluid","ButtonGroup","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","numberConsumer","numberPro","entries","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","hashTag","filePath","arrOfUseCasesKeys","keys","add","base","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","consumer","pro","handleChooseHashtag","innerText","KeyWordsConnectorComponent","clickHandler","connector","getBackConnector","chosenHashTag","active","KeyWordsComponent","_ref$keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","keyWord","keyWord1","keyWord2","keyWord3","_useState","useState","_useState2","slicedToArray","setIsOpen","Toast","ToastHeader","KeyWordsConnectorComponent_KeyWordsConnectorComponent","SearchInputComponent","multipleFuncOnChangeHandler","cancel","FormGroup","bsSize","valid","onKeyPress","InputGroupAddon","addonType","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","numberOfFoundUseCases","readyToProceed","InstructComponent","text","SearchAlgorithmTextComponent","arrOfWantedWords","split","index","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","ucArr","updatedBase","reg","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","nestedArr","words","apply","returnUpdatedListOfUseCases_ifOneWord","updatedList","wantedValue","arrWithUC","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","arrOfKeyWords","firstKeyWord","secondKeyWord","thirdKeyWord","createObjectWithSearchResult","result","number","path","arrWithData","urlToFile","join","returnRunCommand","environment","githubLinkToFile","jenkinsLinkToJob","data","jenkinsLink","returnLinkToJenkinsJob","fullUC","useCaseID_str","rawUC","rawUseCaseID_str","returnUseCaseID_str","str","changeAllVerticalLinesToSlash","imageURL","image_id","getUrlToImageInFirebase","allHashTags_arr","rawHashTags_arr","returnHashTags_arr","allKeyWords_obj","rawKeyWords1_arr","rawKeyWords2_arr","rawKeyWords3_arr","getCleanKeyWords","rawKeyWord","returnKeyWords_obj","describeTag_str","useCaseNameWithoutTag_str","charAt","toUpperCase","substring","firstLetterToUpperCase","useCaseBody_arr","trim","getRidOfTagName","returnUseCaseNameBody_arr","focused","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","detailsSwitchView","showSearchValue","clearPreviousView","proceedSearching","hashtagBase","filterList","arguments","undefined","_returnUpdatedListOfU","searchButtonClicked","hashTagName","has","delete","_callee3","_context3","cancelInput","ref","once","snapshot","changeBaseToProperForm","changedBase","showWholeBase","JumbotronComponent_JumbotronComponent","Container","Form","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","Components_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb7429f5.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items, func) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n\r\n    const obj = arr[1];\r\n\r\n    const directoryPath = obj.directoryPath.replace(/%5C|%2F/g, ' / ');\r\n    const useCaseName = obj.useCaseBody;\r\n    const steps_arr = obj.steps;\r\n    const describeTag = obj.describeTag;\r\n    const useCaseID = obj.useCaseID;\r\n\r\n    keys_str += `<br /><form style=\"font-weight:bold\">${directoryPath}.js</form>`;\r\n    keys_str += `<p style=\"color:black;width:100%;font-weight:bold;\">Use Case Search ID: ${useCaseID}</p>`;\r\n    keys_str += `<p style=\"color:black;width:100%;${func ? 'font-weight:bold;' : ''}\">${describeTag} ${useCaseName}</p>`;\r\n\r\n      if (Array.isArray(steps_arr) && func === 'WITH DESCRIPTIONS') {\r\n        steps_arr.forEach(steps => {\r\n          keys_str += `<p style=\"color:black;width:100%;font-style:italic;margin-left:40px\">${steps}</p>`\r\n        })\r\n      }\r\n\r\n    });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write(`<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>${keys_str}</div></section>`);\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n    document.getElementById(\"search_btn\").click();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst getUrlToImageInFirebase = (arrWithData, image_id) => {\r\n  const directoryPath = arrWithData.join('/');\r\n  return `gs://use-cases-search.appspot.com/${directoryPath}.js/${image_id}.jpg`;\r\n\r\n};\r\n\r\nconst randomNum = () => Math.floor(Math.random() * 100000);\r\n\r\nconst returnUseCaseNameBody_arr = (rawUC) => {\r\n  // Get rid of everything before It or Step tag: It: something. OR Step 1of5: something OR Step: something\r\n  return /It|Step/.test(rawUC) ? rawUC.match(/It:.+|Step.+/gmi) : [rawUC];\r\n}\r\n\r\nconst returnUseCaseTagName_arr = (rawUC) => {\r\n  // Get rid of everything before and after It or Step tag and return clean tag name.\r\n  return /It: |Step /.test(rawUC) ? rawUC.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n}\r\n\r\nconst getRidOfTagName = (useCaseBody_arr) => {\r\n  // Get rid of tag name from uc body: It:, Step 1of5 etc.\r\n  if (/It|Step/.test(useCaseBody_arr[0])) {\r\n    return useCaseBody_arr[0]\r\n      .replace(/Step [0-9]+of[0-9]+:/, '')\r\n      .replace(/It:/, '')\r\n      .replace(/Step:/, '')\r\n      .trim();\r\n  } else {\r\n    return useCaseBody_arr[0].trim();\r\n  }\r\n}\r\n\r\nconst returnKeyWords_obj = (rawUC) => {\r\n\r\n  // Return array with all raw keywords from full use case: !keyWord1., !!!keyWord2.\r\n  const rawKeyWords1_arr = rawUC.match(/1_[a-zA-Z0-9-_]+\\./gmi); // 1_keyWord1, 1_keyWord2.\r\n  const rawKeyWords2_arr = rawUC.match(/2_[a-zA-Z0-9-_]+\\./gmi); // 2_keyWord1, 2_keyWord2.\r\n  const rawKeyWords3_arr = rawUC.match(/3_[a-zA-Z0-9-_]+\\./gmi); // 3_keyWord1, 3_keyWord2.\r\n\r\n  const getCleanKeyWords = (arr, str) => arr? arr.map(rawKeyWord => rawKeyWord.replace(str, '').replace(/\\./, ',')): [];\r\n\r\n  return {\r\n    keyWords1: getCleanKeyWords(rawKeyWords1_arr, '1_'),\r\n    keyWords2: getCleanKeyWords(rawKeyWords2_arr, '2_'),\r\n    keyWords3: getCleanKeyWords(rawKeyWords3_arr, '3_')\r\n  }\r\n}\r\n\r\nconst returnHashTags_arr = (rawUC) => {\r\n  // Return array with all raw hashtags from full use case: HSH_hashtag1. HSH_hashtag2.\r\n  const rawHashTags_arr = rawUC.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm);\r\n\r\n  // Return array with all hashtags and change HSH part into hash:# then remove dots at the end: #hashtag1 #hashtag2\r\n  if (rawHashTags_arr && rawHashTags_arr[0]) {\r\n    return rawHashTags_arr.map(hashTag => {\r\n      return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n    });\r\n  }\r\n}\r\n\r\nconst returnUseCaseID_str = (rawUC) => {\r\n  // Return raw use case ID from full use case: ucs_id: 34ka2wm78p82.\r\n  const rawUseCaseID_str = rawUC.match(/ucs_id: [a-z0-9]+./gm)[0];\r\n\r\n  // Return use case ID without tag and dot at the end: 34ka2wm78p82\r\n  if (rawUseCaseID_str) {\r\n      return rawUseCaseID_str.replace(/ucs_id: /, '').replace(/\\./, '');\r\n  }\r\n}\r\n\r\nconst firstLetterToUpperCase = (str) => str.charAt(0).toUpperCase() + str.substring(1);\r\n\r\nconst changeAllSemicolonsToDots = (str) => str.replace(/;/gmi, '.');\r\n\r\nconst changeAllVerticalLinesToSlash = (str) => str.replace(/\\|/gmi, '/');\r\n\r\nconst returnRunCommand = (arrWithData) => {\r\n\r\n  let env;\r\n\r\n  switch (arrWithData[0]) {\r\n    case 'CONSUMER':\r\n      env = 'master';\r\n      break;\r\n    case 'PRO':\r\n      env = 'master-pro';\r\n      break;\r\n    case 'LIVE':\r\n      env = 'live';\r\n      break;\r\n    default:\r\n      env = 'master';\r\n  }\r\n\r\n  let urlToFile = arrWithData.join('/').concat('.js');\r\n  return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n\r\n};\r\n\r\nconst getAllStepsFromFullBase = (consumerBase, proBase, pathToFile) => {\r\n\r\n  let arrWithSteps = [];\r\n\r\n  if (pathToFile.includes('CONSUMER')) {\r\n    for (let i = 0; i < consumerBase.length; i++) {\r\n      if (consumerBase[i][0] === pathToFile) {\r\n        // eslint-disable-next-line no-loop-func\r\n        consumerBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n          arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  } else if (pathToFile.includes('PRO')) {\r\n    for (let i = 0; i < proBase.length; i++) {\r\n      if (proBase[i][0] === pathToFile) {\r\n        // eslint-disable-next-line no-loop-func\r\n        proBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n          arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arrWithSteps;\r\n};\r\n\r\nconst returnUC_StepsFromFile = (describeTag_arr, consumerBase, proBase, directoryPath) => {\r\n\r\n  let arrWithSteps = [];\r\n  let arrWithCleanSteps = [];\r\n\r\n  if (describeTag_arr.includes('Step')) {\r\n    arrWithSteps = getAllStepsFromFullBase(consumerBase, proBase, directoryPath);\r\n  }\r\n\r\n  // prepare steps to show in collapse dialog\r\n  if (0 in arrWithSteps) {\r\n    arrWithSteps.forEach(step => {\r\n\r\n      // mark step which must be highlighted\r\n      const reg = new RegExp(describeTag_arr);\r\n      if (reg.test(step)) {\r\n        step = step.concat('_XOXO');\r\n      }\r\n      arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n    });\r\n\r\n    // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n    const reg2 = new RegExp(/ [0-9]of/);\r\n    const newArr1 = [];\r\n    const newArr2 = [];\r\n\r\n    arrWithCleanSteps.forEach((step) => {\r\n      if (reg2.test(step)) {\r\n        newArr1.push(step);\r\n      } else {\r\n        newArr2.push(step);\r\n      }\r\n    });\r\n\r\n    newArr1.sort();\r\n    newArr2.sort();\r\n    return arrWithCleanSteps = [...newArr1, ...newArr2];\r\n  }\r\n\r\n}\r\n\r\nconst getItemFromLocalStorage = (key) => JSON.parse(localStorage.getItem(key));\r\n\r\nconst setItemInLocalStorage = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n\r\nconst checkThisUseCase = (id, checkOrFocus, that) => () => {\r\n\r\n  if(!(getItemFromLocalStorage('itemsState'))) {\r\n    const itemsState_obj = {};\r\n    itemsState_obj[id] = {};\r\n    itemsState_obj[id][checkOrFocus] = true;\r\n    setItemInLocalStorage('itemsState',itemsState_obj);\r\n  } else {\r\n    const itemsState_obj = getItemFromLocalStorage('itemsState');\r\n    if(itemsState_obj[id]) {\r\n      itemsState_obj[id][checkOrFocus] = !itemsState_obj[id][checkOrFocus];\r\n    } else {\r\n      itemsState_obj[id] = {};\r\n      itemsState_obj[id][checkOrFocus] = true;\r\n    }\r\n    setItemInLocalStorage('itemsState',itemsState_obj);\r\n  }\r\n\r\n  that.forceUpdate();\r\n}\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnLinkToJenkinsJob,\r\n  prepareHTMLOfSearchResults,\r\n  getUrlToImageInFirebase,\r\n  randomNum,\r\n  returnUseCaseNameBody_arr,\r\n  returnUseCaseTagName_arr,\r\n  getRidOfTagName,\r\n  returnKeyWords_obj,\r\n  returnHashTags_arr,\r\n  returnUseCaseID_str,\r\n  returnRunCommand,\r\n  firstLetterToUpperCase,\r\n  changeAllSemicolonsToDots,\r\n  changeAllVerticalLinesToSlash,\r\n  returnUC_StepsFromFile,\r\n  checkThisUseCase,\r\n  getItemFromLocalStorage\r\n}","import React from 'react';\r\nimport {randomNum} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  mainDirectory = this.props.mainDirectory;\r\n  fileName = this.props.fileName;\r\n  env = this.props.env;\r\n  useCaseID = this.props.useCaseID;\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod\">ENV:<span\r\n          className=\"environment_mod\">{this.env}</span></div>\r\n\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             className=\"jenkins-link_mod\"\r\n             onClick={this.stopPropagation}\r\n             href={this.mainDirectory[1]}\r\n          >{this.mainDirectory[0]}\r\n          </a>\r\n        </div>\r\n\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             className=\"github-link_mod\"\r\n             onClick={this.stopPropagation}\r\n             href={this.fileName[1]}>{this.fileName[0]}</a>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, InputGroup} from 'reactstrap';\r\nimport {saveToClipboard} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemFooter extends React.Component {\r\n\r\n  uc = this.props.uc;\r\n  useCaseID = this.props.useCaseID;\r\n  runCommand = this.props.runCommand;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"collapse-inputGroup_mod\">\r\n\r\n        <InputGroup size=\"sm\">\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`useCaseInput_${this.useCaseID}`}\r\n                  onClick={saveToClipboard()}>Copy Search ID</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.useCaseID}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                 id={`useCaseInput_${this.useCaseID}`}/>\r\n\r\n        </InputGroup>\r\n\r\n        <InputGroup size=\"sm\">\r\n          {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`useCaseInput_${this.uc}`}\r\n                  onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.uc}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                 id={`useCaseInput_${this.uc}`}/>\r\n\r\n        </InputGroup>\r\n\r\n        <InputGroup size=\"sm\">\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`runThisUCInput_${this.uc}`}\r\n                  onClick={saveToClipboard()}>Copy run command</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.runCommand}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                 id={`runThisUCInput_${this.uc}`}/>\r\n\r\n        </InputGroup>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {getItemFromLocalStorage, checkThisUseCase, randomNum} from '../helpers/helperFunctions';\r\nimport {Input} from \"reactstrap\";\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  defaultDescribeTagName_arr = ['UseCase:'];\r\n  chosenKeyWords = this.props.chosenKeyWords;\r\n  useCaseID = this.props.useCaseID;\r\n  onBreadcrumbClickHandler = this.props.onBreadcrumbClickHandler;\r\n  allHashTags = this.props.hashTags;\r\n  describeTag = this.props.describeTag;\r\n  image_url = this.props.image_url;\r\n  useCaseBody_str = this.props.uc;\r\n  keyWords = this.props.keyWords;\r\n  directoryPath = this.props.directoryPath;\r\n\r\n  checked = (useCaseID, checkOrFocus) => {\r\n    const itemsState_obj = getItemFromLocalStorage('itemsState');\r\n    if(itemsState_obj){\r\n      if(itemsState_obj[useCaseID]){\r\n        return itemsState_obj[useCaseID][checkOrFocus];\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeArraysWithKeyWords = (keyWords) => [...keyWords.keyWords1, ...keyWords.keyWords2, ...keyWords.keyWords3];\r\n\r\n  render() {\r\n    const ordinalNumber = this.props.ordinalNumber;\r\n\r\n    return (\r\n      <div className={this.checked(this.useCaseID, 'focused')? \"breadcrumb-header focused\": \"breadcrumb-header\"}>\r\n\r\n        <Input type=\"checkbox\"\r\n               id=\"uc_done\"\r\n               onChange={checkThisUseCase(this.useCaseID, 'checked', this)}\r\n               defaultChecked={this.checked(this.useCaseID, 'checked')}\r\n        />\r\n        <Input type=\"checkbox\"\r\n               id=\"uc_focused\"\r\n               onChange={checkThisUseCase(this.useCaseID, 'focused', this)}\r\n               defaultChecked={this.checked(this.useCaseID, 'focused')}\r\n        />\r\n\r\n        <div className=\"breadcrumb-item-mod\"\r\n             onClick={this.onBreadcrumbClickHandler(this.useCaseBody_str, this.directoryPath, this.describeTag, this.image_url)}>\r\n          <span className=\"item-number_mod\">{ordinalNumber}.</span>\r\n\r\n        <div className=\"use_case-text_mod\">\r\n          <Highlighter\r\n            className={this.useCaseBody_str.length > 140 ? 'list-text_mod2' : 'list-text_mod1'}\r\n            highlightClassName=\"highlight-describeTag\"\r\n            // searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n            searchWords={this.defaultDescribeTagName_arr}\r\n            autoEscape={true}\r\n            // textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n            textToHighlight={this.defaultDescribeTagName_arr[0]}\r\n          />\r\n          <Highlighter\r\n            className={this.useCaseBody_str.length > 140 ? 'list-text_mod2 font-roboto' : 'list-text_mod1 font-roboto'}\r\n            highlightClassName=\"highlight-text\"\r\n            searchWords={this.props.wantedWords}\r\n            autoEscape={true}\r\n            textToHighlight={this.useCaseBody_str}\r\n          />\r\n        </div>\r\n        </div>\r\n        <div className=\"item-footer-mod\">\r\n\r\n          <div className=\"hashtags-title-mod\">HASHTAGS:\r\n            {this.allHashTags ? this.allHashTags.map(singleTag => {\r\n              return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>;\r\n            }) : null}\r\n          </div>\r\n\r\n          <div className=\"hashtags-title-mod\">UC SEARCH ID:\r\n            <span key={randomNum()} className=\"hashtag-item-mod\"> {this.useCaseID} </span>\r\n          </div>\r\n\r\n          <div className=\"keywords-title-mod\">KEY WORDS:\r\n            {this.mergeArraysWithKeyWords(this.keyWords).map(singleKeyWord => {\r\n              return <Highlighter\r\n                key={singleKeyWord + randomNum()}\r\n                className=\"keyword-item-mod\"\r\n                highlightClassName=\"highlight-text\"\r\n                searchWords={this.chosenKeyWords ? this.chosenKeyWords : []}\r\n                autoEscape={true}\r\n                textToHighlight={singleKeyWord}\r\n              />;\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {randomNum} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  steps = this.props.steps;\r\n  classesForSteps = this.props.classesForSteps;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"steps-section\">\r\n        {this.steps.length ?\r\n          <div className=\"collapse-steps collapse-descriptors test-description margin-bottom\">\r\n            {<div className=\"test-description-title\">TEST DESCRIPTION</div>}\r\n            {this.steps.map(step => {\r\n              return (<div key={step + String(randomNum())}\r\n                           className={this.classesForSteps(step)}>{step}</div>);\r\n            })}\r\n          </div> : null}\r\n\r\n        {/*{this.state.arrOfAllSteps.length ? <div className=\"collapse-steps collapse-descriptors test-description\">*/}\r\n        {/*  <div className=\"test-description-title\">OTHER USE CASES (tests which are called \"Steps\") IN FILE {this.state.fileName}.js:</div>*/}\r\n        {/*  {this.state.arrOfAllSteps.map(step => {*/}\r\n        {/*    const reg = new RegExp(/_XOXO/);*/}\r\n        {/*    return <div key={step} className={reg.test(step) ? 'collapse-step_mod1' : 'collapse-step_mod2'}>{step.replace(/_XOXO/, '')}</div>;*/}\r\n        {/*  })}*/}\r\n        {/*</div> : null}*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Breadcrumb, Card, CardBody, Col, Collapse, Row} from 'reactstrap';\r\nimport BreadcrumbItems from './BreadcrumbItems';\r\nimport ResultItemFooter from './ResultItemFooter';\r\nimport ResultItemHeader from './ResultItemHeader';\r\nimport ResultItemStepsSection from './ResultItemStepsSection';\r\nimport {returnUC_StepsFromFile} from '../helpers/helperFunctions';\r\nimport firebase from '@firebase/app';\r\nimport '@firebase/storage';\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    // localStorage.setItem('itemsState', JSON.stringify({}))\r\n  }\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, directoryPath, describeTag_arr, image_url) => async () => {\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove('show');\r\n      this.setState({\r\n        isOpen: false\r\n      });\r\n    }\r\n\r\n    this.getImageFromFirebaseStorage(uc, image_url);\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: this.state.isOpen === false ? returnUC_StepsFromFile(describeTag_arr, this.props.consumerBase, this.props.proBase, directoryPath): []\r\n      };\r\n    });\r\n\r\n  };\r\n\r\n  getImageFromFirebaseStorage = async (name, image_url) => {\r\n\r\n    console.log('typeof image_url: ', typeof image_url, JSON.stringify(image_url, null, 4));\r\n\r\n    if (!this.state.isOpen && !this.state[name]) {\r\n\r\n      console.log('GET STORAGE');\r\n      const storage = firebase.storage();\r\n      const pathReference = storage.refFromURL(image_url);\r\n      const firebaseURL = await pathReference.getDownloadURL().then(function (url) {\r\n\r\n        return url;\r\n      }).catch(function (error) {\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n\r\n        console.log('typeof error.code: ', typeof error.code, JSON.stringify(error.code, null, 4));\r\n      });\r\n\r\n      await this.setState({\r\n        [name]: firebaseURL || 'https://firebasestorage.googleapis.com/v0/b/use-cases-search.appspot.com/o/greta.jpg?alt=media&token=23552523-53c9-418c-a9dd-a7887cd46236'\r\n      });\r\n    }\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show';\r\n    }\r\n  };\r\n\r\n  classesForSteps = (step) => {\r\n\r\n    let classStr = '';\r\n\r\n    if (step.includes('BEFORE:')) classStr = 'before-class';\r\n    if (step.includes('STEP ')) classStr = 'step-class';\r\n    if (step.includes('END:')) classStr = 'end-class';\r\n    if (step.includes('ASSERT:')) classStr = 'assert-class';\r\n\r\n    return `collapse-step_mod2 ${classStr}`;\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    return (this.props.searchResult_arr && this.props.searchResult_arr.map(arr => {\r\n\r\n        return (\r\n\r\n          <Row key={arr[0]}>\r\n            <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n              <Breadcrumb className=\"list-item_mod\">\r\n\r\n                <ResultItemHeader\r\n                  uc={arr[1].useCaseBody}\r\n                  useCaseID={arr[1].useCaseID}\r\n                  hashTags={arr[1].hashTags}\r\n                  keyWords={arr[1].keyWords}\r\n                  describeTag={arr[1].describeTag}\r\n                  image_url={arr[1].image_url}\r\n                  directoryPath={arr[1].directoryPath}\r\n                  wantedWords={this.props.wantedWords}\r\n                  chosenKeyWords={this.props.chosenKeyWords}\r\n                  ordinalNumber={arr[1].ordinalNumber}\r\n                  onBreadcrumbClickHandler={this.onBreadcrumbClickHandler}/>\r\n\r\n                <div className=\"collapse-card-mod\">\r\n                  <Collapse className={this.shouldBeOpen(arr[1].useCaseBody)}>\r\n                    <Card>\r\n                      <CardBody>\r\n                        <BreadcrumbItems\r\n                          useCaseID={arr[1].useCaseID}\r\n                          mainDirectory={arr[1].mainDirectory}\r\n                          fileName={arr[1].fileName}\r\n                          env={arr[1].env}\r\n                        />\r\n\r\n                        <div className=\"uc-description_and_image-section\">\r\n                          <ResultItemStepsSection steps={arr[1].steps}\r\n                                                  classesForSteps={this.classesForSteps}/>\r\n\r\n                          <div className=\"use-case-image\">\r\n                            {<img src={this.state[arr[1].useCaseBody]} alt={arr[1].useCaseBody}/>}\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                        <ResultItemFooter\r\n                          uc={arr[1].useCaseBody}\r\n                          useCaseID={arr[1].useCaseID}\r\n                          runCommand={arr[1].runCommand}\r\n                        />\r\n\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Collapse>\r\n                </div>\r\n\r\n              </Breadcrumb>\r\n\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })\r\n    );\r\n\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport {ButtonGroup, Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className=\"form-mainLabel_mod2\">USE CASES SEARCH</h1>\r\n        {[0] in this.props.searchResult_arr? (\r\n\r\n                                  <ButtonGroup className=\"print_view-button_mod\">\r\n\r\n                                      <Button color=\"primary\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.searchResult_arr)}>Print View of this list\r\n                                      </Button>\r\n\r\n                                      <Button color=\"warning\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.searchResult_arr, 'WITH DESCRIPTIONS')}>WITH DESCRIPTIONS\r\n                                      </Button>\r\n                                  </ButtonGroup>): null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    const filePath = arr[0]; // string: path to file: \"CONSUMER%2FGROUPS%2FGENERAL_GROUPS%2Fgroup_uc05\"\r\n    const arrOfUseCasesKeys = Object.keys(arr[1]); // array: files paths: [\"HSH_Settings; !guest; !members; Step 2of7: Members settings; Temporary deactivation of Guest account\", (...)]\r\n\r\n    arr[1] = Object.entries(arr[1]);\r\n\r\n    if (/CONSUMER|LIVE/mi.test(filePath)) {\r\n\r\n      consumerList.push(arr);\r\n\r\n      numberConsumer += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(filePath)) {\r\n\r\n      proList.push(arr);\r\n\r\n      numberPro += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  const chosenHashtag = state.hashtag;\r\n  const uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n  const uniqHashTagsForPro = state.uniqHashTagsForPro;\r\n\r\n  const consumer_chkbox = state.consumer_chkbox;\r\n  const pro_chkbox = state.pro_chkbox;\r\n\r\n  const consumer_hashTags_exist = uniqHashTagsForConsumer && uniqHashTagsForConsumer.length;\r\n  const consumer =  consumer_hashTags_exist && consumer_chkbox && pro_chkbox === false;\r\n\r\n  const pro_hashTags_exist = uniqHashTagsForPro && uniqHashTagsForPro.length;\r\n  const pro =  pro_hashTags_exist && consumer_chkbox === false && pro_chkbox;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          consumer ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n\r\n              )\r\n            })\r\n          ) : pro ? (\r\n            uniqHashTagsForPro.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })\r\n          ): null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Button, ButtonGroup} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  clickHandler = (connector) => (e) => {\r\n    e.preventDefault();\r\n    return this.props.getBackConnector(connector);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.props.chosenHashTag && this.props.isOpen ? (\r\n\r\n        <div className=\"collapse-connector-section\">\r\n          <span>Use connector&nbsp;&nbsp;&nbsp;</span>\r\n\r\n          <ButtonGroup size=\"sm\">\r\n            <Button outline color=\"success\" className=\"search-connector-buttons or-mod\"\r\n                    active={this.props.connector === 'OR'} onClick={this.clickHandler('OR')}>OR</Button>\r\n            <Button outline color=\"success\" className=\"search-connector-buttons\"\r\n                    active={this.props.connector === 'WITH'} onClick={this.clickHandler('WITH')}>WITH</Button>\r\n            <Button outline color=\"success\" className=\"search-connector-buttons\"\r\n                    active={this.props.connector === 'WITHOUT'} onClick={this.clickHandler('WITHOUT')}>WITHOUT</Button>\r\n          </ButtonGroup>\r\n\r\n          <span>&nbsp;&nbsp;&nbsp;for keywords.</span>\r\n        </div>\r\n\r\n\r\n\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React, {useState} from 'react';\r\nimport {Badge, Card, CardBody, Col, Collapse, Row, Toast, ToastHeader} from \"reactstrap\";\r\nimport KeyWordsConnectorComponent from \"./KeyWordsConnectorComponent\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag, connector, getBackConnector}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const keyWord1 = keyWords.keyWords1;\r\n  const keyWord2 = keyWords.keyWords2;\r\n  const keyWord3 = keyWords.keyWords3;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = (e) => {\r\n    e.stopPropagation();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  return (\r\n\r\n    chosenHashTag ? (\r\n      <Row className=\"bottom-margin\">\r\n        <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n          <Toast className=\"toast_mod\">\r\n\r\n            <ToastHeader className=\"toast-header_mod\" onClick={toggle}>KEY WORDS - click to open it.</ToastHeader>\r\n\r\n            <KeyWordsConnectorComponent\r\n              isOpen={isOpen}\r\n              connector={connector}\r\n              chosenHashTag={chosenHashTag}\r\n              getBackConnector={getBackConnector}\r\n            />\r\n\r\n            <Collapse isOpen={isOpen}>\r\n              <Card>\r\n                <CardBody>\r\n\r\n                  <div className=\"keyword-location-container\">\r\n                    <div className=\"location-label keywords-label\">MAIN LOCATION</div>\r\n                    <div className=\"location-body keywords-body\">\r\n                      {keyWord1 ? keyWord1.sort().map(keyWord => {\r\n                          return (\r\n                            <div className=\"badge-mod keyword-badge\" key={keyWord}>\r\n                              <Badge onClick={collectAllKeyWords}\r\n                                     className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                              >{keyWord}\r\n                              </Badge>\r\n                            </div>\r\n                          )\r\n                        }\r\n                      ) : null\r\n                      }\r\n                    </div>\r\n\r\n                    <div className=\"location-label keywords-label\">EXACT LOCATION</div>\r\n                    <div className=\"location-body keywords-body\">\r\n                      {keyWord2 ? keyWord2.sort().map(keyWord => {\r\n                          return (\r\n                            <div className=\"badge-mod keyword-badge\" key={keyWord}>\r\n                              <Badge onClick={collectAllKeyWords}\r\n                                     className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                              >{keyWord}\r\n                              </Badge>\r\n                            </div>\r\n                          )\r\n                        }\r\n                      ) : null\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"keyword-subject-container\">\r\n                    <div className=\"subject-label keywords-label\">SUBJECT</div>\r\n\r\n                    <div className=\"subject-body keywords-body\">\r\n                      {keyWord3 ? keyWord3.sort().map(keyWord => {\r\n                          return (\r\n                            <div className=\"badge-mod keyword-badge\" key={keyWord}>\r\n                              <Badge onClick={collectAllKeyWords}\r\n                                     className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                              >{keyWord}\r\n                              </Badge>\r\n                            </div>\r\n                          )\r\n                        }\r\n                      ) : null\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </CardBody>\r\n              </Card>\r\n            </Collapse>\r\n\r\n          </Toast>\r\n\r\n        </Col>\r\n      </Row>\r\n    ) : null\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, Col, FormGroup, Input, InputGroup, InputGroupAddon, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name, cancel}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        <FormGroup>\r\n\r\n          <InputGroup>\r\n            <Input spellCheck=\"false\"\r\n                   type=\"text\"\r\n                   value={name}\r\n                   name=\"search\"\r\n                   id=\"useCasesSearch\"\r\n                   bsSize=\"lg\"\r\n                   valid\r\n                   placeholder=\"Type the word you are looking for and press ENTER\"\r\n                   onChange={multipleFuncOnChangeHandler}\r\n                   onKeyPress={preventActionHandler}\r\n            />\r\n            <InputGroupAddon addonType=\"append\"><Button outline color=\"danger\" onClick={cancel}>✕</Button></InputGroupAddon>\r\n          </InputGroup>\r\n\r\n        </FormGroup>\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nconst SearchButtonComponent = ({visibility, color, executeFunc, name, id}) => {\r\n\r\n    return (\r\n      !visibility ? (\r\n        <Button color={color} id={id} className={name === \"✕ reset all\"? \"form-button_mod x-button_mod\": \"form-button_mod\"}\r\n                onClick={executeFunc}>{name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n\r\n}\r\n\r\nexport default SearchButtonComponent;","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  render() {\r\n    const numberOfFoundUseCases = this.props.searchResult_arr.length;\r\n    const readyToProceed = this.props.readyToProceed;\r\n\r\n    return (\r\n      numberOfFoundUseCases ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfFoundUseCases}</div> : !readyToProceed? <div className=\"red-color font-weight-bolder\">NO RESULT</div>: ''\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import {\r\n  changeAllSemicolonsToDots,\r\n  changeAllVerticalLinesToSlash,\r\n  firstLetterToUpperCase,\r\n  getRidOfTagName,\r\n  returnHashTags_arr,\r\n  returnKeyWords_obj,\r\n  returnUseCaseID_str,\r\n  returnUseCaseNameBody_arr,\r\n  returnUseCaseTagName_arr,\r\n  returnRunCommand,\r\n  returnLinkToJenkinsJob,\r\n  getUrlToImageInFirebase\r\n} from \"./helperFunctions\";\r\n\r\nconst returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`1_${keyWord};|2_${keyWord};|3_${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`1_${keyWord};|2_${keyWord};|3_${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `1_${keyWord};|2_${keyWord};|3_${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const keyWords1 = new Set();\r\n  const keyWords2 = new Set();\r\n  const keyWords3 = new Set();\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n\r\n        if(/1_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/1_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('1_', '').replace(';', ''));\r\n            keyWords1.add(...words);\r\n          }\r\n        }\r\n\r\n        if(/2_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/2_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('2_', '').replace(';', ''));\r\n            keyWords2.add(...words);\r\n          }\r\n        }\r\n\r\n        if(/3_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/3_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('3_', '').replace(';', ''));\r\n            keyWords3.add(...words);\r\n          }\r\n        }\r\n\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    // const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    // const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    // return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n    return {\r\n      keyWords1: [...keyWords1],\r\n      keyWords2: [...keyWords2],\r\n      keyWords3: [...keyWords3]\r\n    }\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue = '';\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(arrWithUC => {\r\n\r\n      const uc = arrWithUC[0];\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(arrWithUC);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (arrWithUC) {\r\n\r\n        const uc = arrWithUC[0];\r\n\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(arrWithUC);\r\n          }\r\n\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(arrWithUC);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(arrWithUC);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nconst createObjectWithSearchResult = (base) => {\r\n\r\n  const result = [];\r\n  let number = 0;\r\n\r\n  base.forEach(arr => {\r\n\r\n    const path = arr[0];\r\n    const arrWithData = path.split(/%5C|%2F/);\r\n    const fileName = `${arrWithData[arrWithData.length - 1]}.js`;\r\n    const runCommand = returnRunCommand(arrWithData);\r\n    const environment = arrWithData[0];\r\n    const mainDirectory = arrWithData[1];\r\n    const githubLinkToFile = `https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/${arrWithData.join('/')}.js`;\r\n    const jenkinsLinkToJob = returnLinkToJenkinsJob(mainDirectory, [environment]);\r\n\r\n    arr[1].forEach(fullUC => {\r\n\r\n      if (fullUC[0]) {\r\n\r\n        let uc = changeAllSemicolonsToDots(fullUC[0]);\r\n        uc = changeAllVerticalLinesToSlash(uc);\r\n\r\n        const useCaseID_str = returnUseCaseID_str(uc);\r\n        const imageURL = getUrlToImageInFirebase(arrWithData, useCaseID_str);\r\n        const allHashTags_arr = returnHashTags_arr(uc);\r\n        const allKeyWords_obj = returnKeyWords_obj(uc);\r\n        const describeTag_str = returnUseCaseTagName_arr(uc)[0];\r\n        const useCaseBody_arr = returnUseCaseNameBody_arr(uc);\r\n        const useCaseNameWithoutTag_str = firstLetterToUpperCase(getRidOfTagName(useCaseBody_arr)) + '.';\r\n        if(useCaseID_str) number++;\r\n\r\n        result.push([useCaseID_str, {\r\n          ordinalNumber: number,\r\n          env: environment,\r\n          describeTag: describeTag_str,\r\n          useCaseBody: useCaseNameWithoutTag_str,\r\n          hashTags: allHashTags_arr,\r\n          keyWords: allKeyWords_obj,\r\n          steps: Array.isArray(fullUC[1]) ? fullUC[1] : [],\r\n          mainDirectory: [mainDirectory, jenkinsLinkToJob],\r\n          fileName: [fileName, githubLinkToFile],\r\n          runCommand: runCommand,\r\n          useCaseID: useCaseID_str,\r\n          directoryPath: path,\r\n          image_url: imageURL,\r\n          checked: false,\r\n          focused: false\r\n        }]);\r\n      }\r\n    });\r\n  });\r\n  return result\r\n}\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories,\r\n  createObjectWithSearchResult\r\n}\r\n","import React from 'react';\r\nimport {Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport {prepareHTMLOfSearchResults} from '../helpers/helperFunctions'\r\nimport {\r\n  createObjectWithSearchResult,\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    searchResult_arr: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    name: '',\r\n    wantedWords: [],\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    if(e) e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        const searchResult_arr = createObjectWithSearchResult(updatedList);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          wantedWords: [wantedValue],\r\n          searchResult_arr\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n        const searchResult_arr = createObjectWithSearchResult(updatedList);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          wantedWords,\r\n          searchResult_arr\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n\r\n      const searchResult_arr = createObjectWithSearchResult(base);\r\n\r\n      this.setState(() => {\r\n        return {\r\n          searchResult_arr\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    this.setState({\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      pro_chkbox: false,\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      searchResult_arr: [],\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    this.setState({\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      consumer_chkbox: false,\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      searchResult_arr: [],\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  createPrintView = (items, func) => () => {\r\n    prepareHTMLOfSearchResults(items, func);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => async () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        await this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            name: '',\r\n            chosenKeyWords: [],\r\n            searchResult_arr: []\r\n          }\r\n        })\r\n      } else {\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        await this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            searchResult_arr: [],\r\n            readyToProceed: true,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    this.proceedSearching()\r\n  };\r\n\r\n  returnChosenKeyWords = async (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    await this.setState(() => {\r\n      return {\r\n        searchResult_arr: [],\r\n        readyToProceed: true,\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n\r\n    this.proceedSearching()\r\n  };\r\n\r\n  getBackConnector = async (connector) => {\r\n    await this.setState(\r\n      {\r\n        searchResult_arr: [],\r\n        readyToProceed: true,\r\n        connector\r\n      }\r\n    )\r\n\r\n    this.proceedSearching()\r\n  };\r\n\r\n  cancelInput = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n      return {\r\n        searchResult_arr: [],\r\n        name: '',\r\n        hashtag: '',\r\n        readyToProceed: true,\r\n        chosenKeyWords: [],\r\n        keyWords: [],\r\n        connector: 'WITH'\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent searchResult_arr={this.state.searchResult_arr}\r\n                            createPrintView={this.createPrintView}\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                {this.state.consumer_chkbox || this.state.pro_chkbox ?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div> : null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n                                   connector={this.state.connector}\r\n                                   getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                cancel={this.cancelInput}\r\n                multipleFuncOnChangeHandler={this.showSearchValue}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       id=\"search_btn\"\r\n                                       name={this.state.readyToProceed ? \"search\" : \"re-search again\"}\r\n                />\r\n\r\n\r\n              <ResultNumberTextComponent searchResult_arr={this.state.searchResult_arr}\r\n                                         readyToProceed={this.state.readyToProceed}\r\n              />\r\n\r\n              <SearchResultItems searchResult_arr={this.state.searchResult_arr}\r\n                                 consumerBase={this.state.consumerList}\r\n                                 proBase={this.state.proList}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 >.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MainComponent from './MainComponent.js';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return <div className=\"App\">\r\n      <MainComponent> </MainComponent>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}