{"version":3,"sources":["helpers/helperFunctions.js","Components/BreadcrumbItems.js","Components/ResultItemFooter.js","Components/ResultItemHeader.js","Components/ResultItemStepsSection.js","Components/SearchResultItems.js","Components/JumbotronComponent.js","Components/CheckboxesComponent.js","helpers/changeBaseEngine.js","Components/BadgesComponent.js","Components/KeyWordsComponent.js","Components/KeyWordsConnectorComponent.js","Components/SearchInputComponent.js","Components/SearchButtonComponent.js","Components/ResultNumberTextComponent.js","Components/InstructComponent.js","Components/SearchAlgorithmTextComponent.js","helpers/filterEngine_helpers.js","Components/FormComponent.js","firebaseConfig.js","MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["prepareHTMLOfSearchResults","items","func","keys_str","forEach","arr","obj","directoryPath","replace","useCaseName","useCaseBody","steps_arr","steps","describeTag","useCaseID","concat","Array","isArray","window","open","document","write","preventActionHandler","event","charCode","preventDefault","saveToClipboard","e","stopPropagation","id","target","value","getElementById","select","execCommand","randomNum","Math","floor","random","returnUC_StepsFromFile","describeTag_arr","consumerBase","proBase","arrWithSteps","arrWithCleanSteps","includes","pathToFile","i","length","arrWithUCWithStepInDescriptor","push","getAllStepsFromFullBase","step","RegExp","test","match","reg2","newArr1","newArr2","sort","getItemFromLocalStorage","key","JSON","parse","localStorage","getItem","setItemInLocalStorage","setItem","stringify","checkThisUseCase","checkOrFocus","Object","asyncToGenerator","regenerator_default","a","mark","_callee","itemsState_obj","_itemsState_obj","wrap","_context","prev","next","stop","BreadcrumbItems","mainDirectory","_this","props","fileName","env","react_default","createElement","this","className","rel","onClick","href","React","Component","ResultItemFooter","uc","runCommand","InputGroup","size","Button","color","outline","Input","placeholder","type","spellCheck","readOnly","ResultItemHeader","defaultDescribeTagName_arr","chosenKeyWords","onBreadcrumbClickHandler","allHashTags","hashTags","image_url","useCaseBody_str","keyWords","checked","mergeArraysWithKeyWords","toConsumableArray","keyWords1","keyWords2","keyWords3","_this2","ordinalNumber","onChange","defaultChecked","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","wantedWords","map","singleTag","singleKeyWord","classesForSteps","String","SearchResultItems","state","shouldBeOpen","isOpen","arrOfAllSteps","elem","querySelector","sent","classList","remove","setState","getImageFromFirebaseStorage","_callee2","name","storage","pathReference","firebaseURL","_context2","console","log","firebase","refFromURL","getDownloadURL","then","url","catch","error","code","defineProperty","classStr","searchResult_arr","Row","Col","sm","md","offset","Breadcrumb","ResultItemHeader_ResultItemHeader","Collapse","Card","CardBody","BreadcrumbItems_BreadcrumbItems","ResultItemStepsSection_ResultItemHeader","src","alt","ResultItemFooter_ResultItemFooter","JumbotronComponent","Jumbotron","fluid","ButtonGroup","createPrintView","CheckboxesComponent","Badge","consumer_chkbox","handleChangeConsumerChk","numberOfAllUCforConsumer","pro_chkbox","handleChangeProChk","numberOfAllUCforPro","changeBaseEngine","val","numberConsumer","numberPro","entries","consumerList","proList","uniqHashTagsForConsumer","Set","uniqHashTagsForPro","returnAllHashTags","useCase","arrOfHashTags","hashTag","filePath","arrOfUseCasesKeys","keys","add","base","BadgesComponent","_ref","chooseHashTag","chosenHashtag","hashtag","consumer","pro","handleChooseHashtag","innerText","KeyWordsComponent","_ref$keyWords","returnChosenKeyWords","_ref$chosenKeyWords","collectAllKeyWords","chosenHashTag","keyWord","keyWord1","keyWord2","keyWord3","KeyWordsConnectorComponent","clickHandler","connector","getBackConnector","active","SearchInputComponent","multipleFuncOnChangeHandler","bsSize","onKeyPress","SearchButtonComponent","visibility","executeFunc","ResultNumberTextComponent","numberOfFoundUseCases","readyToProceed","InstructComponent","text","SearchAlgorithmTextComponent","arrOfWantedWords","split","index","word","returnBaseDividedOnCategories","removeSpacesFunc","getLowerCaseFunc","character","toLowerCase","returnNotEmptyValues","searchValue","filter","el","returnAllUseCasesWithWantedTag","tag","ucArr","updatedBase","reg","arrOfUC","returnAllUseCasesWithWantedKeyWords","regExp","returnRegExp","ucSet","every","returnAllKeyWords","nestedArr","words","apply","returnUpdatedListOfUseCases_ifOneWord","updatedList","wantedValue","arrWithUC","search","returnUpdatedListOfUseCases_ifMoreThenOneWord","arrOfKeyWords","firstKeyWord","secondKeyWord","thirdKeyWord","createObjectWithSearchResult","result","number","path","arrWithData","urlToFile","join","returnRunCommand","environment","githubLinkToFile","jenkinsLinkToJob","data","jenkinsLink","returnLinkToJenkinsJob","fullUC","useCaseID_str","rawUC","rawUseCaseID_str","returnUseCaseID_str","str","changeAllVerticalLinesToSlash","imageURL","image_id","getUrlToImageInFirebase","allHashTags_arr","rawHashTags_arr","returnHashTags_arr","allKeyWords_obj","rawKeyWords1_arr","rawKeyWords2_arr","rawKeyWords3_arr","getCleanKeyWords","rawKeyWord","returnKeyWords_obj","describeTag_str","useCaseNameWithoutTag_str","charAt","toUpperCase","substring","firstLetterToUpperCase","useCaseBody_arr","trim","getRidOfTagName","returnUseCaseNameBody_arr","focused","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FormComponent","collection","initialState","detailsSwitchView","showSearchValue","clearPreviousView","resetAllSettings","proceedSearching","hashtagBase","filterList","arguments","undefined","_returnUpdatedListOfU","searchButtonClicked","hashTagName","has","delete","ref","once","snapshot","changeBaseToProperForm","changedBase","showWholeBase","JumbotronComponent_JumbotronComponent","ucInfoObj","Container","Form","FormGroup","Components_InstructComponent","CheckboxesComponent_CheckboxesComponent","Components_BadgesComponent","Components_KeyWordsComponent","KeyWordsConnectorComponent_KeyWordsConnectorComponent","Components_SearchInputComponent","SearchAlgorithmTextComponent_SearchAlgorithmTextComponent","Components_SearchButtonComponent","ResultNumberTextComponent_ResultNumberTextComponent","SearchResultItems_SearchResultItems","MainComponent","FormComponent_FormComponent","App","MainComponent_MainComponent","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb0cddd4.chunk.js","sourcesContent":["const prepareHTMLOfSearchResults = (items, func) => {\r\n\r\n  let keys_str = '';\r\n\r\n  items.forEach((arr) => {\r\n\r\n    const obj = arr[1];\r\n\r\n    const directoryPath = obj.directoryPath.replace(/%5C|%2F/g, ' / ');\r\n    const useCaseName = obj.useCaseBody;\r\n    const steps_arr = obj.steps;\r\n    const describeTag = obj.describeTag;\r\n    const useCaseID = obj.useCaseID;\r\n\r\n    keys_str += `<br /><form style=\"font-weight:bold\">${directoryPath}.js</form>`;\r\n    keys_str += `<p style=\"color:black;width:100%;font-weight:bold;\">Use Case Search ID: ${useCaseID}</p>`;\r\n    keys_str += `<p style=\"color:black;width:100%;${func ? 'font-weight:bold;' : ''}\">${describeTag} ${useCaseName}</p>`;\r\n\r\n      if (Array.isArray(steps_arr) && func === 'WITH DESCRIPTIONS') {\r\n        steps_arr.forEach(steps => {\r\n          keys_str += `<p style=\"color:black;width:100%;font-style:italic;margin-left:40px\">${steps}</p>`\r\n        })\r\n      }\r\n\r\n    });\r\n\r\n  let myWindow = window.open(\"\", \"_blank\");\r\n  myWindow.document.write(`<section style=\"color:#b42012;display:flex;flex-direction:column;align-items:center;\"><div>${keys_str}</div></section>`);\r\n\r\n};\r\n\r\nconst preventActionHandler = (event) => {\r\n  let charCode = event.charCode;\r\n  if (charCode === 13) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst saveToClipboard = () => {\r\n  return (e) => {\r\n    e.stopPropagation();\r\n    const id = e.target.value;\r\n    let copyText = document.getElementById(id);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n};\r\n\r\nconst returnLinkToJenkinsJob = (data, arr) => {\r\n\r\n  const jenkinsLink = 'https://10.32.9.218:7070/view/Selenium%20All/';\r\n\r\n  if (arr[0] === 'CONSUMER') {\r\n\r\n    switch (data) {\r\n      case 'CHAT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20CHAT/`;\r\n      case 'GROUP_ALERTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPALERTS/`;\r\n      case 'GROUPS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20GROUPS/`;\r\n      case 'OTHERS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20OTHERS/`;\r\n      case 'PAGES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20PAGES/`;\r\n      case 'POLLS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20POLLS/`;\r\n      case 'REGISTRATION_CASES':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REGISTRATIONCASES/`;\r\n      case 'REPORT':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPORT/`;\r\n      case 'REPOST_RESHARING':\r\n        return `${jenkinsLink}job/Selenium%20CON%20REPOST/`;\r\n      case 'SETTINGS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SETTINGS/`;\r\n      case 'SMART_SEARCH':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMARTSEARCH/`;\r\n      case 'SMOKE_TESTS':\r\n        return `${jenkinsLink}job/Selenium%20CON%20SMOKE%20TESTS/`;\r\n      case 'STORAGE':\r\n        return `${jenkinsLink}`;\r\n      default:\r\n        return `${jenkinsLink}`;\r\n    }\r\n\r\n  } else {\r\n    return `${jenkinsLink}`;\r\n  }\r\n\r\n};\r\n\r\nconst getUrlToImageInFirebase = (arrWithData, image_id) => {\r\n  const directoryPath = arrWithData.join('/');\r\n  return `gs://use-cases-search.appspot.com/${directoryPath}.js/${image_id}.jpg`;\r\n\r\n};\r\n\r\nconst randomNum = () => Math.floor(Math.random() * 100000);\r\n\r\nconst returnUseCaseNameBody_arr = (rawUC) => {\r\n  // Get rid of everything before It or Step tag: It: something. OR Step 1of5: something OR Step: something\r\n  return /It|Step/.test(rawUC) ? rawUC.match(/It:.+|Step.+/gmi) : [rawUC];\r\n}\r\n\r\nconst returnUseCaseTagName_arr = (rawUC) => {\r\n  // Get rid of everything before and after It or Step tag and return clean tag name.\r\n  return /It: |Step /.test(rawUC) ? rawUC.match(/It:|Step [0-9]+of[0-9]+:/) : ['It:'];\r\n}\r\n\r\nconst getRidOfTagName = (useCaseBody_arr) => {\r\n  // Get rid of tag name from uc body: It:, Step 1of5 etc.\r\n  if (/It|Step/.test(useCaseBody_arr[0])) {\r\n    return useCaseBody_arr[0]\r\n      .replace(/Step [0-9]+of[0-9]+:/, '')\r\n      .replace(/It:/, '')\r\n      .replace(/Step:/, '')\r\n      .trim();\r\n  } else {\r\n    return useCaseBody_arr[0].trim();\r\n  }\r\n}\r\n\r\nconst returnKeyWords_obj = (rawUC) => {\r\n\r\n  // Return array with all raw keywords from full use case: !keyWord1., !!!keyWord2.\r\n  const rawKeyWords1_arr = rawUC.match(/1_[a-zA-Z0-9-_]+\\./gmi); // 1_keyWord1, 1_keyWord2.\r\n  const rawKeyWords2_arr = rawUC.match(/2_[a-zA-Z0-9-_]+\\./gmi); // 2_keyWord1, 2_keyWord2.\r\n  const rawKeyWords3_arr = rawUC.match(/3_[a-zA-Z0-9-_]+\\./gmi); // 3_keyWord1, 3_keyWord2.\r\n\r\n  const getCleanKeyWords = (arr, str) => arr? arr.map(rawKeyWord => rawKeyWord.replace(str, '').replace(/\\./, ',')): [];\r\n\r\n  return {\r\n    keyWords1: getCleanKeyWords(rawKeyWords1_arr, '1_'),\r\n    keyWords2: getCleanKeyWords(rawKeyWords2_arr, '2_'),\r\n    keyWords3: getCleanKeyWords(rawKeyWords3_arr, '3_')\r\n  }\r\n}\r\n\r\nconst returnHashTags_arr = (rawUC) => {\r\n  // Return array with all raw hashtags from full use case: HSH_hashtag1. HSH_hashtag2.\r\n  const rawHashTags_arr = rawUC.match(/HSH_[a-zA-Z]+.[a-zA-Z]+/gm);\r\n\r\n  // Return array with all hashtags and change HSH part into hash:# then remove dots at the end: #hashtag1 #hashtag2\r\n  if (rawHashTags_arr && rawHashTags_arr[0]) {\r\n    return rawHashTags_arr.map(hashTag => {\r\n      return hashTag.replace(/HSH_/, '#').replace(/\\./, '');\r\n    });\r\n  }\r\n}\r\n\r\nconst returnUseCaseID_str = (rawUC) => {\r\n  // Return raw use case ID from full use case: ucs_id: 34ka2wm78p82.\r\n  const rawUseCaseID_str = rawUC.match(/ucs_id: [a-z0-9]+./gm)[0];\r\n\r\n  // Return use case ID without tag and dot at the end: 34ka2wm78p82\r\n  if (rawUseCaseID_str) {\r\n      return rawUseCaseID_str.replace(/ucs_id: /, '').replace(/\\./, '');\r\n  }\r\n}\r\n\r\nconst firstLetterToUpperCase = (str) => str.charAt(0).toUpperCase() + str.substring(1);\r\n\r\nconst changeAllSemicolonsToDots = (str) => str.replace(/;/gmi, '.');\r\n\r\nconst changeAllVerticalLinesToSlash = (str) => str.replace(/\\|/gmi, '/');\r\n\r\nconst returnRunCommand = (arrWithData) => {\r\n\r\n  let env;\r\n\r\n  switch (arrWithData[0]) {\r\n    case 'CONSUMER':\r\n      env = 'master';\r\n      break;\r\n    case 'PRO':\r\n      env = 'master-pro';\r\n      break;\r\n    case 'LIVE':\r\n      env = 'live';\r\n      break;\r\n    default:\r\n      env = 'master';\r\n  }\r\n\r\n  let urlToFile = arrWithData.join('/').concat('.js');\r\n  return `node launcher.js --env ${env} -d ${urlToFile}`;\r\n\r\n};\r\n\r\nconst getAllStepsFromFullBase = (consumerBase, proBase, pathToFile) => {\r\n\r\n  let arrWithSteps = [];\r\n\r\n  if (pathToFile.includes('CONSUMER')) {\r\n    for (let i = 0; i < consumerBase.length; i++) {\r\n      if (consumerBase[i][0] === pathToFile) {\r\n        // eslint-disable-next-line no-loop-func\r\n        consumerBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n          arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  } else if (pathToFile.includes('PRO')) {\r\n    for (let i = 0; i < proBase.length; i++) {\r\n      if (proBase[i][0] === pathToFile) {\r\n        // eslint-disable-next-line no-loop-func\r\n        proBase[i][1].forEach(arrWithUCWithStepInDescriptor => {\r\n          arrWithSteps.push(arrWithUCWithStepInDescriptor[0]);\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arrWithSteps;\r\n};\r\n\r\nconst returnUC_StepsFromFile = (describeTag_arr, consumerBase, proBase, directoryPath) => {\r\n\r\n  let arrWithSteps = [];\r\n  let arrWithCleanSteps = [];\r\n\r\n  if (describeTag_arr.includes('Step')) {\r\n    arrWithSteps = getAllStepsFromFullBase(consumerBase, proBase, directoryPath);\r\n  }\r\n\r\n  // prepare steps to show in collapse dialog\r\n  if (0 in arrWithSteps) {\r\n    arrWithSteps.forEach(step => {\r\n\r\n      // mark step which must be highlighted\r\n      const reg = new RegExp(describeTag_arr);\r\n      if (reg.test(step)) {\r\n        step = step.concat('_XOXO');\r\n      }\r\n      arrWithCleanSteps.push(step.match(/Step.+/gmi, '')[0]);\r\n    });\r\n\r\n    // sorting arr for steps. Steps with numeration higher then 9 can not be first in arr but last.\r\n    const reg2 = new RegExp(/ [0-9]of/);\r\n    const newArr1 = [];\r\n    const newArr2 = [];\r\n\r\n    arrWithCleanSteps.forEach((step) => {\r\n      if (reg2.test(step)) {\r\n        newArr1.push(step);\r\n      } else {\r\n        newArr2.push(step);\r\n      }\r\n    });\r\n\r\n    newArr1.sort();\r\n    newArr2.sort();\r\n    return arrWithCleanSteps = [...newArr1, ...newArr2];\r\n  }\r\n\r\n}\r\n\r\nconst getItemFromLocalStorage = (key) => JSON.parse(localStorage.getItem(key));\r\n\r\nconst setItemInLocalStorage = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n\r\nconst checkThisUseCase = (id, checkOrFocus) => async () => {\r\n\r\n  if(!(getItemFromLocalStorage('itemsState'))) {\r\n    const itemsState_obj = {};\r\n    itemsState_obj[id] = {};\r\n    itemsState_obj[id][checkOrFocus] = true;\r\n    setItemInLocalStorage('itemsState',itemsState_obj);\r\n  } else {\r\n    const itemsState_obj = getItemFromLocalStorage('itemsState');\r\n    if(itemsState_obj[id]) {\r\n      itemsState_obj[id][checkOrFocus] = !itemsState_obj[id][checkOrFocus];\r\n    } else {\r\n      itemsState_obj[id] = {};\r\n      itemsState_obj[id][checkOrFocus] = true;\r\n    }\r\n    setItemInLocalStorage('itemsState',itemsState_obj);\r\n  }\r\n}\r\n\r\nexport {\r\n  preventActionHandler,\r\n  saveToClipboard,\r\n  returnLinkToJenkinsJob,\r\n  prepareHTMLOfSearchResults,\r\n  getUrlToImageInFirebase,\r\n  randomNum,\r\n  returnUseCaseNameBody_arr,\r\n  returnUseCaseTagName_arr,\r\n  getRidOfTagName,\r\n  returnKeyWords_obj,\r\n  returnHashTags_arr,\r\n  returnUseCaseID_str,\r\n  returnRunCommand,\r\n  firstLetterToUpperCase,\r\n  changeAllSemicolonsToDots,\r\n  changeAllVerticalLinesToSlash,\r\n  returnUC_StepsFromFile,\r\n  checkThisUseCase,\r\n  getItemFromLocalStorage\r\n  // checked\r\n}","import React from 'react';\r\nimport {randomNum} from '../helpers/helperFunctions';\r\n\r\nexport default class BreadcrumbItems extends React.Component {\r\n\r\n  stopPropagation = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  mainDirectory = this.props.mainDirectory;\r\n  fileName = this.props.fileName;\r\n  env = this.props.env;\r\n  useCaseID = this.props.useCaseID;\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod\">ENV:<span\r\n          className=\"environment_mod\">{this.env}</span></div>\r\n\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod jenkins-label_mod\">JOB ON JENKINS:\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             className=\"jenkins-link_mod\"\r\n             onClick={this.stopPropagation}\r\n             href={this.mainDirectory[1]}\r\n          >{this.mainDirectory[0]}\r\n          </a>\r\n        </div>\r\n\r\n        <div key={this.useCaseID + randomNum()} className=\"breadcrumb-link_mod github-label_mod\">FILE ON GITHUB:\r\n          <a target=\"_blank\"\r\n             rel=\"noopener noreferrer\"\r\n             className=\"github-link_mod\"\r\n             onClick={this.stopPropagation}\r\n             href={this.fileName[1]}>{this.fileName[0]}</a>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, InputGroup} from 'reactstrap';\r\nimport {saveToClipboard} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemFooter extends React.Component {\r\n\r\n  uc = this.props.uc;\r\n  useCaseID = this.props.useCaseID;\r\n  runCommand = this.props.runCommand;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"collapse-inputGroup_mod\">\r\n\r\n        <InputGroup size=\"sm\">\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`useCaseInput_${this.useCaseID}`}\r\n                  onClick={saveToClipboard()}>Copy Search ID</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.useCaseID}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                 id={`useCaseInput_${this.useCaseID}`}/>\r\n\r\n        </InputGroup>\r\n\r\n        <InputGroup size=\"sm\">\r\n          {/*<Label className=\"jumbotron-label_mod\">USE CASE:</Label>*/}\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`useCaseInput_${this.uc}`}\r\n                  onClick={saveToClipboard()}>Copy Use Case name</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.uc}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-one_mod shadow-none\"\r\n                 id={`useCaseInput_${this.uc}`}/>\r\n\r\n        </InputGroup>\r\n\r\n        <InputGroup size=\"sm\">\r\n          <Button color=\"success\"\r\n                  size=\"sm\"\r\n                  outline\r\n                  className=\"collapse-button_mod\"\r\n                  value={`runThisUCInput_${this.uc}`}\r\n                  onClick={saveToClipboard()}>Copy run command</Button>\r\n          <Input placeholder=\"\"\r\n                 type=\"text\"\r\n                 spellCheck=\"false\"\r\n                 value={this.runCommand}\r\n                 readOnly\r\n                 className=\"collapse-input_mod collapse-input-two_mod shadow-none\"\r\n                 id={`runThisUCInput_${this.uc}`}/>\r\n\r\n        </InputGroup>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {getItemFromLocalStorage, checkThisUseCase, randomNum} from '../helpers/helperFunctions';\r\nimport {Input} from \"reactstrap\";\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  defaultDescribeTagName_arr = ['UseCase:'];\r\n  chosenKeyWords = this.props.chosenKeyWords;\r\n  useCaseID = this.props.useCaseID;\r\n  onBreadcrumbClickHandler = this.props.onBreadcrumbClickHandler;\r\n  allHashTags = this.props.hashTags;\r\n  describeTag = this.props.describeTag;\r\n  image_url = this.props.image_url;\r\n  useCaseBody_str = this.props.uc;\r\n  keyWords = this.props.keyWords;\r\n  directoryPath = this.props.directoryPath;\r\n\r\n  checked = (useCaseID, checkOrFocus) => {\r\n    const itemsState_obj = getItemFromLocalStorage('itemsState');\r\n    if(itemsState_obj){\r\n      if(itemsState_obj[useCaseID]){\r\n        return itemsState_obj[useCaseID][checkOrFocus];\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeArraysWithKeyWords = (keyWords) => [...keyWords.keyWords1, ...keyWords.keyWords2, ...keyWords.keyWords3];\r\n\r\n  render() {\r\n    const ordinalNumber = this.props.ordinalNumber;\r\n\r\n    return (\r\n      <div className={this.checked(this.useCaseID, 'focused')? \"breadcrumb-header focused\": \"breadcrumb-header\"}>\r\n\r\n        <Input type=\"checkbox\"\r\n               id=\"uc_done\"\r\n               onChange={checkThisUseCase(this.useCaseID, 'checked')}\r\n               defaultChecked={this.checked(this.useCaseID, 'checked')}\r\n        />\r\n        <Input type=\"checkbox\"\r\n               id=\"uc_focused\"\r\n               onChange={checkThisUseCase(this.useCaseID, 'focused')}\r\n               defaultChecked={this.checked(this.useCaseID, 'focused')}\r\n        />\r\n\r\n        <div className=\"breadcrumb-item-mod\"\r\n             onClick={this.onBreadcrumbClickHandler(this.useCaseBody_str, this.directoryPath, this.describeTag, this.image_url)}>\r\n          <span className=\"item-number_mod\">{ordinalNumber}.</span>\r\n\r\n        <div className=\"use_case-text_mod\">\r\n          <Highlighter\r\n            className={this.useCaseBody_str.length > 140 ? 'list-text_mod2' : 'list-text_mod1'}\r\n            highlightClassName=\"highlight-describeTag\"\r\n            // searchWords={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)}\r\n            searchWords={this.defaultDescribeTagName_arr}\r\n            autoEscape={true}\r\n            // textToHighlight={this.showTagIfOpen(uc, describeTag_arr, describeTag_View)[0]}\r\n            textToHighlight={this.defaultDescribeTagName_arr[0]}\r\n          />\r\n          <Highlighter\r\n            className={this.useCaseBody_str.length > 140 ? 'list-text_mod2 font-roboto' : 'list-text_mod1 font-roboto'}\r\n            highlightClassName=\"highlight-text\"\r\n            searchWords={this.props.wantedWords}\r\n            autoEscape={true}\r\n            textToHighlight={this.useCaseBody_str}\r\n          />\r\n        </div>\r\n        </div>\r\n        <div className=\"item-footer-mod\">\r\n\r\n          <div className=\"hashtags-title-mod\">HASHTAGS:\r\n            {this.allHashTags ? this.allHashTags.map(singleTag => {\r\n              return <span key={singleTag + randomNum()} className=\"hashtag-item-mod\"> {singleTag} </span>;\r\n            }) : null}\r\n          </div>\r\n\r\n          <div className=\"hashtags-title-mod\">UC SEARCH ID:\r\n            <span key={randomNum()} className=\"hashtag-item-mod\"> {this.useCaseID} </span>\r\n          </div>\r\n\r\n          <div className=\"keywords-title-mod\">KEY WORDS:\r\n            {this.mergeArraysWithKeyWords(this.keyWords).map(singleKeyWord => {\r\n              return <Highlighter\r\n                key={singleKeyWord + randomNum()}\r\n                className=\"keyword-item-mod\"\r\n                highlightClassName=\"highlight-text\"\r\n                searchWords={this.chosenKeyWords ? this.chosenKeyWords : []}\r\n                autoEscape={true}\r\n                textToHighlight={singleKeyWord}\r\n              />;\r\n            })}\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}","import React from 'react';\r\nimport {randomNum} from '../helpers/helperFunctions';\r\n\r\nexport default class ResultItemHeader extends React.Component {\r\n\r\n  steps = this.props.steps;\r\n  classesForSteps = this.props.classesForSteps;\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"steps-section\">\r\n        {this.steps.length ?\r\n          <div className=\"collapse-steps collapse-descriptors test-description margin-bottom\">\r\n            {<div className=\"test-description-title\">TEST DESCRIPTION</div>}\r\n            {this.steps.map(step => {\r\n              return (<div key={step + String(randomNum())}\r\n                           className={this.classesForSteps(step)}>{step}</div>);\r\n            })}\r\n          </div> : null}\r\n\r\n        {/*{this.state.arrOfAllSteps.length ? <div className=\"collapse-steps collapse-descriptors test-description\">*/}\r\n        {/*  <div className=\"test-description-title\">OTHER USE CASES (tests which are called \"Steps\") IN FILE {this.state.fileName}.js:</div>*/}\r\n        {/*  {this.state.arrOfAllSteps.map(step => {*/}\r\n        {/*    const reg = new RegExp(/_XOXO/);*/}\r\n        {/*    return <div key={step} className={reg.test(step) ? 'collapse-step_mod1' : 'collapse-step_mod2'}>{step.replace(/_XOXO/, '')}</div>;*/}\r\n        {/*  })}*/}\r\n        {/*</div> : null}*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Breadcrumb, Card, CardBody, Col, Collapse, Row} from 'reactstrap';\r\nimport BreadcrumbItems from './BreadcrumbItems';\r\nimport ResultItemFooter from './ResultItemFooter';\r\nimport ResultItemHeader from './ResultItemHeader';\r\nimport ResultItemStepsSection from './ResultItemStepsSection';\r\nimport {returnUC_StepsFromFile} from '../helpers/helperFunctions';\r\nimport firebase from '@firebase/app';\r\nimport '@firebase/storage';\r\n\r\nexport default class SearchResultItems extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    // localStorage.setItem('itemsState', JSON.stringify({}))\r\n  }\r\n\r\n  state = {\r\n    shouldBeOpen: '',\r\n    isOpen: false,\r\n    arrOfAllSteps: []\r\n  };\r\n\r\n  onBreadcrumbClickHandler = (uc, directoryPath, describeTag_arr, image_url) => async () => {\r\n\r\n    // close item if is open\r\n    if (this.state.isOpen) {\r\n      let elem = await document.querySelector('.list-item_mod .show');\r\n      if (elem) await elem.classList.remove('show');\r\n      this.setState({\r\n        isOpen: false\r\n      });\r\n    }\r\n\r\n    this.getImageFromFirebaseStorage(uc, image_url);\r\n\r\n    // set: if you clicked different item set uc name in state, if the same then clean state (rerender run onBreadcrumbClickHandler once again and .show class will be removed)\r\n    // set: change isOpen state after each click (rerender) on opposite\r\n    // set: load all steps of clicked item\r\n    await this.setState(() => {\r\n      return {\r\n        shouldBeOpen: uc !== this.state.shouldBeOpen ? uc : '',\r\n        isOpen: !this.state.isOpen,\r\n        arrOfAllSteps: this.state.isOpen === false ? returnUC_StepsFromFile(describeTag_arr, this.props.consumerBase, this.props.proBase, directoryPath): []\r\n      };\r\n    });\r\n\r\n  };\r\n\r\n  getImageFromFirebaseStorage = async (name, image_url) => {\r\n\r\n    console.log('typeof image_url: ', typeof image_url, JSON.stringify(image_url, null, 4));\r\n\r\n    if (!this.state.isOpen && !this.state[name]) {\r\n\r\n      console.log('GET STORAGE');\r\n      const storage = firebase.storage();\r\n      const pathReference = storage.refFromURL(image_url);\r\n      const firebaseURL = await pathReference.getDownloadURL().then(function (url) {\r\n\r\n        return url;\r\n      }).catch(function (error) {\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n\r\n        console.log('typeof error.code: ', typeof error.code, JSON.stringify(error.code, null, 4));\r\n      });\r\n\r\n      await this.setState({\r\n        [name]: firebaseURL || 'https://firebasestorage.googleapis.com/v0/b/use-cases-search.appspot.com/o/greta.jpg?alt=media&token=23552523-53c9-418c-a9dd-a7887cd46236'\r\n      });\r\n    }\r\n  };\r\n\r\n  shouldBeOpen = (key) => {\r\n    if (key === this.state.shouldBeOpen) {\r\n      return 'show';\r\n    }\r\n  };\r\n\r\n  classesForSteps = (step) => {\r\n\r\n    let classStr = '';\r\n\r\n    if (step.includes('BEFORE:')) classStr = 'before-class';\r\n    if (step.includes('STEP ')) classStr = 'step-class';\r\n    if (step.includes('END:')) classStr = 'end-class';\r\n    if (step.includes('ASSERT:')) classStr = 'assert-class';\r\n\r\n    return `collapse-step_mod2 ${classStr}`;\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    return (this.props.searchResult_arr && this.props.searchResult_arr.map(arr => {\r\n\r\n        return (\r\n\r\n          <Row key={arr[0]}>\r\n            <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n\r\n              <Breadcrumb className=\"list-item_mod\">\r\n\r\n                <ResultItemHeader\r\n                  uc={arr[1].useCaseBody}\r\n                  useCaseID={arr[1].useCaseID}\r\n                  hashTags={arr[1].hashTags}\r\n                  keyWords={arr[1].keyWords}\r\n                  describeTag={arr[1].describeTag}\r\n                  image_url={arr[1].image_url}\r\n                  directoryPath={arr[1].directoryPath}\r\n                  wantedWords={this.props.wantedWords}\r\n                  chosenKeyWords={this.props.chosenKeyWords}\r\n                  ordinalNumber={arr[1].ordinalNumber}\r\n                  onBreadcrumbClickHandler={this.onBreadcrumbClickHandler}/>\r\n\r\n                <div className=\"collapse-card-mod\">\r\n                  <Collapse className={this.shouldBeOpen(arr[1].useCaseBody)}>\r\n                    <Card>\r\n                      <CardBody>\r\n                        <BreadcrumbItems\r\n                          useCaseID={arr[1].useCaseID}\r\n                          mainDirectory={arr[1].mainDirectory}\r\n                          fileName={arr[1].fileName}\r\n                          env={arr[1].env}\r\n                        />\r\n\r\n                        <div className=\"uc-description_and_image-section\">\r\n                          <ResultItemStepsSection steps={arr[1].steps}\r\n                                                  classesForSteps={this.classesForSteps}/>\r\n\r\n                          <div className=\"use-case-image\">\r\n                            {<img src={this.state[arr[1].useCaseBody]} alt={arr[1].useCaseBody}/>}\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                        <ResultItemFooter\r\n                          uc={arr[1].useCaseBody}\r\n                          useCaseID={arr[1].useCaseID}\r\n                          runCommand={arr[1].runCommand}\r\n                        />\r\n\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Collapse>\r\n                </div>\r\n\r\n              </Breadcrumb>\r\n\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })\r\n    );\r\n\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport {ButtonGroup, Button, Jumbotron} from 'reactstrap';\r\n\r\nexport default class JumbotronComponent extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <Jumbotron fluid className=\"jumbotron_mod\">\r\n\r\n        <h1 className=\"form-mainLabel_mod2\">USE CASES SEARCH</h1>\r\n        {[0] in this.props.searchResult_arr? <ButtonGroup className=\"print_view-button_mod\">\r\n\r\n                                      <Button color=\"primary\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.searchResult_arr)}>Print View of this list\r\n                                      </Button>\r\n\r\n                                      <Button color=\"warning\"\r\n                                              size=\"sm\"\r\n                                              onClick={this.props.createPrintView(this.props.searchResult_arr, 'WITH DESCRIPTIONS')}>WITH DESCRIPTIONS\r\n                                      </Button>\r\n                                  </ButtonGroup>: null}\r\n\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from 'reactstrap';\r\n\r\nexport default class CheckboxesComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row className=\"bottom-margin\">\r\n        <Col>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod1\">\r\n            <Badge color={this.props.consumer_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeConsumerChk}\r\n                   id=\"badge1\"\r\n            >CONSUMER\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod1\"}>{this.props.numberOfAllUCforConsumer}</Badge>\r\n          </h3>\r\n\r\n          <h3 className=\"badge-mod badge-env_mod2\">\r\n            <Badge color={this.props.pro_chkbox ? \"success\" : \"warning\"}\r\n                   onClick={this.props.handleChangeProChk}\r\n                   id=\"badge2\"\r\n            >PRO\r\n            </Badge>\r\n            <Badge color=\"danger\" className={\"badge-counter_mod2\"}>{this.props.numberOfAllUCforPro}</Badge>\r\n          </h3>\r\n\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export default function (val) {\r\n  let numberConsumer = 0, numberPro = 0;\r\n  let entries = Object.entries(val);\r\n  let consumerList = [];\r\n  let proList = [];\r\n  let uniqHashTagsForConsumer = new Set();\r\n  let uniqHashTagsForPro = new Set();\r\n\r\n  const returnAllHashTags = (useCase) => {\r\n\r\n    const allHashTags = [];\r\n    const arrOfHashTags = useCase.match(/HSH_[a-zA-Z0-9-_]+;/gmi);\r\n\r\n    if (arrOfHashTags && arrOfHashTags.length) {\r\n      arrOfHashTags.forEach((hashTag) => {\r\n        hashTag = hashTag.replace(/HSH_/, '#').replace(/;/, '');\r\n        allHashTags.push(hashTag);\r\n      });\r\n    }\r\n    return allHashTags\r\n  };\r\n\r\n  entries.forEach(function (arr) {\r\n\r\n    const filePath = arr[0]; // string: path to file: \"CONSUMER%2FGROUPS%2FGENERAL_GROUPS%2Fgroup_uc05\"\r\n    const arrOfUseCasesKeys = Object.keys(arr[1]); // array: files paths: [\"HSH_Settings; !guest; !members; Step 2of7: Members settings; Temporary deactivation of Guest account\", (...)]\r\n\r\n    arr[1] = Object.entries(arr[1]);\r\n\r\n    if (/CONSUMER|LIVE/mi.test(filePath)) {\r\n\r\n      consumerList.push(arr);\r\n\r\n      numberConsumer += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForConsumer.add(hashTag);\r\n      });\r\n\r\n    } else if (/PRO/mi.test(filePath)) {\r\n\r\n      proList.push(arr);\r\n\r\n      numberPro += arrOfUseCasesKeys.length;\r\n      let allHashTags = returnAllHashTags(arrOfUseCasesKeys[0]);\r\n      allHashTags.forEach(hashTag => {\r\n        uniqHashTagsForPro.add(hashTag);\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n  return {\r\n    base: entries,\r\n    consumerList: consumerList,\r\n    proList: proList,\r\n    numberOfAllUCforConsumer: numberConsumer,\r\n    numberOfAllUCforPro: numberPro,\r\n    uniqHashTagsForConsumer: [...uniqHashTagsForConsumer],\r\n    uniqHashTagsForPro: [...uniqHashTagsForPro]\r\n  };\r\n}","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const BadgesComponent = ({chooseHashTag, state}) => {\r\n\r\n  const chosenHashtag = state.hashtag;\r\n  const uniqHashTagsForConsumer = state.uniqHashTagsForConsumer;\r\n  const uniqHashTagsForPro = state.uniqHashTagsForPro;\r\n\r\n  const consumer_chkbox = state.consumer_chkbox;\r\n  const pro_chkbox = state.pro_chkbox;\r\n\r\n  const consumer_hashTags_exist = uniqHashTagsForConsumer && uniqHashTagsForConsumer.length;\r\n  const consumer =  consumer_hashTags_exist && consumer_chkbox && pro_chkbox === false;\r\n\r\n  const pro_hashTags_exist = uniqHashTagsForPro && uniqHashTagsForPro.length;\r\n  const pro =  pro_hashTags_exist && consumer_chkbox === false && pro_chkbox;\r\n\r\n  const handleChooseHashtag = (e) => {\r\n    let chosenHashtag = e.target.innerText;\r\n    return chooseHashTag(chosenHashtag)();\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          consumer ? (\r\n            uniqHashTagsForConsumer.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n\r\n              )\r\n            })\r\n          ) : pro ? (\r\n            uniqHashTagsForPro.map(hashtag => {\r\n              return (\r\n                <h5 className=\"badge-mod\" key={hashtag}>\r\n                  <Badge onClick={handleChooseHashtag}\r\n                         color={hashtag === chosenHashtag ? \"success\" : \"warning\"}\r\n                  >{hashtag}\r\n                  </Badge>\r\n                </h5>\r\n              )\r\n            })\r\n          ): null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BadgesComponent;","import React from 'react';\r\nimport {Badge, Col, Row} from \"reactstrap\";\r\n\r\nexport const KeyWordsComponent = ({keyWords = {}, returnChosenKeyWords, chosenKeyWords = [], chosenHashTag}) => {\r\n\r\n  const collectAllKeyWords = (e) => {\r\n    let keyWord = e.target.innerText;\r\n    return returnChosenKeyWords(keyWord);\r\n  };\r\n\r\n  const keyWord1 = keyWords.keyWords1;\r\n  const keyWord2 = keyWords.keyWords2;\r\n  const keyWord3 = keyWords.keyWords3;\r\n\r\n  // arr.sort();\r\n\r\n  return (\r\n    <Row className=\"bottom-margin\">\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n\r\n        {\r\n          keyWord1 ? keyWord1.map(keyWord => {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={keyWord}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{keyWord}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n          ) : null\r\n        }\r\n\r\n        {\r\n          keyWord2 ? keyWord2.map(keyWord => {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={keyWord}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{keyWord}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n          ) : null\r\n        }\r\n\r\n        {\r\n          keyWord3 ? keyWord3.map(keyWord => {\r\n              return (\r\n                <div className=\"badge-mod h5x\" key={keyWord}>\r\n                  <Badge onClick={collectAllKeyWords}\r\n                         className={chosenKeyWords.includes(keyWord) ? \"keywords-badge_mod2\" : \"keywords-badge_mod1\"}\r\n                  >{keyWord}\r\n                  </Badge>\r\n                </div>\r\n              )\r\n            }\r\n          ) : null\r\n        }\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default KeyWordsComponent;","import React from 'react';\r\nimport {Button, ButtonGroup, Col, Row} from \"reactstrap\";\r\n\r\nexport default class KeyWordsConnectorComponent extends React.Component {\r\n\r\n  clickHandler = (connector) => (e)=> {\r\n    e.preventDefault();\r\n    return this.props.getBackConnector(connector);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      this.props.chosenHashTag ? (\r\n        <Row className=\"bottom-margin\">\r\n          <Col sm=\"12\" md={{size: 8, offset: 2}}>\r\n            <div className=\"blue-color font-weight-bolder search-connector_text\">KEY WORD CONNECTOR\r\n            </div>\r\n            <ButtonGroup >\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons or-mod\"\r\n                      active={this.props.connector === 'OR'} onClick={this.clickHandler('OR')}>OR</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.props.connector === 'WITH'} onClick={this.clickHandler('WITH')}>WITH</Button>\r\n              <Button outline color=\"primary\" className=\"search-connector-buttons\"\r\n                      active={this.props.connector === 'WITHOUT'} onClick={this.clickHandler('WITHOUT')}>WITHOUT</Button>\r\n            </ButtonGroup>\r\n            <div className=\"blue-color font-weight-bolder margin-top\"> </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      ) : null\r\n\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Col, Input, Row} from \"reactstrap\";\r\nimport {preventActionHandler} from \"../helpers/helperFunctions\";\r\n\r\nconst SearchInputComponent = ({multipleFuncOnChangeHandler, name}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md={{size: 8, offset: 2}} className=\"form-input_mod\">\r\n        <Input type=\"search\" spellCheck=\"false\" value={name} name=\"search\" id=\"useCasesSearch\"\r\n               bsSize=\"lg\"\r\n               placeholder=\"Narrow down the results...\"\r\n               onChange={multipleFuncOnChangeHandler}\r\n               onKeyPress={preventActionHandler}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchInputComponent;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nconst SearchButtonComponent = ({visibility, color, executeFunc, name}) => {\r\n\r\n    return (\r\n      !visibility ? (\r\n        <Button color={color} className={name === \"✕ reset all\"? \"form-button_mod x-button_mod\": \"form-button_mod\"}\r\n                onClick={executeFunc}>{name}\r\n        </Button>\r\n      ) : null\r\n    )\r\n\r\n}\r\n\r\nexport default SearchButtonComponent;","import React from 'react';\r\n\r\nexport default class ResultNumberTextComponent extends React.Component {\r\n\r\n  render() {\r\n    const numberOfFoundUseCases = this.props.searchResult_arr.length;\r\n    const readyToProceed = this.props.readyToProceed;\r\n\r\n    return (\r\n      numberOfFoundUseCases ? <div className=\"result-numbersOfItems_mod\">Found: {numberOfFoundUseCases}</div> : !readyToProceed? <div className=\"red-color font-weight-bolder\">NO RESULT</div>: ''\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nconst InstructComponent = ({text}) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"blue-color font-weight-bolder\">{text}</h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InstructComponent;","import React from 'react';\r\n\r\nexport default class SearchAlgorithmTextComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    let connector = this.props.state.connector;\r\n    let keyWords = this.props.state.chosenKeyWords;\r\n    let wantedWords = this.props.state.name;\r\n    let arrOfWantedWords = wantedWords ? wantedWords.split(' ') : null;\r\n\r\n    return (\r\n      <div className=\"all-algorithms\">\r\n        {/*<h6 id=\"env-algorithm-text\" className=\"algorithm-text\">{this.categoriesOfEnvironment(this.props.state)}</h6>*/}\r\n        {/*<h6 id=\"hash_tags-algorithm-text\" className=\"algorithm-text\">{this.kindOfHashTag(this.props.state)}</h6>*/}\r\n\r\n        {\r\n          keyWords ?\r\n            (<h5 id=\"key_words-algorithm-text\" className=\"algorithm-text\">\r\n              {\r\n                keyWords.length && connector === 'WITHOUT' ?\r\n                  (<span>Show all Use Cases<span className=\"algorithm-only_mod\"> WITHOUT </span>\r\n                        <span>{keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'WITH' ?\r\n                  (<span>Show Use Cases with\r\n                        <span>{keyWords.length > 1 ? <span> ALL of these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span> this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {\r\n                keyWords.length && connector === 'OR' ?\r\n                  (<span>Show Use Cases<span className=\"algorithm-only_mod\"> ONLY </span>\r\n                      <span> with {keyWords.length > 1 ? <span>these<span className=\"algorithm-only_mod\"> key words: </span></span> : <span>this<span className=\"algorithm-only_mod\"> key word: </span></span>}</span>\r\n                    </span>\r\n                  ) : null\r\n              }\r\n\r\n              {keyWords.map((keyWord, index, arr) => {\r\n                return <span className=\"algorithm-keyWord_mod\" key={keyWord}>\"{keyWord}\"{(index !== arr.length - 1) ?\r\n                  <span className=\"algorithm-only_mod\"> {connector === 'WITHOUT' ? 'AND' : connector} </span> : ''}</span>\r\n              })\r\n\r\n              }\r\n\r\n            </h5>) : null\r\n        }\r\n\r\n        {arrOfWantedWords ? (\r\n          <h6 id=\"wanted_words-algorithm-text\" className=\"algorithm-text\">\r\n            {arrOfWantedWords.length > 1 ? <span>Narrow down the results to UCs with words: </span> :\r\n              <span>Narrow down the results to UCs with word: </span>}\r\n            {arrOfWantedWords.map((word, index, arr) => {\r\n              return <span className=\"algorithm-wantedWords_mod\" key={word}>\"{word}\"{(index !== arr.length - 1) ?\r\n                <span className=\"algorithm-only_mod\"> AND </span> : ' '}</span>\r\n            })}\r\n            <span className=\"algorithm-only_mod\">in title.</span>\r\n          </h6>\r\n\r\n        ) : null}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import {\r\n  changeAllSemicolonsToDots,\r\n  changeAllVerticalLinesToSlash,\r\n  firstLetterToUpperCase,\r\n  getRidOfTagName,\r\n  returnHashTags_arr,\r\n  returnKeyWords_obj,\r\n  returnUseCaseID_str,\r\n  returnUseCaseNameBody_arr,\r\n  returnUseCaseTagName_arr,\r\n  returnRunCommand,\r\n  returnLinkToJenkinsJob,\r\n  getUrlToImageInFirebase\r\n} from \"./helperFunctions\";\r\n\r\nconst returnBaseDividedOnCategories = (state) => {\r\n\r\n  let base;\r\n\r\n  if (state.consumer_chkbox && state.pro_chkbox === false) base = state.consumerList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox) base = state.proList;\r\n  if (state.consumer_chkbox === false && state.pro_chkbox === false) base = [];\r\n  if (state.consumer_chkbox && state.pro_chkbox) base = state.base;\r\n\r\n  return base;\r\n};\r\n\r\n\r\nconst removeSpacesFunc = (word) => word ? word.replace(/^\\s+|\\s+$/g, \"\").replace(/\\s+/g, \" \") : null;\r\n\r\nconst getLowerCaseFunc = (character) => character.toLowerCase();\r\n\r\nconst createArrayOfKeyWords = (string) => {\r\n  return string.split(' ');\r\n};\r\n\r\nconst returnNotEmptyValues = (searchValue) => {\r\n  if (searchValue) {\r\n    let arr = createArrayOfKeyWords(searchValue);\r\n    arr = arr.filter(function (el) {\r\n      return el !== null && el !== \"\";\r\n    });\r\n    return arr;\r\n  }\r\n  return [];\r\n};\r\n\r\nconst returnAllUseCasesWithWantedTag = (base, tag) => {\r\n\r\n  if (tag) {\r\n    console.log('returnAllUseCasesWithWantedTag');\r\n    tag = tag.replace(/#/, '');\r\n\r\n    let ucArr = new Set();\r\n    let updatedBase = [];\r\n    const reg = new RegExp(`HSH_${tag}`);\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n    return updatedBase;\r\n  }\r\n\r\n  return base;\r\n};\r\n\r\nconst returnAllUseCasesWithWantedKeyWords = (base, chosenKeyWords, connector) => {\r\n\r\n  let ucArr = new Set();\r\n  let updatedBase = [];\r\n\r\n  if (connector === 'OR') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`1_${keyWord};|2_${keyWord};|3_${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITHOUT') {\r\n\r\n    const returnRegExp = (chosenKeyWords) => {\r\n      let regExp = '';\r\n      chosenKeyWords.forEach((keyWord, index, arr) => {\r\n        regExp += (`1_${keyWord};|2_${keyWord};|3_${keyWord}; ${index !== arr.length - 1 ? '|' : ''}`)\r\n      });\r\n      return regExp;\r\n    };\r\n\r\n    const reg = new RegExp(returnRegExp(chosenKeyWords));\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        if (!reg.test(uc)) ucArr.add(uc);\r\n\r\n      });\r\n\r\n      if (ucArr.size) updatedBase.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n    });\r\n\r\n  } else if (connector === 'WITH') {\r\n\r\n    let ucSet = new Set();\r\n\r\n    base.forEach(arrOfUC => {\r\n\r\n      arrOfUC[1].forEach(uc => {\r\n\r\n        let passed = chosenKeyWords.every(keyWord => {\r\n          const regExp = `1_${keyWord};|2_${keyWord};|3_${keyWord};`;\r\n          const reg = new RegExp(regExp);\r\n          return reg.test(uc);\r\n        });\r\n\r\n        if (passed) ucSet.add(uc);\r\n\r\n      });\r\n\r\n      if (ucSet.size) updatedBase.push([arrOfUC[0], [...ucSet]]);\r\n      ucSet = new Set();\r\n\r\n    });\r\n\r\n  }\r\n  return updatedBase;\r\n};\r\n\r\nconst returnAllKeyWords = (base) => {\r\n\r\n  // base - array of nested arrays. Each of them has arr of UCs on second position\r\n\r\n  const keyWords1 = new Set();\r\n  const keyWords2 = new Set();\r\n  const keyWords3 = new Set();\r\n\r\n  // 1. Create array of all key words in use cases - now they are not uniq.\r\n\r\n  if (base.length) {\r\n    base.forEach((nestedArr) => {\r\n      nestedArr[1].forEach((useCase) => {\r\n\r\n        if(/1_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/1_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('1_', '').replace(';', ''));\r\n            keyWords1.add(...words);\r\n          }\r\n        }\r\n\r\n        if(/2_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/2_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('2_', '').replace(';', ''));\r\n            keyWords2.add(...words);\r\n          }\r\n        }\r\n\r\n        if(/3_/.test(useCase[0])){\r\n\r\n          let words = useCase[0].match(/3_[a-zA-Z0-9_-]+;/gmi);\r\n\r\n          if(words){\r\n            words = words.map(word=> word.replace('3_', '').replace(';', ''));\r\n            keyWords3.add(...words);\r\n          }\r\n        }\r\n\r\n      })\r\n    });\r\n\r\n    // 2. Calculate how many not uniq words are in array -this will be our 100% (total)\r\n    // const oneHundredPercent = arrOfAllKeyWords.length;\r\n\r\n    // 3. Count: how many times each keyWord appears for a given HashTag\r\n    // const objWithCountedWords = countWords(arrOfAllKeyWords);\r\n\r\n    // 4. Calculate percentage for each keyWord in relation to total -return object with these values\r\n    // return returnPercentageOfEachKeyWord(objWithCountedWords, countPercent, oneHundredPercent);\r\n\r\n    return {\r\n      keyWords1: [...keyWords1],\r\n      keyWords2: [...keyWords2],\r\n      keyWords3: [...keyWords3]\r\n    }\r\n\r\n  }\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifOneWord = (base, searchValue) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n  let wantedValue = '';\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(arrWithUC => {\r\n\r\n      const uc = arrWithUC[0];\r\n\r\n      wantedValue = getLowerCaseFunc(searchValue);\r\n      wantedValue = removeSpacesFunc(wantedValue);\r\n\r\n      if (getLowerCaseFunc(uc).search(wantedValue) !== -1) ucArr.add(arrWithUC);\r\n\r\n    });\r\n\r\n    if (ucArr.size) updatedList.push([arrOfUC[0], [...ucArr]]);\r\n    ucArr = new Set();\r\n  });\r\n\r\n  return {updatedList, wantedValue};\r\n};\r\n\r\nconst returnUpdatedListOfUseCases_ifMoreThenOneWord = (base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord) => {\r\n\r\n  let updatedList = [];\r\n  let ucArr = new Set();\r\n\r\n  base.forEach(arrOfUC => {\r\n\r\n    arrOfUC[1].forEach(\r\n      function (arrWithUC) {\r\n\r\n        const uc = arrWithUC[0];\r\n\r\n        if (getLowerCaseFunc(uc).search(firstKeyWord) !== -1) {\r\n          if (!arrOfKeyWords[1]) {\r\n            ucArr.add(arrWithUC);\r\n          }\r\n\r\n          if (arrOfKeyWords[1]) {\r\n            if (getLowerCaseFunc(uc).search(secondKeyWord) !== -1) {\r\n\r\n              if (!arrOfKeyWords[2]) {\r\n                ucArr.add(arrWithUC);\r\n              } else if (arrOfKeyWords[1] && arrOfKeyWords[2]) {\r\n\r\n                if (getLowerCaseFunc(uc).search(thirdKeyWord) !== -1) {\r\n                  ucArr.add(arrWithUC);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    if (ucArr.size) {\r\n      updatedList.push([arrOfUC[0], [...ucArr]]);\r\n      ucArr = new Set();\r\n      // TARGET\r\n    }\r\n  });\r\n\r\n  return updatedList;\r\n};\r\n\r\nconst createObjectWithSearchResult = (base) => {\r\n\r\n  const result = [];\r\n  let number = 0;\r\n\r\n  base.forEach(arr => {\r\n\r\n    const path = arr[0];\r\n    const arrWithData = path.split(/%5C|%2F/);\r\n    const fileName = `${arrWithData[arrWithData.length - 1]}.js`;\r\n    const runCommand = returnRunCommand(arrWithData);\r\n    const environment = arrWithData[0];\r\n    const mainDirectory = arrWithData[1];\r\n    const githubLinkToFile = `https://github.com/sgrouples/Frontend-E2E-Tests/blob/master/test/specs/${arrWithData.join('/')}.js`;\r\n    const jenkinsLinkToJob = returnLinkToJenkinsJob(mainDirectory, [environment]);\r\n\r\n    arr[1].forEach(fullUC => {\r\n\r\n      if (fullUC[0]) {\r\n\r\n        let uc = changeAllSemicolonsToDots(fullUC[0]);\r\n        uc = changeAllVerticalLinesToSlash(uc);\r\n\r\n        const useCaseID_str = returnUseCaseID_str(uc);\r\n        const imageURL = getUrlToImageInFirebase(arrWithData, useCaseID_str);\r\n        const allHashTags_arr = returnHashTags_arr(uc);\r\n        const allKeyWords_obj = returnKeyWords_obj(uc);\r\n        const describeTag_str = returnUseCaseTagName_arr(uc)[0];\r\n        const useCaseBody_arr = returnUseCaseNameBody_arr(uc);\r\n        const useCaseNameWithoutTag_str = firstLetterToUpperCase(getRidOfTagName(useCaseBody_arr)) + '.';\r\n        if(useCaseID_str) number++;\r\n\r\n        result.push([useCaseID_str, {\r\n          ordinalNumber: number,\r\n          env: environment,\r\n          describeTag: describeTag_str,\r\n          useCaseBody: useCaseNameWithoutTag_str,\r\n          hashTags: allHashTags_arr,\r\n          keyWords: allKeyWords_obj,\r\n          steps: Array.isArray(fullUC[1]) ? fullUC[1] : [],\r\n          mainDirectory: [mainDirectory, jenkinsLinkToJob],\r\n          fileName: [fileName, githubLinkToFile],\r\n          runCommand: runCommand,\r\n          useCaseID: useCaseID_str,\r\n          directoryPath: path,\r\n          image_url: imageURL,\r\n          checked: false,\r\n          focused: false\r\n        }]);\r\n      }\r\n    });\r\n  });\r\n  return result\r\n}\r\n\r\nexport {\r\n  removeSpacesFunc,\r\n  getLowerCaseFunc,\r\n  returnNotEmptyValues,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllKeyWords,\r\n  returnUpdatedListOfUseCases_ifOneWord,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnBaseDividedOnCategories,\r\n  createObjectWithSearchResult\r\n}\r\n","import React from 'react';\r\nimport {ButtonGroup, Container, Form, FormGroup} from 'reactstrap';\r\nimport SearchResultItems from \"./SearchResultItems\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport CheckboxesComponent from \"./CheckboxesComponent\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport firebaseConfig from '../firebaseConfig.js'\r\nimport changeBaseEngine from '../helpers/changeBaseEngine'\r\nimport BadgesComponent from './BadgesComponent'\r\nimport KeyWordsComponent from './KeyWordsComponent'\r\nimport KeyWordsConnectorComponent from './KeyWordsConnectorComponent'\r\nimport SearchInputComponent from './SearchInputComponent'\r\nimport SearchButtonComponent from './SearchButtonComponent'\r\nimport ResultNumberTextComponent from './ResultNumberTextComponent'\r\nimport InstructComponent from './InstructComponent'\r\nimport SearchAlgorithmTextComponent from './SearchAlgorithmTextComponent'\r\nimport {prepareHTMLOfSearchResults} from '../helpers/helperFunctions'\r\nimport {\r\n  createObjectWithSearchResult,\r\n  removeSpacesFunc,\r\n  returnAllKeyWords,\r\n  returnAllUseCasesWithWantedKeyWords,\r\n  returnAllUseCasesWithWantedTag,\r\n  returnBaseDividedOnCategories,\r\n  returnNotEmptyValues,\r\n  returnUpdatedListOfUseCases_ifMoreThenOneWord,\r\n  returnUpdatedListOfUseCases_ifOneWord\r\n} from '../helpers/filterEngine_helpers'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n  collection = new Set();\r\n\r\n  state = {\r\n    initialState: null,\r\n    items: [],\r\n    searchResult_arr: [],\r\n    base: null,\r\n    consumerList: null,\r\n    proList: null,\r\n    name: '',\r\n    wantedWords: [],\r\n    consumer_chkbox: false,\r\n    pro_chkbox: false,\r\n    detailsSwitchView: false,\r\n    readyToProceed: true,\r\n    hashtag: '',\r\n    connector: 'WITH'\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.database().ref('/').once('value').then(snapshot => {\r\n        this.changeBaseToProperForm(snapshot.val())\r\n      }\r\n    )\r\n  }\r\n\r\n  changeBaseToProperForm(val) {\r\n    let changedBase = changeBaseEngine(val);\r\n    changeBaseEngine.showWholeBase = false;\r\n    this.setState(() => changedBase);\r\n  }\r\n\r\n  showSearchValue = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  };\r\n\r\n  clearPreviousView = () => {\r\n    this.setState({\r\n      wantedWords: []\r\n    })\r\n  };\r\n\r\n  resetAllSettings = (e) => {\r\n    e.preventDefault();\r\n    this.setState(() => {\r\n        return {\r\n          consumer_chkbox: false,\r\n          pro_chkbox: false,\r\n          searchResult_arr: [],\r\n          name: '',\r\n          hashtag: '',\r\n          readyToProceed: true,\r\n          chosenKeyWords: [],\r\n          keyWords: [],\r\n          connector: 'WITH'\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  proceedSearching = (e) => {\r\n    let base;\r\n    if(e) e.preventDefault();\r\n    console.log('proceedSearching');\r\n\r\n    if ((this.state.name || this.state.hashtag) && this.state.base) {\r\n\r\n      if (!this.state.hashtagBase) {\r\n\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, this.state.hashtag);\r\n\r\n      } else if (this.state.chosenKeyWords.length) {\r\n        base = returnAllUseCasesWithWantedKeyWords(this.state.hashtagBase, this.state.chosenKeyWords, this.state.connector);\r\n\r\n      } else {\r\n        // divide into consumer, pro, whole, none.\r\n        base = returnBaseDividedOnCategories(this.state);\r\n        base = this.state.hashtag ? this.state.hashtagBase : base;\r\n      }\r\n\r\n      this.setState(() => {\r\n          return {\r\n            readyToProceed: false\r\n          }\r\n        }\r\n      );\r\n\r\n      this.filterList(base, this.state.name);\r\n    }\r\n  };\r\n\r\n  filterList = (base, searchValue = '') => {\r\n\r\n    // clear previous searching result\r\n    this.clearPreviousView();\r\n\r\n    // preparing search key words\r\n    let arrOfKeyWords = returnNotEmptyValues(searchValue);\r\n\r\n    //searching by one word\r\n    if (arrOfKeyWords.length === 1) {\r\n      console.log('searching with ONE word');\r\n\r\n      if (searchValue && searchValue.length >= 3) {\r\n\r\n        const {updatedList, wantedValue} = returnUpdatedListOfUseCases_ifOneWord(base, searchValue);\r\n\r\n        const searchResult_arr = createObjectWithSearchResult(updatedList);\r\n\r\n        console.log('wantedValue: ', wantedValue);\r\n        console.log('updatedList: ', updatedList);\r\n\r\n        // ready results to be rendered\r\n        this.setState({\r\n          wantedWords: [wantedValue],\r\n          searchResult_arr\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // searching by two and three words\r\n    else if (arrOfKeyWords.length > 1) {\r\n\r\n      console.log('searching by two words');\r\n\r\n      let firstKeyWord = removeSpacesFunc(arrOfKeyWords[0]);\r\n      let secondKeyWord = removeSpacesFunc(arrOfKeyWords[1]);\r\n      let thirdKeyWord = removeSpacesFunc(arrOfKeyWords[2]);\r\n\r\n      let wantedWords = [];\r\n\r\n      wantedWords.push(firstKeyWord);\r\n      if (secondKeyWord && secondKeyWord.length > 2) wantedWords.push(secondKeyWord);\r\n      if (thirdKeyWord && thirdKeyWord.length > 2) wantedWords.push(thirdKeyWord);\r\n\r\n      console.log(\"wantedWords:\", wantedWords);\r\n\r\n      if (secondKeyWord || thirdKeyWord) {\r\n\r\n        let updatedList = returnUpdatedListOfUseCases_ifMoreThenOneWord(base, arrOfKeyWords, firstKeyWord, secondKeyWord, thirdKeyWord);\r\n        const searchResult_arr = createObjectWithSearchResult(updatedList);\r\n\r\n        // if something will be wrong with searching with two or more key words move this setState func to TARGET comment place in filterEngine_helpers\r\n        this.setState({\r\n          wantedWords,\r\n          searchResult_arr\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    if (!arrOfKeyWords.length && this.state.hashtag) {\r\n\r\n      const searchResult_arr = createObjectWithSearchResult(base);\r\n\r\n      this.setState(() => {\r\n        return {\r\n          searchResult_arr\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  handleChangeConsumerChk = () => {\r\n    this.setState({\r\n      consumer_chkbox: !this.state.consumer_chkbox,\r\n      pro_chkbox: false,\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      searchResult_arr: [],\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  handleChangeProChk = () => {\r\n    this.setState({\r\n      pro_chkbox: !this.state.pro_chkbox,\r\n      consumer_chkbox: false,\r\n      name: '',\r\n      hashtag: '',\r\n      searchButtonClicked: false,\r\n      readyToProceed: true,\r\n      searchResult_arr: [],\r\n      chosenKeyWords: [],\r\n      keyWords: []\r\n    });\r\n  };\r\n\r\n  createPrintView = (items, func) => () => {\r\n    prepareHTMLOfSearchResults(items, func);\r\n  };\r\n\r\n  chooseHashTag = (hashTagName) => async () => {\r\n\r\n    if (this.state.base) {\r\n\r\n      if (this.state.hashtag === hashTagName) {\r\n        this.setState(() => {\r\n          return {\r\n            keyWords: [],\r\n            hashtag: '',\r\n            chosenKeyWords: []\r\n          }\r\n        })\r\n      } else {\r\n\r\n        this.collection = new Set();\r\n\r\n        let base = returnBaseDividedOnCategories(this.state);\r\n        base = returnAllUseCasesWithWantedTag(base, hashTagName);\r\n        let keyWords = returnAllKeyWords(base);\r\n\r\n        await this.setState(() => {\r\n          return {\r\n            hashtag: this.state.hashtag !== hashTagName ? hashTagName : '',\r\n            hashtagBase: base,\r\n            searchResult_arr: [],\r\n            readyToProceed: true,\r\n            chosenKeyWords: [],\r\n            keyWords\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    this.proceedSearching()\r\n  };\r\n\r\n  returnChosenKeyWords = (keyWord) => {\r\n    if (this.collection.has(keyWord)) {\r\n      this.collection.delete(keyWord)\r\n    } else {\r\n      this.collection.add(keyWord);\r\n    }\r\n    this.setState(() => {\r\n      return {\r\n        searchResult_arr: [],\r\n        readyToProceed: true,\r\n        chosenKeyWords: [...this.collection].sort()\r\n      }\r\n    })\r\n  };\r\n\r\n  getBackConnector = (connector) => {\r\n    this.setState(\r\n      {\r\n        searchResult_arr: [],\r\n        readyToProceed: true,\r\n        connector\r\n      }\r\n    )\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"main-label\">\r\n        <JumbotronComponent name={this.state.name}\r\n                            ucInfoObj={this.state.ucInfoObj}\r\n                            detailsSwitchView={this.state.detailsSwitchView}\r\n                            searchResult_arr={this.state.searchResult_arr}\r\n                            createPrintView={this.createPrintView}\r\n\r\n\r\n        />\r\n\r\n        <Container fluid>\r\n          <Form className=\"form_mod\">\r\n            <FormGroup>\r\n\r\n              <div className=\"instruct-mod\">\r\n\r\n                <InstructComponent text=\"ENVIRONMENT\"/>\r\n                <CheckboxesComponent consumer_chkbox={this.state.consumer_chkbox}\r\n                                     pro_chkbox={this.state.pro_chkbox}\r\n                                     numberOfAllUCforConsumer={this.state.numberOfAllUCforConsumer}\r\n                                     handleChangeConsumerChk={this.handleChangeConsumerChk}\r\n                                     handleChangeProChk={this.handleChangeProChk}\r\n                                     numberOfAllUCforPro={this.state.numberOfAllUCforPro}\r\n                />\r\n\r\n                {this.state.consumer_chkbox || this.state.pro_chkbox ?\r\n                  <div>\r\n                    <InstructComponent text=\"HASHTAGS\"/>\r\n                    <BadgesComponent chooseHashTag={this.chooseHashTag} state={this.state}/>\r\n                  </div> : null\r\n                }\r\n\r\n                <KeyWordsComponent keyWords={this.state.keyWords}\r\n                                   returnChosenKeyWords={this.returnChosenKeyWords}\r\n                                   chosenKeyWords={this.state.chosenKeyWords}\r\n                                   chosenHashTag={this.state.hashtag}\r\n\r\n                />\r\n\r\n                <KeyWordsConnectorComponent\r\n                  // keyWords={this.state.keyWords}\r\n                                            connector={this.state.connector}\r\n                                            chosenHashTag={this.state.hashtag}\r\n                                            getBackConnector={this.getBackConnector}\r\n\r\n                />\r\n\r\n              </div>\r\n\r\n              <SearchInputComponent\r\n                multipleFuncOnChangeHandler={this.showSearchValue}\r\n                name={this.state.name}\r\n              />\r\n\r\n              <SearchAlgorithmTextComponent state={this.state}/>\r\n\r\n              <ButtonGroup>\r\n                <SearchButtonComponent executeFunc={this.proceedSearching}\r\n                                       readyToProceed={this.state.readyToProceed}\r\n                                       color=\"success\"\r\n                                       name={this.state.readyToProceed ? \"search\" : \"re-search again\"}\r\n                />\r\n\r\n                <SearchButtonComponent executeFunc={this.resetAllSettings}\r\n                                       color=\"secondary\"\r\n                                       name=\"✕ reset all\"\r\n                                       visibility={this.state.readyToProceed && !this.state.hashtag}\r\n                />\r\n              </ButtonGroup>\r\n\r\n              <ResultNumberTextComponent searchResult_arr={this.state.searchResult_arr}\r\n                                         readyToProceed={this.state.readyToProceed}\r\n              />\r\n\r\n              <SearchResultItems searchResult_arr={this.state.searchResult_arr}\r\n                                 consumerBase={this.state.consumerList}\r\n                                 proBase={this.state.proList}\r\n                                 wantedWords={this.state.wantedWords}\r\n                                 chosenKeyWords={this.state.chosenKeyWords}\r\n                                 >.</SearchResultItems>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyAZ_b4I7T3sJANfHxuBmBVT7tjdbJ11ons\",\r\n  authDomain: \"use-cases-search.firebaseapp.com\",\r\n  databaseURL: \"https://use-cases-search.firebaseio.com\",\r\n  projectId: \"use-cases-search\",\r\n  storageBucket: \"use-cases-search.appspot.com\",\r\n  messagingSenderId: \"970010596588\",\r\n  appId: \"1:970010596588:web:90ec397eeda2b76f\"\r\n};","import React from 'react';\r\nimport {Col, Container, Row} from 'reactstrap';\r\nimport FormComponent from \"./Components/FormComponent\";\r\n\r\nexport default class MainComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm=\"12\" md={{size: 12, offset: 0}}>\r\n            <FormComponent />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MainComponent from './MainComponent.js';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return <div className=\"App\">\r\n      <MainComponent> </MainComponent>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}